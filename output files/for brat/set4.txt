I would use Javascript to submit the form. The function would be triggered by the OnKeyPress event of the form element, and would detect whether the Enter key was selected. If this is the case, it will submit the form. Here are two pages that give techniques on how to do this: 1, 2. Based on these, here is an example of usage (based on here): <SCRIPT TYPE="text/javascript"><!--function submitenter(myfield,e) { var keycode; if (window.event) { keycode = window.event.keyCode; } else if (e) { keycode = e.which; } else { return true; } if (keycode == 13) { myfield.form.submit(); return false; } else { return true; }}//--></SCRIPT><INPUT NAME="MyText" TYPE="Text" onKeyPress="return submitenter(this,event)" />
How often do you need to check for changes and how large (in terms of row size) are the tables in the database? If you use the CHECKSUM_AGG(BINARY_CHECKSUM(*)) method suggested by John, it will scan every row of the specified table. The NOLOCK hint helps, but on a large database, you are still hitting every row. You will also need to store the checksum for every row so that you tell one has changed. Have you considered going at this from a different angle? If you do not want to modify the schema to add triggers, (which makes a sense, it's not your database), have you considered working with the application vendor that does make the database? They could implement an API that provides a mechanism for notifying accessory apps that data has changed. It could be as simple as writing to a notification table that lists what table and which row were modified. That could be implemented through triggers or application code. From your side, ti wouldn't matter, your only concern would be scanning the notification table on a periodic basis. The performance hit on the database would be far less than scanning every row for changes. The hard part would be convincing the application vendor to implement this feature. Since this can be handles entirely through SQL via triggers, you could do the bulk of the work for them by writing and testing the triggers and then bringing the code to the application vendor. By having the vendor support the triggers, it prevent the situation where your adding a trigger inadvertently replaces a trigger supplied by the vendor.
No, you were not dreaming. Python has a pretty excellent list comprehension system that lets you manipulate lists pretty elegantly, and depending on exactly what you want to accomplish, this can be done a couple of ways. In essence, what you're doing is saying "For item in list if criteria.matches", and from that you can just iterate through the results or dump the results into a new list. I'm going to crib an example from Dive Into Python here, because it's pretty elegant and they're smarter than I am. Here they're getting a list of files in a directory, then filtering the list for all files that match a regular expression criteria. files = os.listdir(path) test = re.compile("test\.py$", re.IGNORECASE) files = [f for f in files if test.search(f)] You could do this without regular expressions, for your example, for anything where your expression at the end returns true for a match. There are other options like using the filter() function, but if I were going to choose, I'd go with this. Eric Sipple
I think: #!/bin/pythonbar in dict(Foo) Is what you are thinking of. When trying to see if a certain key exists within a dictionary in python (python's version of a hash table) there are two ways to check. First is the has_key() method attached to the dictionary and second is the example given above. It will return a boolean value. That should answer your question. And now a little off topic to tie this in to the list comprehension answer previously given (for a bit more clarity). List Comprehensions construct a list from a basic for loop with modifiers. As an example (to clarify slightly), a way to use the in dict language construct in a _list comprehension_: Say you have a two dimensional dictionary foo and you only want the second dimension dictionaries which contain the key bar. A relatively straightforward way to do so would be to use a list comprehension with a conditional as follows: #!/bin/pythonbaz = dict([(key, value) for key, value in foo if bar in value]) Note the if bar in value at the end of the statement, this is a modifying clause which tells the list comprehension to only keep those key-value pairs which meet the conditional. In this case baz is a new dictionary which contains only the dictionaries from foo which contain bar (Hopefully I didn't miss anything in that code example... you may have to take a look at the list comprehension documentation found in docs.python.org tutorials and at secnetix.de, both sites are good references if you have questions in the future.).
Are you looking to get a list of objects that have a certain attribute? If so, a list comprehension is the right way to do this. result = [obj for obj in listOfObjs if hasattr(obj, 'attributeName')]
Here is a simple static method to do this in C#: public static string ToTitleCaseInvariant(string targetString){ return System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(targetString);}
In what language? In PHP it is: ucwords() example: $HelloWorld = ucwords('hello world');
What I was thinking of can be achieved using list comprehensions, but I thought that there was a function that did this in a slightly neater way. i.e. 'bar' is a list of objects, all of which have the attribute 'id' The mythical functional way: foo = 12foo in iter_attr(bar, 'id') The list comprehension way: foo = 12foo in [obj.id for obj in bar] In retrospect the list comprehension way is pretty neat anyway.
One implementation of this problem is to attempt to call the parameter-less constructor of the Type: public static object GetNewObject(Type t) { try { return t.GetConstructor(new Type[] { }).Invoke(new object[] { }); } catch { return null; } } Here is the same approach, contained in a generic method: public static T GetNewObject<T>() { try { return (T)typeof(T).GetConstructor(new Type[] { }).Invoke(new object[] { }); } catch { return default(T); } }
The Activator class within the root System namespace is pretty powerful. There are a lot of overloads for passing parameters to the constructor and such. Check out the documentation at: http://msdn.microsoft.com/en-us/library/system.activator.createinstance.aspx Here are some simple examples: ObjectType instance = (ObjectType)Activator.CreateInstance(objectType); ObjectType instance = (ObjectType)Activator.CreateInstance("MyAssembly","MyNamespace.ObjectType");
Here is my current method. Any suggestions? Regex singleMToDoubleRegex = new Regex("(?<!m)m(?!m)");Regex singleDToDoubleRegex = new Regex("(?<!d)d(?!d)");CultureInfo currentCulture = CultureInfo.CurrentUICulture;// If the culture is netural there is no date pattern to use, so use the default.if (currentCulture.IsNeutralCulture){ currentCulture = CultureInfo.InvariantCulture;}// Massage the format into a more general user friendly form.string shortDatePattern = CultureInfo.CurrentUICulture.DateTimeFormat.ShortDatePattern.ToLower();shortDatePattern = singleMToDoubleRegex.Replace(shortDatePattern, "mm");shortDatePattern = singleDToDoubleRegex.Replace(shortDatePattern, "dd");
You can print from the command line using the following: rundll32.exe %WINDIR%\System32\mshtml.dll,PrintHTML "%1" Where %1 is the file path of the html file to be printed. If you don't need to print from memory (or can afford to write to the disk in a temp file) you can use: using (Process printProcess = new Process()){ string systemPath = Environment.GetFolderPath(Environment.SpecialFolder.System); printProcess.StartInfo.FileName = systemPath + @"\rundll32.exe"; printProcess.StartInfo.Arguments = systemPath + @"\mshtml.dll,PrintHTML """ + fileToPrint + @""""; printProcess.Start();} N.B. This only works on Windows 2000 and above I think.
Here's a Perl solution http://daringfireball.net/2008/05/title_case Here's a Ruby solution http://frankschmitt.org/projects/title-case Here's a Ruby one-liner solution: http://snippets.dzone.com/posts/show/4702 'some string here'.gsub(/\b\w/){$&.upcase} What the one-liner is doing is using a regular expression substitution of the first character of each word with the uppercase version of it.
I haven't been able to find an understandable explanation of how to actually use Python's itertools.groupby() function. What I'm trying to do is this: Take a list - in this case, the children of an objectified lxml element Divide it into groups based on some criteria Then later iterate over each of these groups separately. I've reviewed the documentation, and the examples, but I've had trouble trying to apply them beyond a simple list of numbers. So, how do I use of itertools.groupby()? Is there another technique I should be using? Pointers to good "prerequisite" reading would also be appreciated.
I don't have any experience with http://www.SiteGround.com as a web host personally. This is just a guess, but it's common for a shared host to support Python and MySQL with the MySQLdb module (e.g., GoDaddy does this). Try the following CGI script to see if MySQLdb is installed. #!/usr/bin/pythonmodule_name = 'MySQLdb'head = '''Content-Type: text/html%s is ''' % module_nametry: __import__(module_name) print head + 'installed'except ImportError: print head + 'not installed'
Can you show us your code? The example on the Python docs is quite straightforward: groups = [] uniquekeys = [] for k, g in groupby(data, keyfunc): groups.append(list(g)) # Store group iterator as a list uniquekeys.append(k) So in your case, data is a list of nodes, keyfunc is where the logic of your criteria function goes and then groupby() groups the data. You must be careful to sort the data by the criteria before you call groupby or it won't work. groupby method actually just iterates through a list and whenever the key changes it creates a new group.
Absolutely, especially dealing with lots of these permutations/combinations I can definitely see that the first pass would be an issue. Interesting implementation in python, though I wrote a nice one in C and Ocaml based on "Algorithm 515" (see below). He wrote his in Fortran as it was common back then for all the "Algorithm XX" papers, well, that assembly or c. I had to re-write it and make some small improvements to work with arrays not ranges of numbers. This one does random access, I'm still working on getting some nice implementations of the ones mentioned in Knuth 4th volume fascicle 2. I'll an explanation of how this works to the reader. Though if someone is curious, I wouldn't object to writing something up. /** [combination c n p x] * get the [x]th lexicographically ordered set of [p] elements in [n] * output is in [c], and should be sizeof(int)*[p] */void combination(int* c,int n,int p, int x){ int i,r,k = 0; for(i=0;i<p-1;i++){ c[i] = (i != 0) ? c[i-1] : 0; do { c[i]++; r = choose(n-c[i],p-(i+1)); k = k + r; } while(k < x); k = k - r; } c[p-1] = c[p-2] + x - k;} ~"Algorithm 515: Generation of a Vector from the Lexicographical Index"; Buckles, B. P., and Lybanon, M. ACM Transactions on Mathematical Software, Vol. 3, No. 2, June 1977.
I uploaded it and got an internal error Premature end of script headers After much playing around, I found that if I had import cgiimport cgitb; cgitb.enable()import MySQLdb It would give me a much more useful answer and say that it was not installed, you can see it yourself -> http://woarl.com/db.py Oddly enough, this would produce an error import MySQLdbimport cgiimport cgitb; cgitb.enable() I looked at some of the other files I had up there and it seems that library was one of the ones I had already tried.
The magic all seems to be in visitortime.getTimezoneOffset() That's cool, I didn't know about that. Does it work in IE, etc? From there you should be able to use JS to ajax, set cookies, whatever. I'd probably go the cookie route myself. You'll need to allow the user to change it though. We tried to use geolocation (via maxmind) to do this a while ago, and it was wrong reasonably often - enough to make it not worth doing, so we just let the user set it in their profile, and show a notice to users who haven't set theirs yet.
SQL: SELECT u.id, u.name, isnull(MAX(h.dateCol), '1900-01-01') dateColWithDefault FROM universe u LEFT JOIN history h ON u.id=h.id AND h.dateCol<GETDATE()-1 GROUP BY u.Id, u.name
