This	DT	O
is	VBZ	O
pretty	JJ	O
trivial	JJ	O
and	CC	O
obvious	JJ	O
,	,	O
but	CC	O
be	VB	O
sure	JJ	O
to	TO	O
session_destroy	VB	O
after	IN	O
every	DT	O
use	NN	O
.	.	O
This	DT	O
can	MD	O
be	VB	O
difficult	JJ	O
to	TO	O
implement	VB	O
if	IN	O
the	DT	O
user	NN	O
does	VBZ	O
not	RB	O
log	VB	O
out	RP	O
explicitly	RB	O
,	,	O
so	IN	O
a	DT	O
timer	NN	O
can	MD	O
be	VB	O
set	VBN	O
to	TO	O
do	VB	O
this	DT	O
.	.	O
Here	RB	O
is	VBZ	O
a	DT	O
good	JJ	O
tutorial	NN	O
on	IN	O
setTimer()	NN	U-API
and	CC	O
clearTimer()	NN	U-API
.	.	O
When	WRB	O
is	VBZ	O
it	PRP	O
appropriate	JJ	O
to	TO	O
use	VB	O
an	DT	O
unsigned	JJ	O
variable	NN	O
over	IN	O
a	DT	O
signed	JJ	O
one	CD	O
?	.	O
What	WP	O
about	IN	O
in	IN	O
a	DT	O
for	IN	O
loop	NN	O
?	.	O
I	PRP	O
hear	VBP	O
a	DT	O
lot	NN	O
of	IN	O
opinions	NNS	O
about	IN	O
this	DT	O
and	CC	O
I	PRP	O
wanted	VBD	O
to	TO	O
see	VB	O
if	IN	O
there	EX	O
was	VBD	O
anything	NN	O
resembling	VBG	O
a	DT	O
consensus	NN	O
.	.	O
for	IN	O
(	(	O
unsigned	JJ	O
int	NN	O
i	NN	O
=	VBP	O
0	CD	O
;	:	O
i	JJ	O
<	VBP	O
someThing.length()	NN	U-API
;	:	O
i	CC	O
+	VBP	O
+	NNP	O
)	)	O
{	(	O
SomeThing	VBG	O
var	JJ	O
=	JJ	O
someThing.at(	NN	B-API
i	NN	I-API
)	)	L-API
;	:	O
/	CC	O
/	VB	O
You	PRP	O
get	VBP	O
the	DT	O
idea	NN	O
.	.	O
}	)	O
I	PRP	O
know	VBP	O
Java	NNP	O
doesn't	NNS	O
have	VBP	O
unsigned	VBN	O
values	NNS	O
,	,	O
and	CC	O
that	DT	O
must	MD	O
have	VB	O
been	VBN	O
a	DT	O
concious	JJ	O
decision	NN	O
on	IN	O
Sun	NNP	O
Microsystems	NNPS	O
'	POS	O
part	NN	O
.	.	O
Personally	RB	O
,	,	O
I've	NNP	O
played	VBN	O
with	IN	O
several	JJ	O
of	IN	O
the	DT	O
built-in	NN	O
options	NNS	O
on	IN	O
an	DT	O
XML-heavy	JJ	O
project	NN	O
and	CC	O
have	VBP	O
settled	VBN	O
on	IN	O
pulldom	NN	O
as	IN	O
the	DT	O
best	JJS	O
choice	NN	O
for	IN	O
less	JJR	O
complex	JJ	O
documents	NNS	O
.	.	O
Especially	RB	O
for	IN	O
small	JJ	O
simple	JJ	O
stuff	NN	O
,	,	O
I	PRP	O
like	VBP	O
the	DT	O
event-driven	JJ	O
theory	NN	O
of	IN	O
parsing	VBG	O
rather	RB	O
than	IN	O
setting	VBG	O
up	RP	O
a	DT	O
whole	JJ	O
slew	NN	O
of	IN	O
callbacks	NNS	O
for	IN	O
a	DT	O
relatively	RB	O
simple	JJ	O
structure	NN	O
.	.	O
Here	RB	O
is	VBZ	O
a	DT	O
good	JJ	O
quick	JJ	O
discussion	NN	O
of	IN	O
how	WRB	O
to	TO	O
use	VB	O
the	DT	O
API	NNP	O
.	.	O
What	WP	O
I	PRP	O
like	VBP	O
:	:	O
you	PRP	O
can	MD	O
handle	VB	O
the	DT	O
parsing	NN	O
in	IN	O
a	DT	O
for	IN	O
loop	NN	O
rather	RB	O
than	IN	O
using	VBG	O
callbacks	NNS	O
.	.	O
You	PRP	O
also	RB	O
delay	VBP	O
full	JJ	O
parsing	NN	O
(	(	O
the	DT	O
"pull	NN	O
"	NNP	O
part	NN	O
)	)	O
and	CC	O
only	RB	O
get	VB	O
additional	JJ	O
detail	NN	O
when	WRB	O
you	PRP	O
call	VBP	O
expandNode()	RB	U-API
.	.	O
This	DT	O
satisfies	VBZ	O
my	PRP$	O
general	JJ	O
requirement	NN	O
for	IN	O
"responsible	JJ	O
"	JJ	O
efficiency	NN	O
without	IN	O
sacrificing	VBG	O
ease	NN	O
of	IN	O
use	NN	O
and	CC	O
simplicity	NN	O
.	.	O
Take	VB	O
a	DT	O
look	NN	O
at	IN	O
the	DT	O
CHECKSUM	NNP	O
command	NN	O
:	:	O
SELECT	NNP	O
CHECKSUM_AGG(	NNP	B-API
BINARY_CHECKSUM(	NNP	I-API
*	NNP	I-API
)	)	L-API
)	)	O
FROM	NNP	O
sample_table	JJ	O
WITH	NNP	O
(	(	O
NOLOCK	NNP	O
)	)	O
;	:	O
That	WDT	O
will	MD	O
return	VB	O
the	DT	O
same	JJ	O
number	NN	O
each	DT	O
time	NN	O
it's	JJ	O
run	NN	O
as	RB	O
long	RB	O
as	IN	O
the	DT	O
table	NN	O
contents	NNS	O
haven't	RB	O
changed	VBD	O
.	.	O
See	VB	O
my	PRP$	O
post	NN	O
on	IN	O
this	DT	O
for	IN	O
more	JJR	O
information	NN	O
:	:	O
CHECKSUM	NNP	O
Here's	NNP	O
how	WRB	O
I	PRP	O
used	VBD	O
it	PRP	O
to	TO	O
rebuild	VB	O
cache	NN	O
dependencies	NNS	O
when	WRB	O
tables	NNS	O
changed	VBD	O
:	:	O
ASP	NNP	O
.	.	O
NET	JJ	O
1	CD	O
.	.	O
1	CD	O
database	NN	O
cache	NN	O
dependency	NN	O
(	(	O
without	IN	O
triggers	NNS	O
)	)	O
timezone	NN	O
.	.	O
js	NN	O
:	:	U-API
function	NN	O
ajaxpage()	IN	U-API
{	(	O
var	JJ	O
url	JJ	O
=	NNP	O
"timezone	NN	O
.	.	O
php	JJ	O
"	NN	O
;	:	O
var	CC	O
visitortime	VB	O
=	JJ	O
new	JJ	O
Date()	NNP	U-API
;	:	O
var	JJ	O
time	NN	O
=	NNP	O
visitortime.getTimezoneOffset()	NN	U-API
/60	NN	O
;	:	O
var	CC	O
page_request	JJS	O
=	JJ	O
false	RB	O
;	:	O
if	IN	O
(	(	O
window	NN	O
.	.	O
XMLHttpRequest	JJS	O
)	)	O
{	(	O
page_request	JJS	O
=	RB	O
new	JJ	O
XMLHttpRequest()	NNP	U-API
;	:	O
}	)	O
else	RB	O
if	IN	O
(	(	O
window	NN	O
.	.	O
ActiveXObject	NNP	O
)	)	O
{	(	O
try	VB	O
{	(	O
page_request	VB	O
=	CD	O
new	JJ	O
ActiveXObject(	NNP	B-API
"Msxml2	NNP	I-API
.	.	I-API
XMLHTTP	NNP	I-API
"	NNP	I-API
)	)	L-API
;	:	O
}	)	O
catch	NN	O
(	(	O
e	NN	O
)	)	O
{	(	O
try	VB	O
{	(	O
page_request	VB	O
=	CD	O
new	JJ	O
ActiveXObject(	NNP	B-API
"Microsoft	NNP	I-API
.	.	I-API
XMLHTTP	NNP	I-API
"	NNP	I-API
)	)	L-API
;	:	O
}	)	O
catch	NN	O
(	(	O
e	NN	O
)	)	O
{	(	O
}	)	O
}	)	O
}	)	O
else	RB	O
{	(	O
return	NN	O
false	RB	O
;	:	O
}	)	O
page_request	JJS	O
.	.	O
onreadystatechange	NN	O
=	NNP	O
function()	NN	U-API
{	(	O
loadpage(	JJ	B-API
page_request	NN	I-API
,	,	I-API
containerid	NN	I-API
)	)	L-API
;	:	O
}	)	O
if	IN	O
(	(	O
bustcachevar	NN	O
)	)	O
{	(	O
bustcacheparameter	NN	O
=	NNP	O
(	(	O
url.indexOf(	JJ	B-API
"	NN	I-API
?	.	I-API
"	NN	I-API
)	)	L-API
!	.	O
=	SYM	O
-	:	O
1	CD	O
)	)	O
?	.	O
"	NNP	O
&	CC	O
"	NNP	O
+new	NNP	O
Date()	NNP	U-API
.	.	O
getTime()	NN	U-API
:	:	O
"	NN	O
?	.	O
"	JJ	O
+new	NNP	O
Date()	NNP	U-API
.	.	O
getTime()	NN	U-API
;	:	O
}	)	O
page_request.open(	NN	B-API
'	''	I-API
GET	NNP	I-API
'	POS	I-API
,	,	I-API
url	JJ	I-API
+bustcacheparameter	NN	I-API
+	NNP	I-API
"	NNP	I-API
&time	NNP	I-API
=	NNP	I-API
"	NNP	I-API
+time	NNP	I-API
,	,	I-API
true	JJ	I-API
)	)	L-API
;	:	O
page_request.send(	CC	B-API
null	NN	I-API
)	)	L-API
;	:	O
}	)	U-API
function	NN	O
loadpage(	JJ	B-API
page_request	NN	I-API
,	,	I-API
containerid	NN	I-API
)	)	L-API
{	(	O
if	IN	O
(	(	O
page_request	JJS	O
.	.	O
readyState	VB	O
=	JJ	O
=	NNP	O
4	CD	O
&	CC	O
&	CC	O
(	(	O
page_request	JJS	O
.	.	O
status	NN	O
=	JJ	O
=200	NNP	O
|	NNP	O
|	NNP	O
window.location.href.indexOf(	VBD	B-API
"http	NNP	I-API
"	NNP	I-API
)	)	L-API
=	VBP	O
=	SYM	O
-	:	O
1	CD	O
)	)	O
)	)	O
{	(	O
document.write(	NN	B-API
'	''	I-API
<meta	JJ	I-API
http-equiv	JJ	I-API
=	NN	I-API
"refresh	NNP	I-API
"	NNP	I-API
content	NN	I-API
=	NNP	I-API
"0	NNP	I-API
;url	NNP	I-API
=http	NN	I-API
:	:	I-API
/	JJ	I-API
/example	NN	I-API
.	.	I-API
com	NN	I-API
/	JJ	I-API
"	NNP	I-API
/	NNP	I-API
>	NNP	I-API
'	POS	I-API
)	)	L-API
;	:	O
}	)	O
}	)	O
timezone	NN	O
.	.	O
php	NN	O
:	:	O
<	JJ	O
?php	NNP	O
session_start()	NN	U-API
;	:	O
$_SESSION	CC	O
[	VB	O
'	''	O
time	NN	O
'	''	O
]	JJ	O
=	NNP	O
$_GET	NNP	O
[	NNP	O
'	POS	O
time	NN	O
'	''	O
]	NNS	O
;	:	O
?	.	O
>	VB	O
When	WRB	O
you	PRP	O
want	VBP	O
to	TO	O
use	VB	O
it	PRP	O
add	VB	O
onLoad	JJ	O
=	JJ	O
"ajaxpage	NN	O
(	(	O
)	)	O
;	:	O
to	TO	O
the	DT	O
body	NN	O
tag	NN	O
and	CC	O
it	PRP	O
should	MD	O
cause	VB	O
the	DT	O
timezone	NN	O
to	TO	O
be	VB	O
stored	VBN	O
in	IN	O
the	DT	O
PHP	NNP	O
session	NN	O
variable	JJ	O
$_SESSION	NN	O
[	NNP	O
'	POS	O
time	NN	O
'	''	O
]	JJ	O
Edit	NN	O
:	:	O
P	NNP	O
.	.	O
S	NNP	O
.	.	O
This	DT	O
is	VBZ	O
untested	JJ	O
.	.	O
There	EX	O
are	VBP	O
several	JJ	O
ways	NNS	O
to	TO	O
do	VB	O
this	DT	O
.	.	O
Common	NNP	O
methods	NNS	O
use	VBP	O
recursion	NN	O
,	,	O
memoization	NN	O
,	,	O
or	CC	O
dynamic	JJ	O
programming	NN	O
.	.	O
The	DT	O
basic	JJ	O
idea	NN	O
is	VBZ	O
that	IN	O
you	PRP	O
produce	VBP	O
a	DT	O
list	NN	O
of	IN	O
all	DT	O
strings	NNS	O
of	IN	O
length	NN	O
1	CD	O
,	,	O
then	RB	O
in	IN	O
each	DT	O
iteration	NN	O
,	,	O
for	IN	O
all	DT	O
strings	NNS	O
produced	VBN	O
in	IN	O
the	DT	O
last	JJ	O
iteration	NN	O
,	,	O
add	VBP	O
that	IN	O
string	VBG	O
concatenated	VBN	O
with	IN	O
each	DT	O
character	NN	O
in	IN	O
the	DT	O
string	NN	O
individually	RB	O
.	.	O
(	(	O
the	DT	O
variable	NN	O
index	NN	O
in	IN	O
the	DT	O
code	NN	O
below	IN	O
keeps	NNS	O
track	NN	O
of	IN	O
the	DT	O
start	NN	O
of	IN	O
the	DT	O
last	JJ	O
and	CC	O
the	DT	O
next	JJ	O
iteration	NN	O
)	)	O
Some	DT	O
pseudocode	NN	O
:	:	O
list	NN	O
=	IN	O
originalString.split(	NN	B-API
'	''	I-API
'	POS	I-API
)	)	L-API
index	NN	O
=	NNP	O
(	(	O
0	CD	O
,	,	O
0	CD	O
)	)	O
list	NN	O
=	NNP	O
[	NNP	O
"	NNP	O
"	NNP	O
]	NNP	O
for	IN	O
iteration	NN	O
n	NN	O
in	IN	O
1	CD	O
to	TO	O
y	VB	O
:	:	O
index	NN	O
=	NNP	O
(	(	O
index	NN	O
[1	NNP	O
]	NNP	O
,	,	O
len(	JJ	B-API
list	NN	I-API
)	)	L-API
)	)	O
for	IN	O
string	VBG	O
s	NN	O
in	IN	O
list.subset(	JJ	B-API
index	NN	I-API
[0	VBD	I-API
]	NNP	I-API
to	TO	I-API
end	VB	I-API
)	)	L-API
:	:	O
for	IN	O
character	NN	O
c	NN	O
in	IN	O
originalString	VBG	O
:	:	O
list.add(	NN	B-API
s	NN	I-API
+	NNP	I-API
c	NN	I-API
)	)	L-API
you'd	NN	O
then	RB	O
need	VB	O
to	TO	O
remove	VB	O
all	DT	O
strings	NNS	O
less	JJR	O
than	IN	O
x	NN	O
in	IN	O
length	NN	O
,	,	O
they'll	RB	O
be	VB	O
the	DT	O
first	JJ	O
(	(	O
x-1	JJ	O
)	)	O
*	FW	O
len(	FW	B-API
originalString	VBG	I-API
)	)	L-API
entries	NNS	O
in	IN	O
the	DT	O
list	NN	O
.	.	O
I	PRP	O
just	RB	O
whipped	VBD	O
this	DT	O
up	RP	O
quick	NN	O
in	IN	O
Ruby	NNP	O
:	:	O
def	NN	O
perms(	NN	B-API
x	NNP	I-API
,	,	I-API
y	NN	I-API
,	,	I-API
possible_characters	NNS	I-API
)	)	L-API
all	DT	O
=	VBP	O
[	JJ	O
"	NNP	O
"	NNP	O
]	NNP	O
current_array	NN	O
=	NNP	O
all	DT	O
.	.	O
clone	NN	O
1.upto(	CD	B-API
y	NN	I-API
)	)	L-API
{	(	O
|iteration	NN	O
|	NNP	O
next_array	NN	O
=	NNP	O
[	NNP	O
]	NNP	O
current_array	NN	O
.	.	O
each	DT	O
{	(	O
|string	VBG	O
|	JJ	O
possible_characters	NNS	O
.	.	O
each	DT	O
{	(	O
|c	JJ	O
|	NNP	O
value	NN	O
=	NNP	O
string	VBG	O
+	NNP	O
c	JJ	O
next_array	NN	O
.	.	O
insert	JJ	O
next_array	NN	O
.	.	O
length	NN	O
,	,	O
value	NN	O
all	DT	O
.	.	O
insert	VB	O
all	DT	O
.	.	O
length	NN	O
,	,	O
value	NN	O
}	)	O
}	)	O
current_array	JJ	O
=	JJ	O
next_array	NN	O
}	)	O
all	DT	O
.	.	O
delete_if	VB	O
{	(	O
|string	VBG	O
|	NN	O
string	NN	O
.	.	O
length	NN	O
<	JJ	O
x	NNP	O
}end	NNP	O
You	PRP	O
might	MD	O
look	VB	O
into	IN	O
language	NN	O
API	NNP	O
for	IN	O
built	VBN	O
in	IN	O
permutation	NN	O
type	NN	O
functions	NNS	O
,	,	O
and	CC	O
you	PRP	O
might	MD	O
be	VB	O
able	JJ	O
to	TO	O
write	VB	O
more	JJR	O
optimized	JJ	O
code	NN	O
,	,	O
but	CC	O
if	IN	O
the	DT	O
numbers	NNS	O
are	VBP	O
all	PDT	O
that	DT	O
high	JJ	O
,	,	O
I'm	NNP	O
not	RB	O
sure	JJ	O
there	EX	O
is	VBZ	O
much	RB	O
of	IN	O
a	DT	O
way	NN	O
around	IN	O
having	VBG	O
a	DT	O
lot	NN	O
of	IN	O
results	NNS	O
.	.	O
Anyways	NNP	O
,	,	O
the	DT	O
idea	NN	O
behind	IN	O
the	DT	O
code	NN	O
is	VBZ	O
start	JJ	O
with	IN	O
string	NN	O
of	IN	O
length	NN	O
0	CD	O
,	,	O
then	RB	O
keep	VB	O
track	NN	O
of	IN	O
all	PDT	O
the	DT	O
strings	NNS	O
of	IN	O
length	NN	O
Z	NNP	O
where	WRB	O
Z	NNP	O
is	VBZ	O
the	DT	O
current	JJ	O
size	NN	O
in	IN	O
the	DT	O
iteration	NN	O
.	.	O
Then	RB	O
,	,	O
go	VBP	O
through	IN	O
each	DT	O
string	NN	O
and	CC	O
append	VB	O
each	DT	O
character	NN	O
onto	IN	O
each	DT	O
string	NN	O
.	.	O
Finally	RB	O
at	IN	O
the	DT	O
end	NN	O
,	,	O
remove	VB	O
any	DT	O
that	WDT	O
were	VBD	O
below	IN	O
the	DT	O
x	NNP	O
threshold	NN	O
and	CC	O
return	VB	O
the	DT	O
result	NN	O
.	.	O
I	PRP	O
didn't	VBP	O
test	VB	O
it	PRP	O
with	IN	O
potentially	RB	O
meaningless	JJ	O
input	NN	O
(	(	O
null	JJ	O
character	NN	O
list	NN	O
,	,	O
weird	JJ	O
values	NNS	O
of	IN	O
x	NN	O
and	CC	O
y	NN	O
,	,	O
etc	NN	O
)	)	O
.	.	O
High	JJ	O
Resolution	NNP	O
,	,	O
Low	NNP	O
Overhead	NNP	O
Timing	NNP	O
for	IN	O
Intel	NNP	O
Processors	NNPS	O
If	IN	O
you're	VBN	O
on	IN	O
Intel	NNP	O
hardware	NN	O
,	,	O
here's	VB	O
how	WRB	O
to	TO	O
read	VB	O
the	DT	O
CPU	NNP	O
real-time	JJ	O
instruction	NN	O
counter	NN	O
.	.	O
It	PRP	O
will	MD	O
tell	VB	O
you	PRP	O
the	DT	O
number	NN	O
of	IN	O
CPU	NNP	O
cycles	NNS	O
executed	VBD	O
since	IN	O
the	DT	O
processor	NN	O
was	VBD	O
booted	VBN	O
.	.	O
This	DT	O
is	VBZ	O
probably	RB	O
the	DT	O
finest-grained	JJ	O
counter	NN	O
you	PRP	O
can	MD	O
get	VB	O
for	IN	O
performance	NN	O
measurement	NN	O
.	.	O
Note	NN	O
that	IN	O
this	DT	O
is	VBZ	O
the	DT	O
number	NN	O
of	IN	O
CPU	NNP	O
cycles	NNS	O
.	.	O
On	IN	O
linux	IN	O
you	PRP	O
can	MD	O
get	VB	O
the	DT	O
CPU	NNP	O
speed	NN	O
from	IN	O
/proc	NNP	O
/cpuinfo	NNP	O
and	CC	O
divide	VB	O
to	TO	O
get	VB	O
the	DT	O
number	NN	O
of	IN	O
seconds	NNS	O
.	.	O
Converting	VBG	O
this	DT	O
to	TO	O
a	DT	O
double	NN	O
is	VBZ	O
quite	RB	O
handy	JJ	O
.	.	O
When	WRB	O
I	PRP	O
run	VBP	O
this	DT	O
on	IN	O
my	PRP$	O
box	NN	O
,	,	O
I	PRP	O
get	VBP	O
11867927879484732	CD	O
11867927879692217	CD	O
it	PRP	O
took	VBD	O
this	DT	O
long	JJ	O
to	TO	O
call	VB	O
printf	NN	O
:	:	O
207485	CD	O
Here's	NNP	O
the	DT	O
Intel	NNP	O
developer's	NN	O
guide	NN	O
that	WDT	O
gives	VBZ	O
tons	NNS	O
of	IN	O
detail	NN	O
.	.	O
#include	JJ	O
<stdio	NN	O
.	.	O
h	NN	O
>	JJ	O
#include	NNP	O
<stdint	NNP	O
.	.	O
h	NN	O
>	JJ	O
inline	NN	O
uint64_t	JJ	O
rdtsc()	NN	U-API
{	(	O
uint32_t	JJ	O
lo	NN	O
,	,	O
hi	NN	O
;	:	O
__asm__	CC	O
__volatile__	NNP	O
(	(	O
"xorl	CD	O
%	NN	O
%eax	NNP	O
,	,	O
%	NN	O
%eax	NNP	O
\n	NNP	O
"	NNP	O
"cpuid	NNP	O
\n	NNP	O
"	NNP	O
"rdtsc	NNP	O
\n	NNP	O
"	NN	O
:	:	O
"	JJ	O
=a	NN	O
"	NNP	O
(	(	O
lo	NN	O
)	)	O
,	,	O
"	JJ	O
=d	NN	O
"	NNP	O
(	(	O
hi	NN	O
)	)	O
:	:	O
:	:	O
"	NN	O
%ebx	NNP	O
"	NNP	O
,	,	O
"	NNP	O
%ecx	NNP	O
"	NNP	O
)	)	O
;	:	O
return	NN	O
(	(	O
uint64_t	JJ	O
)hi	NNP	O
<	NNP	O
<	VBD	O
32	CD	O
|	NNP	O
lo	NN	O
;	:	O
}	)	O
main()	FW	U-API
{	(	O
unsigned	JJ	O
long	RB	O
long	RB	O
x	RB	O
;	:	O
unsigned	JJ	O
long	RB	O
long	RB	O
y	RB	O
;	:	O
x	NNP	O
=	NNP	O
rdtsc()	NN	U-API
;	:	O
printf(	CC	B-API
"	VB	I-API
%lld	JJ	I-API
\n	NNP	I-API
"	NNP	I-API
,	,	I-API
x	NNP	I-API
)	)	L-API
;	:	O
y	CC	O
=	NNP	O
rdtsc()	VBP	U-API
;	:	O
printf(	CC	B-API
"	VB	I-API
%lld	JJ	I-API
\n	NNP	I-API
"	NNP	I-API
,	,	I-API
y	NN	I-API
)	)	L-API
;	:	O
printf(	CC	B-API
"it	VB	I-API
took	VBD	I-API
this	DT	I-API
long	JJ	I-API
to	TO	I-API
call	VB	I-API
printf	NN	I-API
:	:	I-API
%lld	JJ	I-API
\n	NNP	I-API
"	NNP	I-API
,	,	I-API
y-x	NN	I-API
)	)	L-API
;	:	O
}	)	O
Personally	NNP	O
I	PRP	O
would	MD	O
do	VB	O
something	NN	O
like	IN	O
this	DT	O
:	:	O
<	NN	O
?php	NNP	O
$data	NNP	O
=	NNP	O
array(	IN	B-API
$rating	VBG	I-API
[0	JJ	I-API
]	NNP	I-API
=	NNP	I-API
>	NNP	I-API
array(	NN	I-API
'	''	I-API
word0	NN	I-API
'	''	I-API
,	,	I-API
'	''	I-API
word1	NN	I-API
'	''	I-API
,	,	I-API
'	''	I-API
word2	NN	I-API
'	''	I-API
)	)	L-API
,	,	O
$rating	VBG	O
[1	JJ	O
]	NNP	O
=	NNP	O
>	NNP	O
array(	NN	B-API
'	''	I-API
word3	NN	I-API
'	''	I-API
,	,	I-API
'	''	I-API
word4	NN	I-API
'	''	I-API
,	,	I-API
'	''	I-API
word8	NN	I-API
'	''	I-API
,	,	I-API
...	:	I-API
)	)	L-API
)	)	O
;	:	O
/	CC	O
/assums	NNS	O
that	IN	O
$rating	VBG	O
is	VBZ	O
an	DT	O
array	NN	O
with	IN	O
the	DT	O
weight	NN	O
of	IN	O
each	DT	O
word	NN	O
so	IN	O
the	DT	O
more	JJR	O
popular	JJ	O
words	NNS	O
would	MD	O
have	VB	O
a	DT	O
higher	JJR	O
value	NN	O
in	IN	O
rating	NN	O
usort(	JJ	B-API
$data	NNP	I-API
)	)	L-API
;	:	O
/	CC	O
/sort	VB	O
the	DT	O
$data	NNP	O
variable	NN	O
,	,	O
this	DT	O
should	MD	O
give	VB	O
us	PRP	O
the	DT	O
most	RBS	O
popular	JJ	O
words	NNS	O
first	RB	O
$size	VB	O
=	NNP	O
'	POS	O
1	CD	O
'	POS	O
;	:	O
foreach(	NNS	B-API
$data	VBP	I-API
as	IN	I-API
$rank	NN	I-API
)	)	L-API
{	(	O
$i	JJ	O
=0	NN	O
;	:	O
while(	CC	B-API
$i	VB	I-API
<	JJ	I-API
$count	NNP	I-API
(	(	I-API
$rank	NNP	I-API
)	)	L-API
)	)	O
{	(	O
echo	JJ	O
"	NN	O
<h	NNP	O
"	NNP	O
.	.	O
$size	VB	O
.	.	O
"	VB	O
>	JJ	O
"	NNP	O
.	.	O
$rank	NN	O
[	JJ	O
$i	NNP	O
]	NNP	O
.	.	O
"	VB	O
<	JJ	O
/h	NNP	O
"	NNP	O
.	.	O
$size	VB	O
.	.	O
"	VB	O
>	JJ	O
"	NNP	O
;	:	O
$i	NNP	O
+	NNP	O
+	NNP	O
;	:	O
}	)	O
$size	VB	O
+	JJ	O
+	NN	O
;	:	O
}	)	O
?	.	O
>	JJ	O
Assuming	NNP	O
I'm	NNP	O
not	RB	O
a	DT	O
complete	JJ	O
idiot	NN	O
this	DT	O
should	MD	O
work	VB	O
.	.	O
But	CC	O
it	PRP	O
is	VBZ	O
untested	JJ	O
.	.	O
What	WP	O
is	VBZ	O
the	DT	O
meaning	NN	O
of	IN	O
the	DT	O
Java	NNP	O
warning	NN	O
?	.	O
Type	NNP	O
safety	NN	O
:	:	O
The	DT	O
cast	NN	O
from	IN	O
Object	NNP	O
to	TO	O
List	NNP	O
is	VBZ	O
actually	RB	O
checking	VBG	O
against	IN	O
the	DT	O
erased	JJ	O
type	NN	O
List	NN	O
I	PRP	O
get	VBP	O
this	DT	O
warning	NN	O
when	WRB	O
I	PRP	O
try	VBP	O
to	TO	O
cast	VB	O
an	DT	O
Object	NNP	O
to	TO	O
a	DT	O
type	NN	O
with	IN	O
generic	JJ	O
information	NN	O
,	,	O
such	JJ	O
as	IN	O
in	IN	O
the	DT	O
following	JJ	O
code	NN	O
:	:	O
Object	JJ	O
object	NN	O
=	NNP	O
getMyList()	NN	U-API
;	:	O
List	NNP	O
<Integer	NNP	O
>	NNP	O
list	NN	O
=	NNP	O
(	(	O
List	NNP	O
<Integer	NNP	O
>	NNP	O
)	)	O
object	VBP	O
;	:	O
I'm	NNP	O
not	RB	O
sure	JJ	O
why	WRB	O
you	PRP	O
would	MD	O
want	VB	O
to	TO	O
do	VB	O
this	DT	O
in	IN	O
the	DT	O
first	JJ	O
place	NN	O
.	.	O
The	DT	O
resulting	VBG	O
set	NN	O
for	IN	O
any	DT	O
moderately	RB	O
large	JJ	O
values	NNS	O
of	IN	O
x	NN	O
and	CC	O
y	NN	O
will	MD	O
be	VB	O
huge	JJ	O
,	,	O
and	CC	O
will	MD	O
grow	VB	O
exponentially	RB	O
as	IN	O
x	NN	O
and	CC	O
/or	NNP	O
y	NNP	O
get	VB	O
bigger	JJR	O
.	.	O
Lets	NNS	O
say	VBP	O
your	PRP$	O
set	NN	O
of	IN	O
possible	JJ	O
characters	NNS	O
is	VBZ	O
the	DT	O
26	CD	O
lowercase	NN	O
letters	NNS	O
of	IN	O
the	DT	O
alphabet	NN	O
,	,	O
and	CC	O
you	PRP	O
ask	VBP	O
your	PRP$	O
application	NN	O
to	TO	O
generate	VB	O
all	DT	O
permutations	NNS	O
where	WRB	O
length	NN	O
=	VBZ	O
5	CD	O
.	.	O
Assuming	VBG	O
you	PRP	O
don't	VBP	O
run	VB	O
out	IN	O
of	IN	O
memory	NN	O
you'll	NN	O
get	VB	O
11	CD	O
,	,	O
881	CD	O
,	,	O
376	CD	O
(	(	O
i	NN	O
.	.	O
e	NN	O
.	.	O
26	CD	O
to	TO	O
the	DT	O
power	NN	O
of	IN	O
5	CD	O
)	)	O
strings	NNS	O
back	RB	O
.	.	O
Bump	NN	O
that	WDT	O
length	VBZ	O
up	IN	O
to	TO	O
6	CD	O
,	,	O
and	CC	O
you'll	RB	O
get	VB	O
308	CD	O
,	,	O
915	CD	O
,	,	O
776	CD	O
strings	NNS	O
back	RB	O
.	.	O
These	DT	O
numbers	NNS	O
get	VBP	O
painfully	RB	O
large	JJ	O
,	,	O
very	RB	O
quickly	RB	O
.	.	O
Here's	VB	O
a	DT	O
solution	NN	O
I	PRP	O
put	VBP	O
together	RB	O
in	IN	O
Java	NNP	O
.	.	O
You'll	NNP	O
need	VBP	O
to	TO	O
provide	VB	O
two	CD	O
runtime	JJ	O
arguments	NNS	O
(	(	O
corresponding	VBG	O
to	TO	O
x	VB	O
and	CC	O
y	VB	O
)	)	O
.	.	O
Have	VBP	O
fun	VBN	O
.	.	O
public	JJ	O
class	NN	O
GeneratePermutations	NNP	O
{	(	O
public	JJ	O
static	JJ	O
void	NN	O
main(	NN	B-API
String	NNP	I-API
[	NNP	I-API
]	NNP	I-API
args	NN	I-API
)	)	L-API
{	(	O
int	NN	O
lower	RBR	O
=	NNP	O
Integer.parseInt(	NNP	B-API
args	VBZ	I-API
[0	NNP	I-API
]	NNP	I-API
)	)	L-API
;	:	O
int	JJ	O
upper	JJ	O
=	NN	O
Integer.parseInt(	NNP	B-API
args	VBZ	I-API
[1	NNP	I-API
]	NNP	I-API
)	)	L-API
;	:	O
if	IN	O
(	(	O
upper	JJ	O
<	NNP	O
lower	JJR	O
|	NNP	O
|	NNP	O
upper	JJ	O
=	NNP	O
=	NNP	O
0	CD	O
|	NNP	O
|	NNP	O
lower	JJR	O
=	NNP	O
=	NNP	O
0	CD	O
)	)	O
{	(	O
System.exit(	NNP	B-API
0	CD	I-API
)	)	L-API
;	:	O
}	)	O
for	IN	O
(	(	O
int	JJ	O
length	NN	O
=	NNP	O
lower	JJR	O
;	:	O
length	NN	O
<	NNP	O
=	NNP	O
upper	IN	O
;	:	O
length	CC	O
+	NNP	O
+	NNP	O
)	)	O
{	(	O
generate(	JJ	B-API
length	NN	I-API
,	,	I-API
"	NNP	I-API
"	NNP	I-API
)	)	L-API
;	:	O
}	)	O
}	)	O
private	JJ	O
static	JJ	O
void	NN	O
generate(	NN	B-API
int	NN	I-API
length	NN	I-API
,	,	I-API
String	NNP	I-API
partial	NN	I-API
)	)	L-API
{	(	O
if	IN	O
(	(	O
length	FW	O
<	NNP	O
=	NNP	O
0	CD	O
)	)	O
{	(	O
System.out.println(	NNP	B-API
partial	JJ	I-API
)	)	L-API
;	:	O
}	)	O
else	RB	O
{	(	O
for	IN	O
(	(	O
char	JJ	O
c	NN	O
=	NNP	O
'	POS	O
a	DT	O
'	POS	O
;	:	O
c	NNS	O
<	VBP	O
=	NNP	O
'	POS	O
z	NN	O
'	''	O
;	:	O
c	VB	O
+	NNP	O
+	NNP	O
)	)	O
{	(	O
generate(	JJ	B-API
length	NN	I-API
-	:	I-API
1	CD	I-API
,	,	I-API
partial	JJ	I-API
+	NNP	I-API
c	NN	I-API
)	)	L-API
;	:	O
}	)	O
}	)	O
}	)	O
}	)	O
The	DT	O
scoring	NN	O
contains	VBZ	O
the	DT	O
Inverse	NNP	O
Document	NNP	O
Frequency(	NNP	B-API
IDF	NNP	I-API
)	)	L-API
.	.	O
If	IN	O
the	DT	O
term	NN	O
"John	NNP	O
Smith	NNP	O
"	NNP	O
is	VBZ	O
in	IN	O
one	CD	O
partition	NN	O
,	,	O
0	CD	O
,	,	O
100	CD	O
times	NNS	O
and	CC	O
in	IN	O
partition	NN	O
1	CD	O
,	,	O
once	RB	O
.	.	O
The	DT	O
score	NN	O
for	IN	O
searching	VBG	O
for	IN	O
John	NNP	O
Smith	NNP	O
would	MD	O
be	VB	O
higher	JJR	O
search	NN	O
in	IN	O
partition	NN	O
1	CD	O
as	IN	O
the	DT	O
term	NN	O
is	VBZ	O
more	RBR	O
scarce	JJ	O
.	.	O
To	TO	O
get	VB	O
round	VB	O
this	DT	O
you	PRP	O
would	MD	O
wither	RB	O
have	VB	O
to	TO	O
have	VB	O
your	PRP$	O
index	NN	O
being	VBG	O
over	IN	O
all	DT	O
partitions	NNS	O
,	,	O
or	CC	O
you	PRP	O
would	MD	O
need	VB	O
to	TO	O
override	VB	O
the	DT	O
IDF	NNP	O
.	.	O
Part	NN	O
of	IN	O
my	PRP$	O
everyday	JJ	O
work	NN	O
is	VBZ	O
maintaining	VBG	O
and	CC	O
extending	VBG	O
legacy	NN	O
VB6	NNP	O
applications	NNS	O
.	.	O
A	DT	O
common	JJ	O
engine	NN	O
is	VBZ	O
written	VBN	O
in	IN	O
C	NNP	O
/C	NNP	O
+	NNP	O
+	NNP	O
and	CC	O
VB6	NNP	O
uses	VBZ	O
these	DT	O
functions	NNS	O
in	IN	O
order	NN	O
to	TO	O
improve	VB	O
performance	NN	O
.	.	O
When	WRB	O
it	PRP	O
comes	VBZ	O
to	TO	O
asynchronous	JJ	O
programming	NN	O
,	,	O
a	DT	O
C	NNP	O
interface	NN	O
is	VBZ	O
not	RB	O
enough	JJ	O
and	CC	O
we	PRP	O
rely	VBP	O
on	IN	O
COM	NNP	O
controls	VBZ	O
to	TO	O
fire	VB	O
events	NNS	O
to	TO	O
VB6	NNP	O
.	.	O
My	PRP$	O
problem	NN	O
is	VBZ	O
that	IN	O
when	WRB	O
I	PRP	O
register	VBP	O
the	DT	O
control	NN	O
in	IN	O
VB6	NNP	O
,	,	O
VB	NNP	O
loads	VBZ	O
this	DT	O
control	NN	O
in	IN	O
memory	NN	O
and	CC	O
does	VBZ	O
not	RB	O
unload	VB	O
it	PRP	O
until	IN	O
I	PRP	O
quit	VBP	O
the	DT	O
VB6	NNP	O
IDE	NNP	O
.	.	O
As	IN	O
the	DT	O
control	NN	O
is	VBZ	O
loaded	VBN	O
the	DT	O
whole	JJ	O
time	NN	O
,	,	O
I	PRP	O
am	VBP	O
unable	JJ	O
to	TO	O
recompile	VB	O
it	PRP	O
in	IN	O
VC6	NNP	O
,	,	O
because	IN	O
the	DT	O
DLL	NNP	O
file	NN	O
is	VBZ	O
locked	VBN	O
.	.	O
A	DT	O
solution	NN	O
I	PRP	O
found	VBD	O
is	VBZ	O
not	RB	O
to	TO	O
enable	VB	O
the	DT	O
control	NN	O
in	IN	O
VB	NNP	O
but	CC	O
use	VBP	O
the	DT	O
CreateObject()	NNP	U-API
with	IN	O
the	DT	O
full	JJ	O
name	NN	O
of	IN	O
my	PRP$	O
control	NN	O
.	.	O
The	DT	O
problem	NN	O
then	RB	O
is	VBZ	O
that	IN	O
I	PRP	O
must	MD	O
declare	VB	O
my	PRP$	O
control	NN	O
as	IN	O
an	DT	O
Object	NNP	O
because	IN	O
VB6	NNP	O
knows	VBZ	O
nothing	NN	O
of	IN	O
the	DT	O
interface	NN	O
I	PRP	O
am	VBP	O
using	VBG	O
and	CC	O
I	PRP	O
do	VBP	O
not	RB	O
have	VB	O
access	NN	O
to	TO	O
IntelliSense	NNP	O
,	,	O
which	WDT	O
is	VBZ	O
a	DT	O
pain	NN	O
.	.	O
Any	DT	O
idea	NN	O
how	WRB	O
I	PRP	O
can	MD	O
tell	VB	O
VB6	NNP	O
to	TO	O
unload	VB	O
controls	NNS	O
after	IN	O
quitting	VBG	O
the	DT	O
application	NN	O
?	.	O
Or	CC	O
directly	RB	O
in	IN	O
the	DT	O
IDE	NNP	O
?	.	O
Ok	NNP	O
,	,	O
I'm	NNP	O
a	DT	O
web	NN	O
developer	NN	O
,	,	O
but	CC	O
I	PRP	O
find	VBP	O
myself	PRP	O
dabbling	VBG	O
in	IN	O
windows	NNS	O
forms	NNS	O
projects	NNS	O
every	DT	O
now	RB	O
and	CC	O
then	RB	O
.	.	O
One	CD	O
thing	NN	O
that	WDT	O
confounds	VBZ	O
me	PRP	O
to	TO	O
this	DT	O
day	NN	O
is	VBZ	O
the	DT	O
following	VBG	O
.	.	O
Assume	NNP	O
you	PRP	O
are	VBP	O
doing	VBG	O
something	NN	O
like	IN	O
the	DT	O
following	JJ	O
List	NN	O
<string	VBG	O
>	JJ	O
myitems	NNS	O
=	VBP	O
new	JJ	O
List	NNP	O
<string	NNP	O
>	NNP	O
{	(	O
"Item	NN	O
1	CD	O
"	NN	O
,	,	O
"Item	VBP	O
2	CD	O
"	NN	O
,	,	O
"Item	VBP	O
3	CD	O
"	JJ	O
}	)	O
;	:	O
ComboBox	NNP	O
box	NN	O
=	NNP	O
new	JJ	O
ComboBox()	NNP	U-API
;	:	O
box	NN	O
.	.	O
DataSource	NNP	O
=	JJ	O
myitems	NNS	O
;	:	O
ComboBox	NNP	O
box2	VBZ	O
=	NNP	O
new	JJ	O
ComboBox()	NNP	U-API
;	:	O
box2	NN	O
.	.	O
DataSource	NNP	O
=	JJ	O
myitems	NNS	O
So	RB	O
now	RB	O
we	PRP	O
have	VBP	O
2	CD	O
combo	JJ	O
boxes	NNS	O
bound	VBD	O
to	TO	O
that	DT	O
array	NN	O
,	,	O
and	CC	O
everything	NN	O
works	NNS	O
fine	VBP	O
.	.	O
But	CC	O
when	WRB	O
you	PRP	O
change	VBP	O
the	DT	O
value	NN	O
of	IN	O
one	CD	O
combo	NN	O
box	NN	O
,	,	O
it	PRP	O
changes	VBZ	O
BOTH	NNP	O
combo	NN	O
boxes	NNS	O
to	TO	O
the	DT	O
one	CD	O
you	PRP	O
just	RB	O
selected	VBN	O
.	.	O
Now	RB	O
,	,	O
I	PRP	O
know	VBP	O
that	DT	O
Arrays	NNS	O
are	VBP	O
always	RB	O
passed	VBN	O
by	IN	O
reference	NN	O
(	(	O
learned	VBN	O
that	IN	O
when	WRB	O
i	NN	O
learned	VBD	O
C	NNP	O
:D	NNP	O
)	)	O
,	,	O
but	CC	O
why	WRB	O
on	IN	O
earth	NN	O
would	MD	O
the	DT	O
combo	JJ	O
boxes	NNS	O
change	VBP	O
together	RB	O
?	.	O
I	PRP	O
don't	VBP	O
believe	VB	O
the	DT	O
combo	NN	O
box	NN	O
control	NN	O
is	VBZ	O
modifying	VBG	O
the	DT	O
collection	NN	O
at	IN	O
all	DT	O
.	.	O
As	IN	O
a	DT	O
work	NN	O
around	RB	O
,	,	O
don't	NN	O
this	DT	O
would	MD	O
achieve	VB	O
the	DT	O
funcionality	NN	O
that	WDT	O
is	VBZ	O
expected	VBN	O
/	RB	O
desired	VBN	O
ComboBox	NNP	O
box	NN	O
=	NNP	O
new	JJ	O
ComboBox()	NNP	U-API
;	:	O
box	NN	O
.	.	O
DataSource	NNP	O
=	NNP	O
myitems.ToArray()	NN	U-API
;	:	O
So	CC	O
it	PRP	O
says	VBZ	O
microseconds	VBZ	O
explicitly	RB	O
,	,	O
but	CC	O
says	VBZ	O
the	DT	O
resolution	NN	O
of	IN	O
the	DT	O
system	NN	O
clock	NN	O
is	VBZ	O
unspecified	JJ	O
.	.	O
I	PRP	O
suppose	VBP	O
resolution	NN	O
in	IN	O
this	DT	O
context	NN	O
means	VBZ	O
how	WRB	O
the	DT	O
smallest	JJS	O
amount	NN	O
it	PRP	O
will	MD	O
ever	RB	O
be	VB	O
incremented	VBN	O
?	.	O
The	DT	O
data	NN	O
structure	NN	O
is	VBZ	O
defined	VBN	O
as	IN	O
having	VBG	O
microseconds	NNS	O
as	IN	O
a	DT	O
unit	NN	O
of	IN	O
measurement	NN	O
,	,	O
but	CC	O
that	IN	O
doesn't	JJ	O
mean	VB	O
that	IN	O
the	DT	O
clock	NN	O
or	CC	O
operating	NN	O
system	NN	O
is	VBZ	O
actually	RB	O
capable	JJ	O
of	IN	O
measuring	VBG	O
that	DT	O
finely	RB	O
.	.	O
Like	IN	O
other	JJ	O
people	NNS	O
have	VBP	O
suggested	VBN	O
,	,	O
gettimeofday()	NN	U-API
is	VBZ	O
bad	JJ	O
because	IN	O
setting	VBG	O
the	DT	O
time	NN	O
can	MD	O
cause	VB	O
clock	NN	O
skew	NN	O
and	CC	O
throw	VB	O
off	RP	O
your	PRP$	O
calculation	NN	O
.	.	O
clock_gettime(	VB	B-API
CLOCK_MONOTONIC	NNP	I-API
)	)	L-API
is	VBZ	O
what	WP	O
you	PRP	O
want	VBP	O
,	,	O
and	CC	O
clock_getres()	NN	U-API
will	MD	O
tell	VB	O
you	PRP	O
the	DT	O
precision	NN	O
of	IN	O
your	PRP$	O
clock	NN	O
.	.	O
The	DT	O
Monte	NNP	O
Carlo	NNP	O
method	NN	O
,	,	O
as	IN	O
mentioned	VBN	O
,	,	O
applies	VBZ	O
some	DT	O
great	JJ	O
concepts	NNS	O
but	CC	O
it	PRP	O
is	VBZ	O
,	,	O
clearly	RB	O
,	,	O
not	RB	O
the	DT	O
fastest	JJS	O
--	:	O
not	RB	O
by	IN	O
a	DT	O
long	JJ	O
shot	NN	O
,	,	O
not	RB	O
by	IN	O
any	DT	O
reasonable	JJ	O
usefulness	NN	O
.	.	O
Also	RB	O
,	,	O
it	PRP	O
all	DT	O
depends	VBZ	O
on	IN	O
what	WP	O
kind	NN	O
of	IN	O
accuracy	NN	O
you	PRP	O
are	VBP	O
looking	VBG	O
for	IN	O
.	.	O
The	DT	O
fastest	JJS	O
pi	NN	O
I	PRP	O
know	VBP	O
of	IN	O
is	VBZ	O
the	DT	O
digits	NNS	O
hard	RB	O
coded	VBD	O
.	.	O
Looking	VBG	O
at	IN	O
Pi	NNP	O
and	CC	O
Pi	NNP	O
[PDF	NNP	O
]	NNP	O
,	,	O
there	EX	O
are	VBP	O
a	DT	O
lot	NN	O
of	IN	O
formulas	NNS	O
.	.	O
Here	RB	O
is	VBZ	O
a	DT	O
method	NN	O
that	WDT	O
converges	VBZ	O
quickly	RB	O
(	(	O
~14digits	NNS	O
per	IN	O
iteration	NN	O
)	)	O
.	.	O
The	DT	O
current	JJ	O
fastest	JJS	O
application	NN	O
,	,	O
PiFast	NNP	O
,	,	O
uses	VBZ	O
this	DT	O
formula	NN	O
with	IN	O
the	DT	O
FFT	NNP	O
.	.	O
I'll	NNP	O
just	RB	O
write	VB	O
the	DT	O
formula	NN	O
,	,	O
since	IN	O
the	DT	O
code	NN	O
is	VBZ	O
straight	JJ	O
forward	RB	O
.	.	O
This	DT	O
formula	NN	O
was	VBD	O
almost	RB	O
found	VBN	O
by	IN	O
Ramanujan	NNP	O
and	CC	O
discovered	VBN	O
by	IN	O
Chudnovsky	NNP	O
.	.	O
It	PRP	O
is	VBZ	O
actually	RB	O
how	WRB	O
he	PRP	O
calculated	VBD	O
several	JJ	O
billion	CD	O
digits	NNS	O
of	IN	O
the	DT	O
number	NN	O
--	:	O
so	IN	O
it	PRP	O
isn't	VBZ	O
a	DT	O
method	NN	O
to	TO	O
disregard	VB	O
.	.	O
The	DT	O
formula	NN	O
will	MD	O
overflow	VB	O
quickly	RB	O
since	IN	O
we	PRP	O
are	VBP	O
dividing	VBG	O
factorials	NNS	O
,	,	O
it	PRP	O
would	MD	O
be	VB	O
advantageous	JJ	O
then	RB	O
to	TO	O
delay	VB	O
such	JJ	O
calculating	VBG	O
to	TO	O
remove	VB	O
terms	NNS	O
.	.	O
where	WRB	O
,	,	O
Below	NNP	O
is	VBZ	O
the	DT	O
Brent	NNP	O
–Salamin	NNP	O
algorithm	NN	O
.	.	O
Wikipedia	NNP	O
mentions	NNS	O
that	WDT	O
when	WRB	O
a	DT	O
and	CC	O
b	NN	O
are	VBP	O
'	POS	O
close	JJ	O
enough	NNS	O
'	POS	O
then	RB	O
(	(	O
a	DT	O
+b	NN	O
)	)	O
^2	NN	O
/4t	NN	O
will	MD	O
be	VB	O
an	DT	O
approximation	NN	O
of	IN	O
pi	NN	O
.	.	O
I'm	NNP	O
not	RB	O
sure	JJ	O
what	WP	O
'	''	O
close	RB	O
enough	IN	O
'	''	O
means	NNS	O
,	,	O
but	CC	O
from	IN	O
my	PRP$	O
tests	NNS	O
,	,	O
one	CD	O
iteration	NN	O
got	VBD	O
2digits	CD	O
,	,	O
two	CD	O
got	VBD	O
7	CD	O
,	,	O
and	CC	O
three	CD	O
had	VBD	O
15	CD	O
,	,	O
of	IN	O
course	NN	O
this	DT	O
is	VBZ	O
with	IN	O
doubles	NNS	O
,	,	O
so	IN	O
it	PRP	O
might	MD	O
have	VB	O
error	NN	O
based	VBN	O
on	IN	O
its	PRP$	O
representation	NN	O
and	CC	O
the	DT	O
'	''	O
true	JJ	O
'	POS	O
calculation	NN	O
could	MD	O
be	VB	O
more	JJR	O
accurate	JJ	O
.	.	O
let	VB	O
pi_2	JJ	O
iters	NNS	O
=	VBP	O
let	VB	O
rec	VB	O
loop_	VB	O
a	DT	O
b	NN	O
t	NN	O
p	NN	O
i	NN	O
=	VBP	O
if	IN	O
i	JJ	O
=	VBP	O
0	CD	O
then	RB	O
a	DT	O
,	,	O
b	NN	O
,	,	O
t	NN	O
,	,	O
p	NN	O
else	RB	O
let	VB	O
a_n	JJ	O
=	NNP	O
(	(	O
a	DT	O
+	NN	O
.	.	O
b	NN	O
)	)	O
/	NN	O
.	.	O
2	CD	O
.	.	O
0	CD	O
and	CC	O
b_n	VB	O
=	NNP	O
sqrt	NN	O
(	(	O
a	DT	O
*	NN	O
.	.	O
b	NN	O
)	)	O
and	CC	O
p_n	JJ	O
=	NN	O
2	CD	O
.	.	O
0	CD	O
*	NN	O
.	.	O
p	NN	O
in	IN	O
let	NN	O
t_n	NN	O
=	NNP	O
t	NN	O
-.	NNP	O
(	(	O
p	JJ	O
*	NN	O
.	.	O
(	(	O
a	DT	O
-.	NNP	O
a_n	NN	O
)	)	O
*	NN	O
.	.	O
(	(	O
a	DT	O
-.	NNP	O
a_n	NN	O
)	)	O
)	)	O
in	IN	O
loop_	NN	O
a_n	NN	O
b_n	NN	O
t_n	NN	O
p_n	NN	O
(	(	O
i	JJ	O
-	:	O
1	CD	O
)	)	O
in	IN	O
let	NN	O
a	DT	O
,	,	O
b	NN	O
,	,	O
t	NN	O
,	,	O
p	NN	O
=	NNP	O
loop_	NN	O
(	(	O
1	CD	O
.	.	O
0	CD	O
)	)	O
(	(	O
1	CD	O
.	.	O
0	CD	O
/	NN	O
.	.	O
(	(	O
sqrt	JJ	O
2	CD	O
.	.	O
0	CD	O
)	)	O
)	)	O
(	(	O
1	CD	O
.	.	O
0	CD	O
/	NN	O
.	.	O
4	CD	O
.	.	O
0	CD	O
)	)	O
(	(	O
1	CD	O
.	.	O
0	CD	O
)	)	O
iters	NNS	O
in	IN	O
(	(	O
a	DT	O
+	NN	O
.	.	O
b	NN	O
)	)	O
*	NN	O
.	.	O
(	(	O
a	DT	O
+	NN	O
.	.	O
b	NN	O
)	)	O
/	NN	O
.	.	O
(	(	O
4	CD	O
.	.	O
0	CD	O
*	NN	O
.	.	O
t	NN	O
)	)	O
Lastly	RB	O
,	,	O
how	WRB	O
about	IN	O
some	DT	O
pi	JJ	O
golf	NN	O
(	(	O
800	CD	O
digits	NNS	O
)	)	O
?	.	O
160	CD	O
characters	NNS	O
!	.	O
int	NN	O
a	DT	O
=10000	NN	O
,	,	O
b	NN	O
,	,	O
c	NN	O
=2800	NN	O
,	,	O
d	NN	O
,	,	O
e	NN	O
,	,	O
f	JJ	O
[2801	NNP	O
]	NNP	O
,	,	O
g	NN	O
;main	NNP	O
(	(	O
)	)	O
{for	FW	O
(	(	O
;b	SYM	O
-	:	O
c	NN	O
;	:	O
)f	CC	O
[b	VB	O
+	JJ	O
+	NNP	O
]	NNP	O
=a	NNP	O
/5	NNP	O
;for	NNP	O
(	(	O
;d	NNP	O
=0	NNP	O
,	,	O
g	NN	O
=c	NNP	O
*2	NNP	O
;c	NNP	O
-	:	O
=14	NN	O
,	,	O
printf(	VB	B-API
"	CD	I-API
%	NN	I-API
.	.	I-API
4d	CD	I-API
"	NN	I-API
,	,	I-API
e	FW	I-API
+d	NNP	I-API
/a	NNP	I-API
)	)	L-API
,	,	O
e	JJ	O
=d	NNP	O
%a	NNP	O
)for	NNP	O
(	(	O
b	SYM	O
=c	NNP	O
;d	NNP	O
+	NNP	O
=f	NNP	O
[b	NNP	O
]	NNP	O
*a	NNP	O
,	,	O
f	JJ	O
[b	NNP	O
]	NNP	O
=d	NNP	O
%	NN	O
--	:	O
g	NN	O
,	,	O
d	NN	O
/	NNP	O
=g	NNP	O
--	:	O
,	,	O
--	:	O
b	SYM	O
;d	JJ	O
*	NNP	O
=b	NNP	O
)	)	O
;	:	O
}	)	O
A	NNP	O
few	JJ	O
things	NNS	O
:	:	O
You	PRP	O
are	VBP	O
creating	VBG	O
(	(	O
and	CC	O
not	RB	O
using	VBG	O
)	)	O
an	DT	O
unnecessary	JJ	O
toplevel	NN	O
window	NN	O
,	,	O
named	VBN	O
window	NN	O
.	.	O
You	PRP	O
can	MD	O
just	RB	O
delete	VB	O
these	DT	O
lines	NNS	O
:	:	O
window	NN	O
=	NN	O
gtk_window_new(	VBP	B-API
GTK_WINDOW_TOPLEVEL	NNP	I-API
)	)	L-API
;g_signal_connect	VBP	O
(	(	O
G_OBJECT(	NNP	B-API
window	NN	I-API
)	)	L-API
,	,	O
"delete_event	JJ	O
"	NN	O
,	,	O
G_CALLBACK(	NNP	B-API
delete_event	NN	I-API
)	)	L-API
,	,	O
NULL	NNP	O
)	)	O
;g_signal_connect	VBP	O
(	(	O
G_OBJECT(	NNP	B-API
window	NN	I-API
)	)	L-API
,	,	O
"destroy	NNP	O
"	NNP	O
,	,	O
G_CALLBACK(	NNP	B-API
destroy	NN	I-API
)	)	L-API
,	,	O
NULL	NNP	O
)	)	O
;	:	O
Also	RB	O
,	,	O
the	DT	O
flow	NN	O
doesn't	NN	O
seem	VBP	O
quite	RB	O
right	RB	O
.	.	O
gtk_main()	NN	U-API
starts	VBZ	O
the	DT	O
GTK	NNP	O
main	JJ	O
loop	NN	O
,	,	O
which	WDT	O
blocks	VBZ	O
until	IN	O
something	NN	O
exits	NNS	O
it	PRP	O
.	.	O
gtk_dialog_run()	NN	U-API
also	RB	O
starts	VBZ	O
a	DT	O
main	JJ	O
loop	NN	O
,	,	O
but	CC	O
it	PRP	O
exits	VBZ	O
as	RB	O
soon	RB	O
as	IN	O
one	CD	O
of	IN	O
the	DT	O
buttons	NNS	O
is	VBZ	O
clicked	VBN	O
.	.	O
I	PRP	O
think	VBP	O
it	PRP	O
might	MD	O
be	VB	O
enough	RB	O
for	IN	O
you	PRP	O
to	TO	O
remove	VB	O
the	DT	O
gtk_init_add()	NN	U-API
and	CC	O
gtk_main()	NN	U-API
calls	NNS	O
,	,	O
and	CC	O
simply	RB	O
deal	VB	O
with	IN	O
the	DT	O
return	NN	O
value	NN	O
.	.	O
Also	RB	O
the	DT	O
gtk_widget_destroy()	NN	U-API
call	NN	O
is	VBZ	O
unnecessary	JJ	O
,	,	O
as	IN	O
the	DT	O
dialog	NN	O
window	NN	O
is	VBZ	O
automatically	RB	O
destroyed	VBN	O
when	WRB	O
gtk_dialog_run()	JJ	U-API
returns	NNS	O
.	.	O
You	PRP	O
may	MD	O
also	RB	O
be	VB	O
interested	JJ	O
in	IN	O
the	DT	O
output	NN	O
of	IN	O
the	DT	O
explain()	NN	U-API
method	NN	O
,	,	O
and	CC	O
the	DT	O
resulting	JJ	O
Explanation	NNP	O
object	NN	O
,	,	O
which	WDT	O
will	MD	O
give	VB	O
you	PRP	O
an	DT	O
idea	NN	O
of	IN	O
how	WRB	O
things	NNS	O
are	VBP	O
scored	VBN	O
the	DT	O
way	NN	O
they	PRP	O
are	VBP	O
.	.	O
Well	NNP	O
,	,	O
in	IN	O
Java	NNP	O
an	DT	O
int	NN	O
is	VBZ	O
a	DT	O
primitive	JJ	O
while	IN	O
an	DT	O
Integer	NNP	O
is	VBZ	O
an	DT	O
Object	NNP	O
.	.	O
Meaning	NNP	O
,	,	O
if	IN	O
you	PRP	O
made	VBD	O
a	DT	O
new	JJ	O
Integer	NN	O
:	:	O
Integer	NN	O
i	VB	O
=	VBP	O
new	JJ	O
Integer(	NNP	B-API
6	CD	I-API
)	)	L-API
;	:	O
You	PRP	O
could	MD	O
call	VB	O
some	DT	O
method	NN	O
on	IN	O
i	NN	O
:	:	O
String	NN	O
s	NN	O
=	NNP	O
i.toString()	NN	U-API
;	:	O
/	CC	O
/sets	NNS	O
s	VBP	O
the	DT	O
string	NN	O
representation	NN	O
of	IN	O
i	JJ	O
Whereas	NNP	O
with	IN	O
an	DT	O
int	NN	O
:	:	O
int	NN	O
i	NN	O
=	VBP	O
6	CD	O
;	:	O
You	PRP	O
cannot	VBP	O
call	VB	O
any	DT	O
methods	NNS	O
on	IN	O
it	PRP	O
,	,	O
because	IN	O
it	PRP	O
is	VBZ	O
simply	RB	O
a	DT	O
primitive	NN	O
.	.	O
So	RB	O
:	:	O
String	VBG	O
s	NN	O
=	NNP	O
i.toString()	NN	U-API
;	:	O
/	NNP	O
/will	NNP	O
not	RB	O
work	NN	O
!	.	O
!	.	O
!	.	O
would	MD	O
produce	VB	O
an	DT	O
error	NN	O
,	,	O
because	IN	O
int	NN	O
is	VBZ	O
not	RB	O
an	DT	O
object	NN	O
.	.	O
int	NN	O
is	VBZ	O
one	CD	O
of	IN	O
the	DT	O
few	JJ	O
primitives	NNS	O
in	IN	O
Java	NNP	O
(	(	O
along	IN	O
with	IN	O
char	NN	O
and	CC	O
some	DT	O
others	NNS	O
)	)	O
.	.	O
I'm	NNP	O
not	RB	O
100	CD	O
%	NN	O
sure	JJ	O
,	,	O
but	CC	O
I'm	NNP	O
thinking	NN	O
that	IN	O
the	DT	O
Integer	NNP	O
object	VB	O
more	RBR	O
or	CC	O
less	RBR	O
just	RB	O
has	VBZ	O
an	DT	O
int	NN	O
property	NN	O
and	CC	O
a	DT	O
whole	JJ	O
bunch	NN	O
of	IN	O
methods	NNS	O
to	TO	O
interact	VB	O
with	IN	O
that	DT	O
property	NN	O
(	(	O
like	IN	O
the	DT	O
toString()	NN	U-API
method	NN	O
for	IN	O
example	NN	O
)	)	O
.	.	O
So	RB	O
Integer	NNP	O
is	VBZ	O
a	DT	O
fancy	JJ	O
way	NN	O
to	TO	O
work	VB	O
with	IN	O
an	DT	O
int	NN	O
(	(	O
Just	NNP	O
as	IN	O
perhaps	RB	O
String	NNP	O
is	VBZ	O
a	DT	O
fancy	JJ	O
way	NN	O
to	TO	O
work	VB	O
with	IN	O
a	DT	O
group	NN	O
of	IN	O
chars	NNS	O
)	)	O
.	.	O
I	PRP	O
know	VBP	O
that	IN	O
Java	NNP	O
isn't	NN	O
C	NNP	O
,	,	O
but	CC	O
since	IN	O
I've	NNP	O
never	RB	O
programmed	VBD	O
in	IN	O
C	NNP	O
this	DT	O
is	VBZ	O
the	DT	O
closest	JJS	O
I	PRP	O
could	MD	O
come	VB	O
to	TO	O
the	DT	O
answer	NN	O
.	.	O
Hope	VBP	O
this	DT	O
helps	NN	O
!	.	O
Integer	NNP	O
object	JJ	O
javadoc	NN	O
Integer	NNP	O
Ojbect	NNP	O
vs	NN	O
.	.	O
int	NN	O
primitive	JJ	O
comparison	NN	O
Interesting	NNP	O
question	NN	O
!	.	O
I	PRP	O
would	MD	O
do	VB	O
this	DT	O
by	IN	O
picking	VBG	O
combinations	NNS	O
,	,	O
something	NN	O
like	IN	O
the	DT	O
following	VBG	O
in	IN	O
python	NN	O
.	.	O
The	DT	O
hardest	JJS	O
part	NN	O
is	VBZ	O
probably	RB	O
first	JJ	O
pass	NN	O
verification	NN	O
,	,	O
i	NN	O
.	.	O
e	NN	O
.	.	O
if	IN	O
f(	JJ	B-API
1	CD	I-API
,	,	I-API
2	CD	I-API
,	,	I-API
3	CD	I-API
)	)	L-API
returns	NNS	O
true	JJ	O
,	,	O
is	VBZ	O
that	IN	O
a	DT	O
correct	JJ	O
result	NN	O
?	.	O
Once	RB	O
you	PRP	O
have	VBP	O
verified	VBN	O
that	IN	O
,	,	O
then	RB	O
this	DT	O
is	VBZ	O
a	DT	O
good	JJ	O
basis	NN	O
for	IN	O
regression	NN	O
testing	NN	O
.	.	O
Probably	RB	O
it's	VBZ	O
a	DT	O
good	JJ	O
idea	NN	O
to	TO	O
make	VB	O
a	DT	O
set	NN	O
of	IN	O
test	NN	O
cases	NNS	O
that	IN	O
you	PRP	O
know	VBP	O
will	MD	O
be	VB	O
all	DT	O
true	JJ	O
(	(	O
e	NN	O
.	.	O
g	NN	O
.	.	O
3	CD	O
,	,	O
4	CD	O
,	,	O
5	CD	O
for	IN	O
this	DT	O
triangle	JJ	O
case	NN	O
)	)	O
,	,	O
and	CC	O
a	DT	O
set	NN	O
of	IN	O
test	NN	O
cases	NNS	O
that	IN	O
you	PRP	O
know	VBP	O
will	MD	O
be	VB	O
all	DT	O
false	JJ	O
(	(	O
e	NN	O
.	.	O
g	NN	O
.	.	O
0	CD	O
,	,	O
1	CD	O
,	,	O
inf	NN	O
)	)	O
.	.	O
Then	RB	O
you	PRP	O
can	MD	O
more	VB	O
easily	RB	O
verify	VB	O
the	DT	O
tests	NNS	O
are	VBP	O
correct	JJ	O
.	.	O
#	#	O
xpermutations	NNS	O
from	IN	O
http	NN	O
:	:	O
/	JJ	O
/code	NN	O
.	.	O
activestate	NN	O
.	.	O
com	NN	O
/recipes	VBZ	O
/190465	CD	O
from	IN	O
xpermutations	NNS	O
import	VBP	O
*	JJ	O
lengths	NNS	O
=	VBP	O
[	SYM	O
-	:	O
1	CD	O
,	,	O
0	CD	O
,	,	O
1	CD	O
,	,	O
5	CD	O
,	,	O
10	CD	O
,	,	O
0	CD	O
,	,	O
1000	CD	O
,	,	O
'	''	O
inf	NN	O
'	POS	O
]	NN	O
for	IN	O
c	NN	O
in	IN	O
xselections(	JJ	B-API
lengths	NNS	I-API
,	,	I-API
3	CD	I-API
)	)	L-API
:	:	O
#	#	O
or	CC	O
xuniqueselections	NNS	O
print	VBP	O
c	JJ	O
(-	JJ	O
1	CD	O
,	,	O
-	:	O
1	CD	O
,	,	O
-	:	O
1	CD	O
)	)	O
;	:	O
(-	JJ	O
1	CD	O
,	,	O
-	:	O
1	CD	O
,	,	O
0	CD	O
)	)	O
;	:	O
(-	JJ	O
1	CD	O
,	,	O
-	:	O
1	CD	O
,	,	O
1	CD	O
)	)	O
;	:	O
(-	JJ	O
1	CD	O
,	,	O
-	:	O
1	CD	O
,	,	O
5	CD	O
)	)	O
;	:	O
(-	JJ	O
1	CD	O
,	,	O
-	:	O
1	CD	O
,	,	O
10	CD	O
)	)	O
;	:	O
(-	JJ	O
1	CD	O
,	,	O
-	:	O
1	CD	O
,	,	O
0	CD	O
)	)	O
;	:	O
(-	JJ	O
1	CD	O
,	,	O
-	:	O
1	CD	O
,	,	O
1000	CD	O
)	)	O
;	:	O
(-	JJ	O
1	CD	O
,	,	O
-	:	O
1	CD	O
,	,	O
inf	NN	O
)	)	O
;	:	O
(-	JJ	O
1	CD	O
,	,	O
0	CD	O
,	,	O
-	:	O
1	CD	O
)	)	O
;	:	O
(-	JJ	O
1	CD	O
,	,	O
0	CD	O
,	,	O
0	CD	O
)	)	O
;	:	O
...	:	O
There	EX	O
are	VBP	O
three	CD	O
ways	NNS	O
to	TO	O
iterate	VB	O
over	IN	O
a	DT	O
result	NN	O
set	VBN	O
.	.	O
The	DT	O
best	JJS	O
way	NN	O
in	IN	O
terms	NNS	O
of	IN	O
both	DT	O
readability	NN	O
and	CC	O
performance	NN	O
is	VBZ	O
usually	RB	O
to	TO	O
use	VB	O
the	DT	O
built-in	NN	O
cursor	NN	O
iterator	NN	O
.	.	O
curs.execute(	NN	B-API
'	''	I-API
select	JJ	I-API
*	NN	I-API
from	IN	I-API
people	NNS	I-API
'	POS	I-API
)	)	L-API
for	IN	O
row	NN	O
in	IN	O
curs	NNS	O
:	:	O
print	NN	O
row	NN	O
You	PRP	O
can	MD	O
fetch	VB	O
all	PDT	O
the	DT	O
rows	NNS	O
into	IN	O
a	DT	O
list	NN	O
,	,	O
but	CC	O
this	DT	O
can	MD	O
have	VB	O
some	DT	O
bad	JJ	O
side	NN	O
effects	NNS	O
if	IN	O
the	DT	O
result	NN	O
set	VBN	O
is	VBZ	O
large	JJ	O
.	.	O
You	PRP	O
have	VBP	O
to	TO	O
wait	VB	O
for	IN	O
the	DT	O
entire	JJ	O
result	NN	O
set	VBN	O
to	TO	O
be	VB	O
returned	VBN	O
to	TO	O
your	PRP$	O
client	NN	O
process	NN	O
.	.	O
You	PRP	O
may	MD	O
eat	VB	O
up	RP	O
a	DT	O
lot	NN	O
of	IN	O
memory	NN	O
in	IN	O
your	PRP$	O
client	NN	O
to	TO	O
hold	VB	O
the	DT	O
built-up	JJ	O
list	NN	O
.	.	O
It	PRP	O
may	MD	O
take	VB	O
a	DT	O
while	NN	O
for	IN	O
Python	NNP	O
to	TO	O
construct	VB	O
and	CC	O
deconstruct	VB	O
the	DT	O
list	NN	O
which	WDT	O
you	PRP	O
are	VBP	O
going	VBG	O
to	TO	O
immediately	RB	O
discard	VB	O
anyways	NNS	O
.	.	O
for	IN	O
row	NN	O
in	IN	O
curs.fetchall()	NN	U-API
:	:	O
print	NN	O
row	NN	O
Finally	RB	O
,	,	O
you	PRP	O
can	MD	O
loop	VB	O
over	IN	O
the	DT	O
result	NN	O
set	VBN	O
fetching	VBG	O
one	CD	O
row	NN	O
at	IN	O
a	DT	O
time	NN	O
.	.	O
In	IN	O
general	JJ	O
,	,	O
there's	JJ	O
no	DT	O
particular	JJ	O
advantage	NN	O
in	IN	O
doing	VBG	O
this	DT	O
over	IN	O
using	VBG	O
the	DT	O
iterator	NN	O
.	.	O
If	IN	O
there	EX	O
is	VBZ	O
something	NN	O
in	IN	O
your	PRP$	O
programming	NN	O
logic	NN	O
that	WDT	O
seems	VBZ	O
to	TO	O
indicate	VB	O
there	EX	O
is	VBZ	O
an	DT	O
advantage	NN	O
in	IN	O
doing	VBG	O
this	DT	O
,	,	O
perhaps	RB	O
you	PRP	O
should	MD	O
reconsider	VB	O
your	PRP$	O
programming	VBG	O
logic	NN	O
.	.	O
row	VB	O
=	JJ	O
curs.fetchone()	NN	U-API
while	IN	O
row	NN	O
:	:	O
print	NN	O
row	NN	O
row	NN	O
=	NNP	O
curs.fetchone()	NN	U-API
I'm	NNP	O
looking	VBG	O
for	IN	O
a	DT	O
performant	NN	O
,	,	O
reasonably	RB	O
robust	JJ	O
RNG	NNP	O
using	VBG	O
no	DT	O
special	JJ	O
hardware	NN	O
.	.	O
It	PRP	O
can	MD	O
use	VB	O
mathematical	JJ	O
methods	NNS	O
(	(	O
Mersenne	NNP	O
Twister	NNP	O
,	,	O
etc	NN	O
)	)	O
,	,	O
it	PRP	O
can	MD	O
"collect	VB	O
entropy	JJ	O
"	NN	O
from	IN	O
the	DT	O
machine	NN	O
,	,	O
whatever	WDT	O
.	.	O
On	IN	O
Linux	NNP	O
/etc	NNP	O
we	PRP	O
have	VBP	O
a	DT	O
drand48()	NN	U-API
which	WDT	O
generates	VBZ	O
48	CD	O
random	NN	O
bits	NNS	O
.	.	O
I'd	NNP	O
like	IN	O
a	DT	O
similar	JJ	U-API
function	NN	O
/class	NN	O
for	IN	O
C	NNP	O
+	NNP	O
+	NNP	O
or	CC	O
C	NNP	O
#	#	O
which	WDT	O
can	MD	O
generate	VB	O
more	JJR	O
than	IN	O
32	CD	O
bits	NNS	O
of	IN	O
randomness	NN	O
and	CC	O
which	WDT	O
low-order	NN	O
bits	NNS	O
are	VBP	O
equally	RB	O
as	RB	O
random	JJ	O
as	IN	O
high-order	NN	O
bits	NNS	O
.	.	O
It	PRP	O
doesn't	VBZ	O
have	VB	O
to	TO	O
be	VB	O
cryptographically	RB	O
secure	JJ	O
but	CC	O
it	PRP	O
must	MD	O
not	RB	O
use	VB	O
or	CC	O
be	VB	O
based	VBN	O
on	IN	O
the	DT	O
C-language	JJ	O
rand()	NN	U-API
or	CC	O
.	.	O
NET	JJ	O
System	NN	O
.	.	O
Random	NNP	O
.	.	O
Any	NNP	O
source	NN	O
code	NN	O
,	,	O
links	VBZ	O
to	TO	O
source	NN	O
,	,	O
etc	FW	O
.	.	O
would	MD	O
be	VB	O
appreciated	VBN	O
!	.	O
Failing	VBG	O
that	IN	O
,	,	O
what	WP	O
TYPE	NNP	O
of	IN	O
RNG	NNP	O
should	MD	O
I	PRP	O
be	VB	O
looking	VBG	O
for	IN	O
?	.	O
Hmm	NNP	O
,	,	O
ok	NN	O
.	.	O
I'd	NNP	O
suggest	VBP	O
code	NN	O
like	IN	O
this	DT	O
,	,	O
then	RB	O
:	:	O
typedef	VB	O
struct	NN	O
{	(	O
int	JJ	O
type	NN	O
;	:	O
int	JJ	O
result	NN	O
;	:	O
}	)	O
DialogData	NNP	O
;static	JJ	O
gbooleandisplay_dialog(	NN	B-API
gpointer	NN	I-API
user_data	NN	I-API
)	)	L-API
{	(	O
DialogData	NNP	O
*dialog_data	NNP	O
=	NNP	O
user_data	NN	O
;	:	O
GtkWidget	NNP	O
*dialog	NNP	O
;	:	O
if	IN	O
(	(	O
dialog_data	SYM	O
-	:	O
>type	NN	O
&	CC	O
MB_YESNO	NNP	O
)	)	O
dialog	NN	O
=	JJ	O
gtk_message_dialog_new(	NN	B-API
...	:	I-API
)	)	L-API
;	:	O
else	RB	O
dialog	NN	O
=	JJ	O
gtk_message_dialog_new(	NN	B-API
...	:	I-API
)	)	L-API
;	:	O
/	CC	O
/	VB	O
Set	NNP	O
title	NN	O
,	,	O
etc	FW	O
.	.	O
dialog_data	SYM	O
-	:	O
>result	NN	O
=	JJ	O
gtk_dialog_run(	NN	B-API
...	:	I-API
)	)	L-API
;	:	O
gtk_main_quit()	NN	U-API
;	:	O
/	CC	O
/	VB	O
Quits	VBZ	O
the	DT	O
main	JJ	O
loop	NN	O
run	NN	O
in	IN	O
MessageBox()	NNP	U-API
return	NN	O
FALSE	NNP	O
;	:	O
}int	NN	O
MessageBox(	NNP	B-API
...	:	I-API
)	)	L-API
{	(	O
DialogData	NNP	O
dialog_data	NN	O
;	:	O
dialog_data	NNS	O
.	.	O
type	NN	O
=	NN	O
type	NN	O
;	:	O
gtk_idle_add(	CC	B-API
display_dialog	NN	I-API
,	,	I-API
&dialog_data	NNP	I-API
)	)	L-API
;	:	O
gtk_main()	NN	U-API
;	:	O
/	CC	O
/	VB	O
Do	NNP	O
stuff	VB	O
based	VBN	O
on	IN	O
dialog_data	NN	O
.	.	O
result	NN	O
}	)	O
The	DT	O
struct	NN	O
is	VBZ	O
because	IN	O
you	PRP	O
need	VBP	O
to	TO	O
pass	VB	O
around	RP	O
a	DT	O
couple	NN	O
pieces	NNS	O
of	IN	O
data	NNS	O
.	.	O
The	DT	O
gtk_idle_add()	NN	U-API
call	NN	O
adds	VBZ	O
a	DT	O
method	NN	O
to	TO	O
be	VB	O
run	VBN	O
when	WRB	O
the	DT	O
main	JJ	O
loop	NN	O
is	VBZ	O
running	VBG	O
and	CC	O
idle	JJ	O
,	,	O
and	CC	O
the	DT	O
FALSE	NNP	O
return	NN	O
value	NN	O
from	IN	O
the	DT	O
display_dialog()	NN	U-API
call	NN	O
means	VBZ	O
that	IN	O
it's	VBG	O
only	RB	O
run	VB	O
once	RB	O
.	.	O
After	IN	O
we	PRP	O
get	VBP	O
the	DT	O
result	NN	O
from	IN	O
the	DT	O
dialog	NN	O
,	,	O
we	PRP	O
quit	VBP	O
the	DT	O
main	JJ	O
loop	NN	O
.	.	O
That'll	NNP	O
cause	VBP	O
the	DT	O
gtk_main()	NN	U-API
in	IN	O
your	PRP$	O
main	JJ	O
MessageBox()	NNP	U-API
method	NN	O
to	TO	O
return	VB	O
,	,	O
and	CC	O
you'll	RB	O
be	VB	O
able	JJ	O
to	TO	O
access	NN	O
the	DT	O
result	NN	O
from	IN	O
there	RB	O
.	.	O
Hope	VB	O
this	DT	O
helps	NN	O
!	.	O
I'll	NNP	O
add	VB	O
to	TO	O
the	DT	O
excellent	JJ	O
answers	NNS	O
given	VBN	O
above	IN	O
,	,	O
and	CC	O
talk	VB	O
about	IN	O
boxing	NN	O
and	CC	O
unboxing	NN	O
,	,	O
and	CC	O
how	WRB	O
this	DT	O
applies	VBZ	O
to	TO	O
Java	NNP	O
(	(	O
although	IN	O
C	NNP	O
#	#	O
has	VBZ	O
it	PRP	O
too	RB	O
)	)	O
.	.	O
I'll	NNP	O
use	NN	O
just	RB	O
Java	NNP	O
terminology	NN	O
,	,	O
because	IN	O
I	PRP	O
am	VBP	O
more	RBR	O
au	JJ	O
fait	NN	O
with	IN	O
that	DT	O
.	.	O
As	IN	O
the	DT	O
answers	NNS	O
mentioned	VBD	O
,	,	O
int	NN	O
is	VBZ	O
just	RB	O
a	DT	O
number	NN	O
(	(	O
called	VBN	O
the	DT	O
unboxed	JJ	O
type	NN	O
)	)	O
,	,	O
whereas	JJ	O
Integer	NNP	O
is	VBZ	O
an	DT	O
object	NN	O
(	(	O
which	WDT	O
contains	VBZ	O
the	DT	O
number	NN	O
,	,	O
hence	RB	O
a	DT	O
boxed	JJ	O
type	NN	O
)	)	O
.	.	O
In	IN	O
Java	NNP	O
terms	NNS	O
,	,	O
that	DT	O
means	VBZ	O
(	(	O
apart	RB	O
from	IN	O
not	RB	O
being	VBG	O
able	JJ	O
to	TO	O
call	VB	O
methods	NNS	O
on	IN	O
int	NN	O
)	)	O
,	,	O
you	PRP	O
cannot	VBP	O
store	VB	O
int	NN	O
or	CC	O
other	JJ	O
non-object	JJ	O
types	NNS	O
in	IN	O
collections	NNS	O
(	(	O
List	NNP	O
,	,	O
Map	NNP	O
,	,	O
etc	FW	O
.	.	O
)	)	O
.	.	O
In	IN	O
order	NN	O
to	TO	O
store	VB	O
them	PRP	O
,	,	O
you	PRP	O
must	MD	O
first	VB	O
box	VB	O
them	PRP	O
up	RP	O
in	IN	O
its	PRP$	O
corresponding	NN	O
boxed	JJ	O
type	NN	O
.	.	O
Java	NNP	O
5	CD	O
onwards	NNS	O
have	VBP	O
something	NN	O
called	VBN	O
auto-boxing	JJ	O
and	CC	O
auto-unboxing	JJ	O
which	WDT	O
allow	VBP	O
the	DT	O
boxing	NN	O
/unboxing	VBG	O
to	TO	O
be	VB	O
done	VBN	O
behind	IN	O
the	DT	O
scenes	NNS	O
.	.	O
Compare	NNP	O
and	CC	O
contrast	NN	O
:	:	O
Java	NNP	O
5	CD	O
version	NN	O
:	:	O
Deque	NNP	O
<Integer	NNP	O
>	NNP	O
queue	NN	O
;void	NNP	O
add(	NN	B-API
int	NN	I-API
n	NN	I-API
)	)	L-API
{	(	O
queue.add(	JJ	B-API
n	NN	I-API
)	)	L-API
;	:	O
}int	CC	O
remove()	VB	U-API
{	(	O
return	VB	O
queue.remove()	NN	U-API
;	:	O
}	)	O
Java	NNP	O
1	CD	O
.	.	O
4	CD	O
or	CC	O
earlier	JJR	O
(	(	O
no	DT	O
generics	NNS	O
either	CC	O
)	)	O
:	:	O
Deque	NNP	O
queue	VBZ	O
;void	JJ	O
add(	NN	B-API
int	NN	I-API
n	NN	I-API
)	)	L-API
{	(	O
queue.add(	JJ	B-API
Integer.valueOf(	NNP	I-API
n	NN	I-API
)	)	L-API
)	)	O
;	:	O
}int	CC	O
remove()	VB	U-API
{	(	O
return	VB	O
((	NNP	O
Integer	NNP	O
)	)	O
queue.remove()	NN	U-API
)	)	O
.	.	O
intValue()	NN	U-API
;	:	O
}	)	O
It	PRP	O
must	MD	O
be	VB	O
noted	VBN	O
that	IN	O
despite	IN	O
the	DT	O
brevity	NN	O
in	IN	O
the	DT	O
Java	NNP	O
5	CD	O
version	NN	O
,	,	O
both	DT	O
versions	NNS	O
generate	VBP	O
identical	JJ	O
bytecode	NN	O
.	.	O
Thus	RB	O
,	,	O
although	IN	O
auto-boxing	JJ	O
and	CC	O
auto-unboxing	JJ	O
is	VBZ	O
very	RB	O
convenient	JJ	O
because	IN	O
you	PRP	O
write	VBP	O
less	JJR	O
code	NN	O
,	,	O
these	DT	O
operations	NNS	O
do	VBP	O
happen	VB	O
behind	IN	O
the	DT	O
scenes	NNS	O
,	,	O
with	IN	O
the	DT	O
same	JJ	O
runtime	NN	O
costs	NNS	O
,	,	O
so	IN	O
you	PRP	O
still	RB	O
have	VBP	O
to	TO	O
be	VB	O
aware	JJ	O
of	IN	O
their	PRP$	O
existence	NN	O
.	.	O
Hope	VBP	O
this	DT	O
helps	NN	O
!	.	O
I'm	NNP	O
not	RB	O
a	DT	O
PHP	NNP	O
dev	NN	O
but	CC	O
Google	NNP	O
says	VBZ	O
that	IN	O
PHP	NNP	O
5	CD	O
+	NN	O
can	MD	O
instantiate	VB	O
COM	NNP	O
components	NNS	O
.	.	O
If	IN	O
you	PRP	O
can	MD	O
install	VB	O
Outlook	NNP	O
on	IN	O
a	DT	O
box	NN	O
you	PRP	O
could	MD	O
write	VB	O
a	DT	O
PHP	NNP	O
web	NN	O
service	NN	O
around	IN	O
the	DT	O
COM	NNP	O
component	NN	O
to	TO	O
handle	VB	O
the	DT	O
requests	NNS	O
you	PRP	O
need	VBP	O
.	.	O
$outlook	VB	O
=	JJ	O
COM(	NNP	B-API
"Outlook	NNP	I-API
.	.	I-API
Application	NNP	I-API
"	NNP	I-API
)	)	L-API
Outlook	NNP	O
API	NNP	O
referance	NN	O
I	PRP	O
found	VBD	O
this	DT	O
page	NN	O
which	WDT	O
shows	VBZ	O
what	WP	O
the	DT	O
difference	NN	O
between	IN	O
Proc	NNP	O
.	.	O
new	JJ	O
and	CC	O
lambda	JJ	O
are	VBP	O
.	.	O
According	VBG	O
to	TO	O
the	DT	O
page	NN	O
,	,	O
the	DT	O
only	JJ	O
difference	NN	O
is	VBZ	O
that	IN	O
a	DT	O
lambda	NN	O
is	VBZ	O
strict	JJ	O
about	IN	O
the	DT	O
number	NN	O
of	IN	O
arguments	NNS	O
it	PRP	O
accepts	VBZ	O
,	,	O
whereas	JJ	O
Proc	NNP	O
.	.	O
new	JJ	O
converts	NNS	O
missing	VBG	O
arguments	NNS	O
to	TO	O
nil	VB	O
.	.	O
Here	RB	O
is	VBZ	O
an	DT	O
example	NN	O
IRB	NNP	O
session	NN	O
illustrating	VBG	O
the	DT	O
difference	NN	O
:	:	O
irb(	NN	B-API
main	JJ	I-API
)	)	L-API
:001	FW	O
:0	FW	O
>	FW	O
l	NN	O
=	NNP	O
lambda	VBZ	O
{	(	O
|x	NN	O
,	,	O
y	CC	O
|	NNP	O
x	NNP	O
+	NNP	O
y	NN	O
}	)	O
=	NNP	O
>	NNP	O
#	#	O
<Proc	NNP	O
:0x00007fc605ec0748	NNP	O
@	NNP	O
(	(	O
irb	NN	O
)	)	O
:1	VBZ	O
>	JJ	O
irb(	NN	B-API
main	JJ	I-API
)	)	L-API
:002	FW	O
:0	FW	O
>	FW	O
p	FW	O
=	FW	O
Proc	NNP	O
.	.	O
new	JJ	O
{	(	O
|x	JJ	O
,	,	O
y	JJ	O
|	NNP	O
x	NNP	O
+	NNP	O
y	NN	O
}	)	O
=	NNP	O
>	NNP	O
#	#	O
<Proc	NNP	O
:0x00007fc605ea8698	NNP	O
@	NNP	O
(	(	O
irb	NN	O
)	)	O
:2	VBZ	O
>	JJ	O
irb(	NN	B-API
main	JJ	I-API
)	)	L-API
:003	FW	O
:0	FW	O
>	FW	O
l	NN	O
.	.	O
call	VB	O
"hello	JJ	O
"	NN	O
,	,	O
"world	NNP	O
"	NNP	O
=	NNP	O
>	NNP	O
"helloworld	NNP	O
"	NNP	O
irb(	NN	B-API
main	JJ	I-API
)	)	L-API
:004	FW	O
:0	FW	O
>	FW	O
p	NN	O
.	.	O
call	VB	O
"hello	JJ	O
"	NN	O
,	,	O
"world	NNP	O
"	NNP	O
=	NNP	O
>	NNP	O
"helloworld	NNP	O
"	NNP	O
irb(	NN	B-API
main	JJ	I-API
)	)	L-API
:005	FW	O
:0	FW	O
>	FW	O
l	NN	O
.	.	O
call	VB	O
"hello	JJ	O
"	JJ	O
ArgumentError	NN	O
:	:	O
wrong	JJ	O
number	NN	O
of	IN	O
arguments	NNS	O
(	(	O
1	CD	O
for	IN	O
2	CD	O
)	)	O
from	IN	O
(	(	O
irb	NN	O
)	)	O
:1	NN	O
from	IN	O
(	(	O
irb	NN	O
)	)	O
:5	VBZ	O
:in	JJ	O
`call	NN	O
'	''	O
from	IN	O
(	(	O
irb	NN	O
)	)	O
:5	NN	O
from	IN	O
:0	NNP	O
irb(	NN	B-API
main	JJ	I-API
)	)	L-API
:006	FW	O
:0	FW	O
>	FW	O
p	NN	O
.	.	O
call	VB	O
"hello	JJ	O
"	JJ	O
TypeError	NN	O
:	:	O
can't	NN	O
convert	VB	O
nil	NN	O
into	IN	O
String	VBG	O
from	IN	O
(	(	O
irb	NN	O
)	)	O
:2	VBZ	O
:in	JJ	O
`	``	O
+	NNS	O
'	''	O
from	IN	O
(	(	O
irb	NN	O
)	)	O
:2	NN	O
from	IN	O
(	(	O
irb	NN	O
)	)	O
:6	VBZ	O
:in	JJ	O
`call	NN	O
'	''	O
from	IN	O
(	(	O
irb	NN	O
)	)	O
:6	NN	O
from	IN	O
:0	VBG	O
The	DT	O
page	NN	O
also	RB	O
recommends	VBZ	O
using	VBG	O
lambda	JJ	O
unless	IN	O
you	PRP	O
specifically	RB	O
want	VBP	O
the	DT	O
error	NN	O
tolerant	JJ	O
behavior	NN	O
.	.	O
I	PRP	O
agree	VBP	O
with	IN	O
this	DT	O
sentiment	NN	O
.	.	O
Using	VBG	O
a	DT	O
lambda	NN	O
seems	VBZ	O
a	DT	O
tad	RB	O
more	RBR	O
concise	NN	O
,	,	O
and	CC	O
with	IN	O
such	JJ	O
an	DT	O
insignificant	JJ	O
difference	NN	O
,	,	O
it	PRP	O
seems	VBZ	O
the	DT	O
better	JJR	O
choice	NN	O
in	IN	O
the	DT	O
average	JJ	O
situation	NN	O
.	.	O
As	IN	O
for	IN	O
Ruby	NNP	O
1	CD	O
.	.	O
9	CD	O
,	,	O
sorry	NN	O
,	,	O
I	PRP	O
haven't	VBP	O
looked	VBD	O
into	IN	O
1	CD	O
.	.	O
9	CD	O
yet	RB	O
,	,	O
but	CC	O
I	PRP	O
don't	VBP	O
imagine	JJ	O
they	PRP	O
would	MD	O
change	VB	O
it	PRP	O
all	PDT	O
that	RB	O
much	JJ	O
(	(	O
don't	JJ	O
take	VB	O
my	PRP$	O
word	NN	O
for	IN	O
it	PRP	O
though	IN	O
,	,	O
it	PRP	O
seems	VBZ	O
you	PRP	O
have	VBP	O
heard	VBN	O
of	IN	O
some	DT	O
changes	NNS	O
,	,	O
so	IN	O
I	PRP	O
am	VBP	O
probably	RB	O
wrong	JJ	O
there	RB	O
)	)	O
.	.	O
With	IN	O
the	DT	O
"Built	NN	O
in	IN	O
"	NNP	O
stuff	NN	O
,	,	O
you	PRP	O
can't	VBP	O
,	,	O
as	IN	O
using	VBG	O
1	CD	O
.	.	O
0	CD	O
.	.	O
*	NN	O
or	CC	O
1	CD	O
.	.	O
0	CD	O
.	.	O
0	CD	O
.	.	O
*	NN	O
will	MD	O
replace	VB	O
the	DT	O
revision	NN	O
and	CC	O
build	JJ	O
numbers	NNS	O
with	IN	O
a	DT	O
coded	JJ	O
date	NN	O
/timestamp	NN	O
,	,	O
which	WDT	O
is	VBZ	O
usually	RB	O
also	RB	O
a	DT	O
good	JJ	O
way	NN	O
.	.	O
For	IN	O
more	JJR	O
info	NN	O
,	,	O
see	VBP	O
the	DT	O
Assembly	NNP	O
Linker	NNP	O
Documentation	NNP	O
in	IN	O
the	DT	O
/v	NNP	O
tag	NN	O
.	.	O
As	IN	O
for	IN	O
automatically	RB	O
incrementing	VBG	O
numbers	NNS	O
,	,	O
use	VBP	O
the	DT	O
AssemblyInfo	NNP	O
Task	NNP	O
:	:	O
AssemblyInfo	NNP	O
Task	NNP	O
This	DT	O
can	MD	O
be	VB	O
configured	VBN	O
to	TO	O
automatically	RB	O
increment	VB	O
the	DT	O
build	JJ	O
number	NN	O
.	.	O
There	EX	O
are	VBP	O
2	CD	O
Gotchas	NNP	O
:	:	O
Each	DT	O
of	IN	O
the	DT	O
4	CD	O
numbers	NNS	O
in	IN	O
the	DT	O
Version	NNP	O
string	NN	O
is	VBZ	O
limited	VBN	O
to	TO	O
65535	CD	O
.	.	O
This	DT	O
is	VBZ	O
a	DT	O
Windows	NNP	O
Limitation	NNP	O
and	CC	O
unlikely	RB	O
to	TO	O
get	VB	O
fixed	VBN	O
.	.	O
Why	WRB	O
are	VBP	O
build	JJ	O
numbers	NNS	O
limited	VBD	O
to	TO	O
65535	CD	O
?	.	O
Using	VBG	O
with	IN	O
with	IN	O
Subversion	NNP	O
requires	VBZ	O
a	DT	O
small	JJ	O
change	NN	O
:	:	O
Using	NN	O
MSBuild	NNP	O
to	TO	O
generate	VB	O
assembly	NN	O
version	NN	O
info	NN	O
at	IN	O
build	JJ	O
time	NN	O
(	(	O
including	VBG	O
SubVersion	NNP	O
fix	NN	O
)	)	O
Retrieving	VBG	O
the	DT	O
Version	NNP	O
number	NN	O
is	VBZ	O
then	RB	O
quite	RB	O
easy	JJ	O
:	:	O
Version	NN	O
v	NN	O
=	NNP	O
Assembly.GetExecutingAssembly()	NNP	U-API
.	.	O
GetName()	NNP	U-API
.	.	O
Version	NNP	O
;	:	O
string	VBG	O
About	IN	O
=	NNP	O
string.Format(	NN	B-API
CultureInfo	NNP	I-API
.	.	I-API
InvariantCulture	NN	I-API
,	,	I-API
@	NNP	I-API
"YourApp	NNP	I-API
Version	NNP	I-API
{0	NNP	I-API
}	)	I-API
.	.	I-API
{1	JJ	I-API
}	)	I-API
.	.	I-API
{2	JJ	I-API
}	)	I-API
(	(	I-API
r	JJ	I-API
{3	NNP	I-API
}	)	I-API
)	)	L-API
"	NN	O
,	,	O
v	NN	O
.	.	O
Major	NNP	O
,	,	O
v	NN	O
.	.	O
Minor	NNP	O
,	,	O
v	NN	O
.	.	O
Build	NNP	O
,	,	O
v	NN	O
.	.	O
Revision	NNP	O
)	)	O
;	:	O
And	CC	O
,	,	O
to	TO	O
clarify	VB	O
:	:	O
In	IN	O
.	.	O
net	NN	O
or	CC	O
at	IN	O
least	JJS	O
in	IN	O
C	NNP	O
#	#	O
,	,	O
the	DT	O
build	NN	O
is	VBZ	O
actually	RB	O
the	DT	O
THIRD	NNP	O
number	NN	O
,	,	O
not	RB	O
the	DT	O
fourth	JJ	O
one	CD	O
as	IN	O
some	DT	O
people	NNS	O
(	(	O
for	IN	O
example	NN	O
Delphi	NNP	O
Developers	NNP	O
who	WP	O
are	VBP	O
used	VBN	O
to	TO	O
Major	NNP	O
.	.	O
Minor	NNP	O
.	.	O
Release	NNP	O
.	.	O
Build	NNP	O
)	)	O
might	MD	O
expect	VB	O
.	.	O
In	IN	O
.	.	O
net	NN	O
,	,	O
it's	NN	O
Major	NNP	O
.	.	O
Minor	NNP	O
.	.	O
Build	NNP	O
.	.	O
Revision	NNP	O
.	.	O
I	PRP	O
would	MD	O
use	VB	O
Javascript	NNP	O
to	TO	O
submit	VB	O
the	DT	O
form	NN	O
.	.	O
The	DT	U-API
function	NN	O
would	MD	O
be	VB	O
triggered	VBN	O
by	IN	O
the	DT	O
OnKeyPress	NNP	O
event	NN	O
of	IN	O
the	DT	O
form	NN	O
element	NN	O
,	,	O
and	CC	O
would	MD	O
detect	VB	O
whether	IN	O
the	DT	O
Enter	NNP	O
key	NN	O
was	VBD	O
selected	VBN	O
.	.	O
If	IN	O
this	DT	O
is	VBZ	O
the	DT	O
case	NN	O
,	,	O
it	PRP	O
will	MD	O
submit	VB	O
the	DT	O
form	NN	O
.	.	O
Here	RB	O
are	VBP	O
two	CD	O
pages	NNS	O
that	WDT	O
give	VBP	O
techniques	NNS	O
on	IN	O
how	WRB	O
to	TO	O
do	VB	O
this	DT	O
:	:	O
1	CD	O
,	,	O
2	CD	O
.	.	O
Based	VBN	O
on	IN	O
these	DT	O
,	,	O
here	RB	O
is	VBZ	O
an	DT	O
example	NN	O
of	IN	O
usage	NN	O
(	(	O
based	VBN	O
on	IN	O
here	RB	O
)	)	O
:	:	O
<SCRIPT	JJ	O
TYPE	NNP	O
=	NNP	O
"text	NNP	O
/javascript	NNP	O
"	NNP	O
>	NNP	O
<	NN	O
!	.	O
--	:	U-API
function	NN	O
submitenter(	JJ	B-API
myfield	NN	I-API
,	,	I-API
e	NN	I-API
)	)	L-API
{	(	O
var	JJ	O
keycode	NN	O
;	:	O
if	IN	O
(	(	O
window	NN	O
.	.	O
event	NN	O
)	)	O
{	(	O
keycode	NN	O
=	NN	O
window	NN	O
.	.	O
event	NN	O
.	.	O
keyCode	NN	O
;	:	O
}	)	O
else	RB	O
if	IN	O
(	(	O
e	NN	O
)	)	O
{	(	O
keycode	VB	O
=	NNP	O
e	NN	O
.	.	O
which	WDT	O
;	:	O
}	)	O
else	RB	O
{	(	O
return	NN	O
true	JJ	O
;	:	O
}	)	O
if	IN	O
(	(	O
keycode	FW	O
=	NNP	O
=	NNP	O
13	CD	O
)	)	O
{	(	O
myfield.form.submit()	NN	U-API
;	:	O
return	NN	O
false	JJ	O
;	:	O
}	)	O
else	RB	O
{	(	O
return	NN	O
true	JJ	O
;	:	O
}	)	O
}	)	O
/	JJ	O
/	NNP	O
--	:	O
>	JJ	O
<	JJ	O
/SCRIPT	NN	O
>	NNP	O
<INPUT	NNP	O
NAME	NNP	O
=	NNP	O
"MyText	NNP	O
"	NNP	O
TYPE	NNP	O
=	NNP	O
"Text	NNP	O
"	NNP	O
onKeyPress	NN	O
=	NNP	O
"return	NNP	O
submitenter(	NN	B-API
this	DT	I-API
,	,	I-API
event	NN	I-API
)	)	L-API
"	NN	O
/	NNP	O
>	NNP	O
How	NNP	O
often	RB	O
do	VBP	O
you	PRP	O
need	VB	O
to	TO	O
check	VB	O
for	IN	O
changes	NNS	O
and	CC	O
how	WRB	O
large	JJ	O
(	(	O
in	IN	O
terms	NNS	O
of	IN	O
row	NN	O
size	NN	O
)	)	O
are	VBP	O
the	DT	O
tables	NNS	O
in	IN	O
the	DT	O
database	NN	O
?	.	O
If	IN	O
you	PRP	O
use	VBP	O
the	DT	O
CHECKSUM_AGG(	NNP	B-API
BINARY_CHECKSUM(	NNP	I-API
*	NNP	I-API
)	)	L-API
)	)	O
method	NN	O
suggested	VBN	O
by	IN	O
John	NNP	O
,	,	O
it	PRP	O
will	MD	O
scan	VB	O
every	DT	O
row	NN	O
of	IN	O
the	DT	O
specified	VBN	O
table	NN	O
.	.	O
The	DT	O
NOLOCK	NNP	O
hint	NN	O
helps	VBZ	O
,	,	O
but	CC	O
on	IN	O
a	DT	O
large	JJ	O
database	NN	O
,	,	O
you	PRP	O
are	VBP	O
still	RB	O
hitting	VBG	O
every	DT	O
row	NN	O
.	.	O
You	PRP	O
will	MD	O
also	RB	O
need	VB	O
to	TO	O
store	VB	O
the	DT	O
checksum	NN	O
for	IN	O
every	DT	O
row	NN	O
so	IN	O
that	IN	O
you	PRP	O
tell	VBP	O
one	CD	O
has	VBZ	O
changed	VBN	O
.	.	O
Have	VBP	O
you	PRP	O
considered	VBN	O
going	VBG	O
at	IN	O
this	DT	O
from	IN	O
a	DT	O
different	JJ	O
angle	NN	O
?	.	O
If	IN	O
you	PRP	O
do	VBP	O
not	RB	O
want	VB	O
to	TO	O
modify	VB	O
the	DT	O
schema	NN	O
to	TO	O
add	VB	O
triggers	NNS	O
,	,	O
(	(	O
which	WDT	O
makes	VBZ	O
a	DT	O
sense	NN	O
,	,	O
it's	VBZ	O
not	RB	O
your	PRP$	O
database	NN	O
)	)	O
,	,	O
have	VBP	O
you	PRP	O
considered	VBN	O
working	VBG	O
with	IN	O
the	DT	O
application	NN	O
vendor	NN	O
that	WDT	O
does	VBZ	O
make	VB	O
the	DT	O
database	NN	O
?	.	O
They	PRP	O
could	MD	O
implement	VB	O
an	DT	O
API	NNP	O
that	WDT	O
provides	VBZ	O
a	DT	O
mechanism	NN	O
for	IN	O
notifying	VBG	O
accessory	JJ	O
apps	NN	O
that	WDT	O
data	NN	O
has	VBZ	O
changed	VBN	O
.	.	O
It	PRP	O
could	MD	O
be	VB	O
as	RB	O
simple	JJ	O
as	IN	O
writing	VBG	O
to	TO	O
a	DT	O
notification	NN	O
table	NN	O
that	WDT	O
lists	VBZ	O
what	WP	O
table	NN	O
and	CC	O
which	WDT	O
row	VBP	O
were	VBD	O
modified	VBN	O
.	.	O
That	DT	O
could	MD	O
be	VB	O
implemented	VBN	O
through	IN	O
triggers	NNS	O
or	CC	O
application	NN	O
code	NN	O
.	.	O
From	IN	O
your	PRP$	O
side	NN	O
,	,	O
ti	VBP	O
wouldn't	JJ	O
matter	NN	O
,	,	O
your	PRP$	O
only	JJ	O
concern	NN	O
would	MD	O
be	VB	O
scanning	VBG	O
the	DT	O
notification	NN	O
table	NN	O
on	IN	O
a	DT	O
periodic	JJ	O
basis	NN	O
.	.	O
The	DT	O
performance	NN	O
hit	VBD	O
on	IN	O
the	DT	O
database	NN	O
would	MD	O
be	VB	O
far	RB	O
less	JJR	O
than	IN	O
scanning	VBG	O
every	DT	O
row	NN	O
for	IN	O
changes	NNS	O
.	.	O
The	DT	O
hard	JJ	O
part	NN	O
would	MD	O
be	VB	O
convincing	VBG	O
the	DT	O
application	NN	O
vendor	NN	O
to	TO	O
implement	VB	O
this	DT	O
feature	NN	O
.	.	O
Since	IN	O
this	DT	O
can	MD	O
be	VB	O
handles	NNS	O
entirely	RB	O
through	IN	O
SQL	NNP	O
via	IN	O
triggers	NNS	O
,	,	O
you	PRP	O
could	MD	O
do	VB	O
the	DT	O
bulk	NN	O
of	IN	O
the	DT	O
work	NN	O
for	IN	O
them	PRP	O
by	IN	O
writing	VBG	O
and	CC	O
testing	VBG	O
the	DT	O
triggers	NNS	O
and	CC	O
then	RB	O
bringing	VBG	O
the	DT	O
code	NN	O
to	TO	O
the	DT	O
application	NN	O
vendor	NN	O
.	.	O
By	IN	O
having	VBG	O
the	DT	O
vendor	NN	O
support	NN	O
the	DT	O
triggers	NNS	O
,	,	O
it	PRP	O
prevent	VBD	O
the	DT	O
situation	NN	O
where	WRB	O
your	PRP$	O
adding	VBG	O
a	DT	O
trigger	NN	O
inadvertently	RB	O
replaces	VBZ	O
a	DT	O
trigger	NN	O
supplied	VBN	O
by	IN	O
the	DT	O
vendor	NN	O
.	.	O
No	UH	O
,	,	O
you	PRP	O
were	VBD	O
not	RB	O
dreaming	VBG	O
.	.	O
Python	NNP	O
has	VBZ	O
a	DT	O
pretty	RB	O
excellent	JJ	O
list	NN	O
comprehension	NN	O
system	NN	O
that	WDT	O
lets	VBZ	O
you	PRP	O
manipulate	VBP	O
lists	NNS	O
pretty	RB	O
elegantly	RB	O
,	,	O
and	CC	O
depending	VBG	O
on	IN	O
exactly	RB	O
what	WP	O
you	PRP	O
want	VBP	O
to	TO	O
accomplish	VB	O
,	,	O
this	DT	O
can	MD	O
be	VB	O
done	VBN	O
a	DT	O
couple	NN	O
of	IN	O
ways	NNS	O
.	.	O
In	IN	O
essence	NN	O
,	,	O
what	WP	O
you're	NN	O
doing	VBG	O
is	VBZ	O
saying	VBG	O
"For	JJ	O
item	NN	O
in	IN	O
list	NN	O
if	IN	O
criteria	NNS	O
.	.	O
matches	NNS	O
"	VBP	O
,	,	O
and	CC	O
from	IN	O
that	IN	O
you	PRP	O
can	MD	O
just	RB	O
iterate	VB	O
through	IN	O
the	DT	O
results	NNS	O
or	CC	O
dump	VB	O
the	DT	O
results	NNS	O
into	IN	O
a	DT	O
new	JJ	O
list	NN	O
.	.	O
I'm	NNP	O
going	VBG	O
to	TO	O
crib	VB	O
an	DT	O
example	NN	O
from	IN	O
Dive	NNP	O
Into	NNP	O
Python	NNP	O
here	RB	O
,	,	O
because	IN	O
it's	JJ	O
pretty	JJ	O
elegant	JJ	O
and	CC	O
they're	JJ	O
smarter	NN	O
than	IN	O
I	PRP	O
am	VBP	O
.	.	O
Here	RB	O
they're	VBZ	O
getting	VBG	O
a	DT	O
list	NN	O
of	IN	O
files	NNS	O
in	IN	O
a	DT	O
directory	NN	O
,	,	O
then	RB	O
filtering	VBG	O
the	DT	O
list	NN	O
for	IN	O
all	DT	O
files	NNS	O
that	WDT	O
match	VBP	O
a	DT	O
regular	JJ	O
expression	NN	O
criteria	NNS	O
.	.	O
files	NNS	O
=	VBP	O
os.listdir(	JJ	B-API
path	NN	I-API
)	)	L-API
test	NN	O
=	NN	O
re.compile(	NN	B-API
"test	NNP	I-API
\	NNP	I-API
.	.	I-API
py	VB	I-API
$	$	I-API
"	CD	I-API
,	,	I-API
re	NN	I-API
.	.	I-API
IGNORECASE	NNP	I-API
)	)	L-API
files	VBZ	O
=	JJ	O
[f	NN	O
for	IN	O
f	NN	O
in	IN	O
files	NNS	O
if	IN	O
test.search(	JJ	B-API
f	NN	I-API
)	)	L-API
]	NN	O
You	PRP	O
could	MD	O
do	VB	O
this	DT	O
without	IN	O
regular	JJ	O
expressions	NNS	O
,	,	O
for	IN	O
your	PRP$	O
example	NN	O
,	,	O
for	IN	O
anything	NN	O
where	WRB	O
your	PRP$	O
expression	NN	O
at	IN	O
the	DT	O
end	NN	O
returns	VBZ	O
true	JJ	O
for	IN	O
a	DT	O
match	NN	O
.	.	O
There	EX	O
are	VBP	O
other	JJ	O
options	NNS	O
like	IN	O
using	VBG	O
the	DT	O
filter()	NN	U-API
function	NN	O
,	,	O
but	CC	O
if	IN	O
I	PRP	O
were	VBD	O
going	VBG	O
to	TO	O
choose	VB	O
,	,	O
I'd	NNP	O
go	VBP	O
with	IN	O
this	DT	O
.	.	O
Eric	JJ	O
Sipple	NNP	O
I	PRP	O
think	VBP	O
:	:	O
#	#	O
!	.	O
/bin	JJ	O
/pythonbar	NN	O
in	IN	O
dict(	JJ	B-API
Foo	NNP	I-API
)	)	L-API
Is	VBZ	O
what	WP	O
you	PRP	O
are	VBP	O
thinking	VBG	O
of	IN	O
.	.	O
When	WRB	O
trying	VBG	O
to	TO	O
see	VB	O
if	IN	O
a	DT	O
certain	JJ	O
key	JJ	O
exists	NNS	O
within	IN	O
a	DT	O
dictionary	JJ	O
in	IN	O
python	NN	O
(	(	O
python's	JJ	O
version	NN	O
of	IN	O
a	DT	O
hash	NN	O
table	NN	O
)	)	O
there	EX	O
are	VBP	O
two	CD	O
ways	NNS	O
to	TO	O
check	VB	O
.	.	O
First	NNP	O
is	VBZ	O
the	DT	O
has_key()	NN	U-API
method	NN	O
attached	VBN	O
to	TO	O
the	DT	O
dictionary	JJ	O
and	CC	O
second	JJ	O
is	VBZ	O
the	DT	O
example	NN	O
given	VBN	O
above	IN	O
.	.	O
It	PRP	O
will	MD	O
return	VB	O
a	DT	O
boolean	JJ	O
value	NN	O
.	.	O
That	DT	O
should	MD	O
answer	VB	O
your	PRP$	O
question	NN	O
.	.	O
And	CC	O
now	RB	O
a	DT	O
little	JJ	O
off	RP	O
topic	NN	O
to	TO	O
tie	VB	O
this	DT	O
in	IN	O
to	TO	O
the	DT	O
list	NN	O
comprehension	NN	O
answer	VBZ	O
previously	RB	O
given	VBN	O
(	(	O
for	IN	O
a	DT	O
bit	NN	O
more	JJR	O
clarity	NN	O
)	)	O
.	.	O
List	JJ	O
Comprehensions	NNP	O
construct	NN	O
a	DT	O
list	NN	O
from	IN	O
a	DT	O
basic	JJ	O
for	IN	O
loop	NN	O
with	IN	O
modifiers	NNS	O
.	.	O
As	IN	O
an	DT	O
example	NN	O
(	(	O
to	TO	O
clarify	VB	O
slightly	RB	O
)	)	O
,	,	O
a	DT	O
way	NN	O
to	TO	O
use	VB	O
the	DT	O
in	IN	O
dict	JJ	O
language	NN	O
construct	NN	O
in	IN	O
a	DT	O
_list	JJ	O
comprehension_	NN	O
:	:	O
Say	NNP	O
you	PRP	O
have	VBP	O
a	DT	O
two	CD	O
dimensional	JJ	O
dictionary	JJ	O
foo	NN	O
and	CC	O
you	PRP	O
only	RB	O
want	VBP	O
the	DT	O
second	JJ	O
dimension	NN	O
dictionaries	NNS	O
which	WDT	O
contain	VBP	O
the	DT	O
key	JJ	O
bar	NN	O
.	.	O
A	DT	O
relatively	RB	O
straightforward	JJ	O
way	NN	O
to	TO	O
do	VB	O
so	RB	O
would	MD	O
be	VB	O
to	TO	O
use	VB	O
a	DT	O
list	NN	O
comprehension	NN	O
with	IN	O
a	DT	O
conditional	JJ	O
as	IN	O
follows	VBZ	O
:	:	O
#	#	O
!	.	O
/bin	NN	O
/pythonbaz	NNP	O
=	NNP	O
dict(	NN	B-API
[	NNP	I-API
(	(	I-API
key	JJ	I-API
,	,	I-API
value	NN	I-API
)	)	L-API
for	IN	O
key	NN	O
,	,	O
value	NN	O
in	IN	O
foo	NN	O
if	IN	O
bar	NN	O
in	IN	O
value	NN	O
]	NN	O
)	)	O
Note	VBP	O
the	DT	O
if	IN	O
bar	NN	O
in	IN	O
value	NN	O
at	IN	O
the	DT	O
end	NN	O
of	IN	O
the	DT	O
statement	NN	O
,	,	O
this	DT	O
is	VBZ	O
a	DT	O
modifying	NN	O
clause	NN	O
which	WDT	O
tells	VBZ	O
the	DT	O
list	NN	O
comprehension	NN	O
to	TO	O
only	RB	O
keep	VB	O
those	DT	O
key-value	JJ	O
pairs	NNS	O
which	WDT	O
meet	VBP	O
the	DT	O
conditional	NN	O
.	.	O
In	IN	O
this	DT	O
case	NN	O
baz	NN	O
is	VBZ	O
a	DT	O
new	JJ	O
dictionary	NN	O
which	WDT	O
contains	VBZ	O
only	RB	O
the	DT	O
dictionaries	NNS	O
from	IN	O
foo	NN	O
which	WDT	O
contain	VBP	O
bar	NN	O
(	(	O
Hopefully	NNP	O
I	PRP	O
didn't	VBP	O
miss	JJ	O
anything	NN	O
in	IN	O
that	DT	O
code	NN	O
example	NN	O
...	:	O
you	PRP	O
may	MD	O
have	VB	O
to	TO	O
take	VB	O
a	DT	O
look	NN	O
at	IN	O
the	DT	O
list	NN	O
comprehension	NN	O
documentation	NN	O
found	VBD	O
in	IN	O
docs	NN	O
.	.	O
python	NN	O
.	.	O
org	JJ	O
tutorials	NNS	O
and	CC	O
at	IN	O
secnetix	NN	O
.	.	O
de	NN	O
,	,	O
both	DT	O
sites	NNS	O
are	VBP	O
good	JJ	O
references	NNS	O
if	IN	O
you	PRP	O
have	VBP	O
questions	NNS	O
in	IN	O
the	DT	O
future	NN	O
.	.	O
)	)	O
.	.	O
Are	VBP	O
you	PRP	O
looking	VBG	O
to	TO	O
get	VB	O
a	DT	O
list	NN	O
of	IN	O
objects	NNS	O
that	WDT	O
have	VBP	O
a	DT	O
certain	JJ	O
attribute	NN	O
?	.	O
If	IN	O
so	RB	O
,	,	O
a	DT	O
list	NN	O
comprehension	NN	O
is	VBZ	O
the	DT	O
right	JJ	O
way	NN	O
to	TO	O
do	VB	O
this	DT	O
.	.	O
result	NN	O
=	JJ	O
[obj	NN	O
for	IN	O
obj	NN	O
in	IN	O
listOfObjs	NN	O
if	IN	O
hasattr(	JJ	B-API
obj	NN	I-API
,	,	I-API
'	''	I-API
attributeName	NN	I-API
'	''	I-API
)	)	L-API
]	NN	O
Here	RB	O
is	VBZ	O
a	DT	O
simple	JJ	O
static	JJ	O
method	NN	O
to	TO	O
do	VB	O
this	DT	O
in	IN	O
C	NNP	O
#	#	O
:	:	O
public	JJ	O
static	JJ	O
string	NN	O
ToTitleCaseInvariant(	NNP	B-API
string	VBG	I-API
targetString	VBG	I-API
)	)	L-API
{	(	O
return	NN	O
System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(	NNP	B-API
targetString	NN	I-API
)	)	L-API
;	:	O
}	)	O
In	IN	O
what	WP	O
language	NN	O
?	.	O
In	IN	O
PHP	NNP	O
it	PRP	O
is	VBZ	O
:	:	O
ucwords()	JJ	U-API
example	NN	O
:	:	O
$HelloWorld	NN	O
=	VBZ	O
ucwords(	JJ	B-API
'	''	I-API
hello	JJ	I-API
world	NN	I-API
'	''	I-API
)	)	L-API
;	:	O
What	WP	O
I	PRP	O
was	VBD	O
thinking	VBG	O
of	IN	O
can	MD	O
be	VB	O
achieved	VBN	O
using	VBG	O
list	NN	O
comprehensions	NNS	O
,	,	O
but	CC	O
I	PRP	O
thought	VBD	O
that	IN	O
there	EX	O
was	VBD	O
a	DT	U-API
function	NN	O
that	WDT	O
did	VBD	O
this	DT	O
in	IN	O
a	DT	O
slightly	RB	O
neater	JJ	O
way	NN	O
.	.	O
i	NN	O
.	.	O
e	NN	O
.	.	O
'	''	O
bar	NN	O
'	''	O
is	VBZ	O
a	DT	O
list	NN	O
of	IN	O
objects	NNS	O
,	,	O
all	DT	O
of	IN	O
which	WDT	O
have	VBP	O
the	DT	O
attribute	NN	O
'	POS	O
id	NN	O
'	''	O
The	DT	O
mythical	JJ	O
functional	JJ	O
way	NN	O
:	:	O
foo	NN	O
=	VBZ	O
12foo	CD	O
in	IN	O
iter_attr(	JJ	B-API
bar	NN	I-API
,	,	I-API
'	''	I-API
id	NN	I-API
'	''	I-API
)	)	L-API
The	DT	O
list	NN	O
comprehension	NN	O
way	NN	O
:	:	O
foo	NN	O
=	VBZ	O
12foo	CD	O
in	IN	O
[obj	NN	O
.	.	O
id	NN	O
for	IN	O
obj	NN	O
in	IN	O
bar	NN	O
]	NN	O
In	IN	O
retrospect	NN	O
the	DT	O
list	NN	O
comprehension	NN	O
way	NN	O
is	VBZ	O
pretty	JJ	O
neat	JJ	O
anyway	RB	O
.	.	O
One	CD	O
implementation	NN	O
of	IN	O
this	DT	O
problem	NN	O
is	VBZ	O
to	TO	O
attempt	VB	O
to	TO	O
call	VB	O
the	DT	O
parameter-less	JJ	O
constructor	NN	O
of	IN	O
the	DT	O
Type	NN	O
:	:	O
public	JJ	O
static	JJ	O
object	NN	O
GetNewObject(	NNP	B-API
Type	NNP	I-API
t	NN	I-API
)	)	L-API
{	(	O
try	VB	O
{	(	O
return	VB	O
t.GetConstructor(	RP	B-API
new	JJ	I-API
Type	NNP	I-API
[	NNP	I-API
]	NNP	I-API
{	(	I-API
}	)	I-API
)	)	L-API
.	.	O
Invoke(	NNP	B-API
new	JJ	I-API
object	JJ	I-API
[	NNP	I-API
]	NNP	I-API
{	(	I-API
}	)	I-API
)	)	L-API
;	:	O
}	)	O
catch	VB	O
{	(	O
return	VB	O
null	NN	O
;	:	O
}	)	O
}	)	O
Here	RB	O
is	VBZ	O
the	DT	O
same	JJ	O
approach	NN	O
,	,	O
contained	VBN	O
in	IN	O
a	DT	O
generic	JJ	O
method	NN	O
:	:	O
public	JJ	O
static	JJ	O
T	NNP	O
GetNewObject	NNP	O
<T	NNP	O
>	NNP	O
(	(	O
)	)	O
{	(	O
try	VB	O
{	(	O
return	NN	O
(	(	O
T	NNP	O
)typeof	NNP	O
(	(	O
T	NNP	O
)	)	O
.	.	O
GetConstructor(	NNP	B-API
new	JJ	I-API
Type	NNP	I-API
[	NNP	I-API
]	NNP	I-API
{	(	I-API
}	)	I-API
)	)	L-API
.	.	O
Invoke(	NNP	B-API
new	JJ	I-API
object	JJ	I-API
[	NNP	I-API
]	NNP	I-API
{	(	I-API
}	)	I-API
)	)	L-API
;	:	O
}	)	O
catch	VB	O
{	(	O
return	VB	O
default(	JJ	B-API
T	NNP	I-API
)	)	L-API
;	:	O
}	)	O
}	)	O
The	DT	O
Activator	NNP	O
class	NN	O
within	IN	O
the	DT	O
root	NN	O
System	NNP	O
namespace	NN	O
is	VBZ	O
pretty	RB	O
powerful	JJ	O
.	.	O
There	EX	O
are	VBP	O
a	DT	O
lot	NN	O
of	IN	O
overloads	NNS	O
for	IN	O
passing	VBG	O
parameters	NNS	O
to	TO	O
the	DT	O
constructor	NN	O
and	CC	O
such	JJ	O
.	.	O
Check	VB	O
out	IN	O
the	DT	O
documentation	NN	O
at	IN	O
:	:	O
http	NN	O
:	:	O
/	JJ	O
/msdn	NN	O
.	.	O
microsoft	NN	O
.	.	O
com	NN	O
/en	SYM	O
-	:	O
us	PRP	O
/library	JJ	O
/system	NN	O
.	.	O
activator	NN	O
.	.	O
createinstance	NN	O
.	.	O
aspx	NN	O
Here	RB	O
are	VBP	O
some	DT	O
simple	JJ	O
examples	NNS	O
:	:	O
ObjectType	NNP	O
instance	NN	O
=	NNP	O
(	(	O
ObjectType	NNP	O
)Activator	NNP	O
.	.	O
CreateInstance(	NNP	B-API
objectType	NN	I-API
)	)	L-API
;	:	O
ObjectType	NNP	O
instance	NN	O
=	NNP	O
(	(	O
ObjectType	NNP	O
)Activator	NNP	O
.	.	O
CreateInstance(	NNP	B-API
"MyAssembly	RB	I-API
"	NNP	I-API
,	,	I-API
"MyNamespace	NNP	I-API
.	.	I-API
ObjectType	NNP	I-API
"	NNP	I-API
)	)	L-API
;	:	O
Here	RB	O
is	VBZ	O
my	PRP$	O
current	JJ	O
method	NN	O
.	.	O
Any	DT	O
suggestions	NNS	O
?	.	O
Regex	NNP	O
singleMToDoubleRegex	VBD	O
=	NNP	O
new	JJ	O
Regex(	NNP	B-API
"	NNP	I-API
(	(	I-API
?	.	I-API
<	''	I-API
!m	JJ	I-API
)m	NN	I-API
(	(	I-API
?	.	I-API
!m	NN	I-API
)	)	L-API
"	NN	O
)	)	O
;Regex	VBZ	O
singleDToDoubleRegex	JJ	O
=	NNP	O
new	JJ	O
Regex(	NNP	B-API
"	NNP	I-API
(	(	I-API
?	.	I-API
<	''	I-API
!d	JJ	I-API
)d	NN	I-API
(	(	I-API
?	.	I-API
!d	NN	I-API
)	)	L-API
"	NN	O
)	)	O
;CultureInfo	VBZ	O
currentCulture	NN	O
=	NNP	O
CultureInfo	NNP	O
.	.	O
CurrentUICulture	NN	O
;	:	O
/	CC	O
/	VB	O
If	IN	O
the	DT	O
culture	NN	O
is	VBZ	O
netural	JJ	O
there	EX	O
is	VBZ	O
no	DT	O
date	NN	O
pattern	NN	O
to	TO	O
use	VB	O
,	,	O
so	RB	O
use	IN	O
the	DT	O
default	NN	O
.	.	O
if	IN	O
(	(	O
currentCulture	NN	O
.	.	O
IsNeutralCulture	NN	O
)	)	O
{	(	O
currentCulture	NN	O
=	VBZ	O
CultureInfo	NNP	O
.	.	O
InvariantCulture	NN	O
;	:	O
}	)	O
/	FW	O
/	JJ	O
Massage	NNP	O
the	DT	O
format	NN	O
into	IN	O
a	DT	O
more	RBR	O
general	JJ	O
user	NN	O
friendly	JJ	O
form	NN	O
.	.	O
string	VBG	O
shortDatePattern	JJ	O
=	NNP	O
CultureInfo.CurrentUICulture.DateTimeFormat.ShortDatePattern.ToLower()	NNP	U-API
;shortDatePattern	NNP	O
=	NNP	O
singleMToDoubleRegex.Replace(	NN	B-API
shortDatePattern	NN	I-API
,	,	I-API
"mm	NNP	I-API
"	NNP	I-API
)	)	L-API
;shortDatePattern	VBP	O
=	JJ	O
singleDToDoubleRegex.Replace(	NN	B-API
shortDatePattern	NN	I-API
,	,	I-API
"dd	NNP	I-API
"	NNP	I-API
)	)	L-API
;	:	O
You	PRP	O
can	MD	O
print	VB	O
from	IN	O
the	DT	O
command	NN	O
line	NN	O
using	VBG	O
the	DT	O
following	NN	O
:	:	O
rundll32	NN	O
.	.	O
exe	VB	O
%WINDIR	CD	O
%	NN	O
\System32	JJ	O
\mshtml	NNP	O
.	.	O
dll	NN	O
,	,	O
PrintHTML	NNP	O
"	NNP	O
%1	NNP	O
"	NNP	O
Where	NNP	O
%1	NNP	O
is	VBZ	O
the	DT	O
file	JJ	O
path	NN	O
of	IN	O
the	DT	O
html	NN	O
file	NN	O
to	TO	O
be	VB	O
printed	VBN	O
.	.	O
If	IN	O
you	PRP	O
don't	VBP	O
need	VB	O
to	TO	O
print	VB	O
from	IN	O
memory	NN	O
(	(	O
or	CC	O
can	MD	O
afford	VB	O
to	TO	O
write	VB	O
to	TO	O
the	DT	O
disk	NN	O
in	IN	O
a	DT	O
temp	NN	O
file	NN	O
)	)	O
you	PRP	O
can	MD	O
use	VB	O
:	:	O
using	VBG	O
(	(	O
Process	NNP	O
printProcess	RB	O
=	VBD	O
new	JJ	O
Process()	NNP	U-API
)	)	O
{	(	O
string	VBG	O
systemPath	NN	O
=	NNP	O
Environment.GetFolderPath(	NNP	B-API
Environment	NNP	I-API
.	.	I-API
SpecialFolder	NNP	I-API
.	.	I-API
System	NNP	I-API
)	)	L-API
;	:	O
printProcess	NN	O
.	.	O
StartInfo	NNP	O
.	.	O
FileName	NNP	O
=	NNP	O
systemPath	NN	O
+	NNP	O
@	NNP	O
"	NNP	O
\rundll32	NNP	O
.	.	O
exe	NN	O
"	NN	O
;	:	O
printProcess	NN	O
.	.	O
StartInfo	NNP	O
.	.	O
Arguments	NNS	O
=	JJ	O
systemPath	NN	O
+	NNP	O
@	NNP	O
"	NNP	O
\mshtml	NNP	O
.	.	O
dll	NN	O
,	,	O
PrintHTML	NNP	O
"	NNP	O
"	NNP	O
"	NNP	O
+	NNP	O
fileToPrint	NN	O
+	NNP	O
@	NNP	O
"	NNP	O
"	NNP	O
"	NNP	O
"	NNP	O
;	:	O
printProcess.Start()	NN	U-API
;	:	O
}	)	O
N	NNP	O
.	.	O
B	NNP	O
.	.	O
This	DT	O
only	JJ	O
works	VBZ	O
on	IN	O
Windows	NNP	O
2000	CD	O
and	CC	O
above	IN	O
I	PRP	O
think	VBP	O
.	.	O
Here's	VB	O
a	DT	O
Perl	NNP	O
solution	NN	O
http	NN	O
:	:	O
/	NN	O
/daringfireball	NN	O
.	.	O
net	JJ	O
/2008	NN	O
/05	NNP	O
/title_case	NNP	O
Here's	NNP	O
a	DT	O
Ruby	NNP	O
solution	NN	O
http	NN	O
:	:	O
/	JJ	O
/frankschmitt	NN	O
.	.	O
org	JJ	O
/projects	NNS	O
/title	SYM	O
-	:	O
case	NN	O
Here's	NNP	O
a	DT	O
Ruby	NNP	O
one-liner	JJ	O
solution	NN	O
:	:	O
http	NN	O
:	:	O
/	JJ	O
/snippets	NNS	O
.	.	O
dzone	NN	O
.	.	O
com	NN	O
/posts	VBZ	O
/show	VBP	O
/4702	NNP	O
'	POS	O
some	DT	O
string	NN	O
here	RB	O
'	POS	O
.	.	O
gsub(	NN	B-API
/	JJ	I-API
\b	NNP	I-API
\w	NNP	I-API
/	NNP	I-API
)	)	L-API
{	(	O
$	$	O
&	CC	O
.	.	O
upcase	NN	O
}	)	O
What	WP	O
the	DT	O
one-liner	NN	O
is	VBZ	O
doing	VBG	O
is	VBZ	O
using	VBG	O
a	DT	O
regular	JJ	O
expression	NN	O
substitution	NN	O
of	IN	O
the	DT	O
first	JJ	O
character	NN	O
of	IN	O
each	DT	O
word	NN	O
with	IN	O
the	DT	O
uppercase	JJ	O
version	NN	O
of	IN	O
it	PRP	O
.	.	O
I	PRP	O
haven't	VBP	O
been	VBN	O
able	JJ	O
to	TO	O
find	VB	O
an	DT	O
understandable	JJ	O
explanation	NN	O
of	IN	O
how	WRB	O
to	TO	O
actually	RB	O
use	VB	O
Python's	NNP	O
itertools.groupby()	JJ	U-API
function	NN	O
.	.	O
What	WP	O
I'm	NNP	O
trying	VBG	O
to	TO	O
do	VB	O
is	VBZ	O
this	DT	O
:	:	O
Take	VB	O
a	DT	O
list	NN	O
-	:	O
in	IN	O
this	DT	O
case	NN	O
,	,	O
the	DT	O
children	NNS	O
of	IN	O
an	DT	O
objectified	JJ	O
lxml	NN	O
element	NN	O
Divide	NNP	O
it	PRP	O
into	IN	O
groups	NNS	O
based	VBN	O
on	IN	O
some	DT	O
criteria	NNS	O
Then	RB	O
later	RB	O
iterate	VB	O
over	IN	O
each	DT	O
of	IN	O
these	DT	O
groups	NNS	O
separately	RB	O
.	.	O
I've	NNP	O
reviewed	VBD	O
the	DT	O
documentation	NN	O
,	,	O
and	CC	O
the	DT	O
examples	NNS	O
,	,	O
but	CC	O
I've	NNP	O
had	VBD	O
trouble	NN	O
trying	VBG	O
to	TO	O
apply	VB	O
them	PRP	O
beyond	IN	O
a	DT	O
simple	JJ	O
list	NN	O
of	IN	O
numbers	NNS	O
.	.	O
So	RB	O
,	,	O
how	WRB	O
do	VBP	O
I	PRP	O
use	NN	O
of	IN	O
itertools.groupby()	NN	U-API
?	.	O
Is	VBZ	O
there	RB	O
another	DT	O
technique	NN	O
I	PRP	O
should	MD	O
be	VB	O
using	VBG	O
?	.	O
Pointers	NNS	O
to	TO	O
good	JJ	O
"prerequisite	NNP	O
"	NN	O
reading	NN	O
would	MD	O
also	RB	O
be	VB	O
appreciated	VBN	O
.	.	O
I	PRP	O
don't	VBP	O
have	VB	O
any	DT	O
experience	NN	O
with	IN	O
http	NN	O
:	:	O
/	JJ	O
/www	NN	O
.	.	O
SiteGround	NNP	O
.	.	O
com	NN	O
as	IN	O
a	DT	O
web	NN	O
host	NN	O
personally	RB	O
.	.	O
This	DT	O
is	VBZ	O
just	RB	O
a	DT	O
guess	NN	O
,	,	O
but	CC	O
it's	JJ	O
common	JJ	O
for	IN	O
a	DT	O
shared	VBN	O
host	NN	O
to	TO	O
support	VB	O
Python	NNP	O
and	CC	O
MySQL	NNP	O
with	IN	O
the	DT	O
MySQLdb	NNP	O
module	NN	O
(	(	O
e	NN	O
.	.	O
g	NN	O
.	.	O
,	,	O
GoDaddy	NNP	O
does	VBZ	O
this	DT	O
)	)	O
.	.	O
Try	VB	O
the	DT	O
following	JJ	O
CGI	NNP	O
script	NN	O
to	TO	O
see	VB	O
if	IN	O
MySQLdb	NNP	O
is	VBZ	O
installed	VBN	O
.	.	O
#	#	O
!	.	O
/usr	JJ	O
/bin	JJ	O
/pythonmodule_name	NN	O
=	NNP	O
'	POS	O
MySQLdb'head	NNP	O
=	NNP	O
'	POS	O
'	''	O
'	POS	O
Content-Type	JJ	O
:	:	O
text	NN	O
/html	NN	O
%s	NNP	O
is	VBZ	O
'	POS	O
'	''	O
'	POS	O
%	NN	O
module_nametry	NN	O
:	:	O
__import__(	JJ	B-API
module_name	NN	I-API
)	)	L-API
print	NN	O
head	NN	O
+	NNP	O
'	POS	O
installed'except	JJ	O
ImportError	NN	O
:	:	O
print	NN	O
head	NN	O
+	NNP	O
'	''	O
not	RB	O
installed	VBN	O
'	''	O
Can	MD	O
you	PRP	O
show	VB	O
us	PRP	O
your	PRP$	O
code	NN	O
?	.	O
The	DT	O
example	NN	O
on	IN	O
the	DT	O
Python	NNP	O
docs	NN	O
is	VBZ	O
quite	RB	O
straightforward	JJ	O
:	:	O
groups	NNS	O
=	VBP	O
[	JJ	O
]	NNP	O
uniquekeys	NNS	O
=	VBP	O
[	JJ	O
]	NN	O
for	IN	O
k	NN	O
,	,	O
g	NN	O
in	IN	O
groupby(	NN	B-API
data	NNS	I-API
,	,	I-API
keyfunc	NN	I-API
)	)	L-API
:	:	O
groups.append(	NN	B-API
list(	VBZ	I-API
g	NN	I-API
)	)	L-API
)	)	O
#	#	O
Store	NNP	O
group	NN	O
iterator	NN	O
as	IN	O
a	DT	O
list	NN	O
uniquekeys.append(	JJ	B-API
k	NN	I-API
)	)	L-API
So	RB	O
in	IN	O
your	PRP$	O
case	NN	O
,	,	O
data	NN	O
is	VBZ	O
a	DT	O
list	NN	O
of	IN	O
nodes	NNS	O
,	,	O
keyfunc	NN	O
is	VBZ	O
where	WRB	O
the	DT	O
logic	NN	O
of	IN	O
your	PRP$	O
criteria	NNS	U-API
function	NN	O
goes	VBZ	O
and	CC	O
then	RB	O
groupby()	VB	U-API
groups	NNS	O
the	DT	O
data	NNS	O
.	.	O
You	PRP	O
must	MD	O
be	VB	O
careful	JJ	O
to	TO	O
sort	VB	O
the	DT	O
data	NN	O
by	IN	O
the	DT	O
criteria	NNS	O
before	IN	O
you	PRP	O
call	VBP	O
groupby	NNS	O
or	CC	O
it	PRP	O
won't	JJ	O
work	NN	O
.	.	O
groupby	VB	O
method	JJ	O
actually	RB	O
just	RB	O
iterates	VBZ	O
through	IN	O
a	DT	O
list	NN	O
and	CC	O
whenever	VB	O
the	DT	O
key	NN	O
changes	VBZ	O
it	PRP	O
creates	VBZ	O
a	DT	O
new	JJ	O
group	NN	O
.	.	O
Absolutely	RB	O
,	,	O
especially	RB	O
dealing	VBG	O
with	IN	O
lots	NNS	O
of	IN	O
these	DT	O
permutations	NNS	O
/combinations	NNS	O
I	PRP	O
can	MD	O
definitely	RB	O
see	VB	O
that	IN	O
the	DT	O
first	JJ	O
pass	NN	O
would	MD	O
be	VB	O
an	DT	O
issue	NN	O
.	.	O
Interesting	VBG	O
implementation	NN	O
in	IN	O
python	NN	O
,	,	O
though	IN	O
I	PRP	O
wrote	VBD	O
a	DT	O
nice	JJ	O
one	CD	O
in	IN	O
C	NNP	O
and	CC	O
Ocaml	NNP	O
based	VBN	O
on	IN	O
"Algorithm	JJ	O
515	CD	O
"	NN	O
(	(	O
see	VB	O
below	IN	O
)	)	O
.	.	O
He	PRP	O
wrote	VBD	O
his	PRP$	O
in	IN	O
Fortran	NNP	O
as	IN	O
it	PRP	O
was	VBD	O
common	JJ	O
back	RB	O
then	RB	O
for	IN	O
all	PDT	O
the	DT	O
"Algorithm	NNP	O
XX	NNP	O
"	NNP	O
papers	NNS	O
,	,	O
well	RB	O
,	,	O
that	DT	O
assembly	NN	O
or	CC	O
c	NN	O
.	.	O
I	PRP	O
had	VBD	O
to	TO	O
re-write	VB	O
it	PRP	O
and	CC	O
make	VB	O
some	DT	O
small	JJ	O
improvements	NNS	O
to	TO	O
work	VB	O
with	IN	O
arrays	NNS	O
not	RB	O
ranges	NNS	O
of	IN	O
numbers	NNS	O
.	.	O
This	DT	O
one	NN	O
does	VBZ	O
random	VB	O
access	NN	O
,	,	O
I'm	NNP	O
still	RB	O
working	VBG	O
on	IN	O
getting	VBG	O
some	DT	O
nice	JJ	O
implementations	NNS	O
of	IN	O
the	DT	O
ones	NNS	O
mentioned	VBN	O
in	IN	O
Knuth	NNP	O
4th	CD	O
volume	NN	O
fascicle	NN	O
2	CD	O
.	.	O
I'll	NNP	O
an	DT	O
explanation	NN	O
of	IN	O
how	WRB	O
this	DT	O
works	VBZ	O
to	TO	O
the	DT	O
reader	NN	O
.	.	O
Though	IN	O
if	IN	O
someone	NN	O
is	VBZ	O
curious	JJ	O
,	,	O
I	PRP	O
wouldn't	VBP	O
object	JJ	O
to	TO	O
writing	VBG	O
something	NN	O
up	RB	O
.	.	O
/	VB	O
*	JJ	O
*	NNP	O
[combination	NNP	O
c	VBZ	O
n	JJ	O
p	NN	O
x	NNP	O
]	NNP	O
*	NNP	O
get	VB	O
the	DT	O
[x	NNP	O
]th	NNP	O
lexicographically	RB	O
ordered	VBD	O
set	NN	O
of	IN	O
[p	NNP	O
]	NNP	O
elements	NNS	O
in	IN	O
[n	NNP	O
]	NNP	O
*	NNP	O
output	NN	O
is	VBZ	O
in	IN	O
[c	NNP	O
]	NNP	O
,	,	O
and	CC	O
should	MD	O
be	VB	O
sizeof(	JJ	B-API
int	NN	I-API
)	)	L-API
*	VBZ	O
[p	JJ	O
]	NNP	O
*	NNP	O
/void	NNP	O
combination(	NN	B-API
int	NN	I-API
*	NNP	I-API
c	NN	I-API
,	,	I-API
int	NN	I-API
n	NN	I-API
,	,	I-API
int	NN	I-API
p	NN	I-API
,	,	I-API
int	NN	I-API
x	NN	I-API
)	)	L-API
{	(	O
int	NN	O
i	NN	O
,	,	O
r	NN	O
,	,	O
k	VB	O
=	NNP	O
0	CD	O
;	:	O
for(	NN	B-API
i	NN	I-API
=0	VBP	I-API
;i	NN	I-API
<p	NNP	I-API
-	:	I-API
1	CD	I-API
;i	JJ	I-API
+	NNP	I-API
+	NNP	I-API
)	)	L-API
{	(	O
c	JJ	O
[i	NNP	O
]	NNP	O
=	NNP	O
(	(	O
i	NN	O
!	.	O
=	$	O
0	CD	O
)	)	O
?	.	O
c	JJ	O
[i	NNP	O
-	:	O
1	CD	O
]	NN	O
:	:	O
0	CD	O
;	:	O
do	VB	O
{	(	O
c	VB	O
[i	NNP	O
]	NNP	O
+	NNP	O
+	NNP	O
;	:	O
r	NN	O
=	VBZ	O
choose(	JJ	B-API
n-c	JJ	I-API
[i	NN	I-API
]	NN	I-API
,	,	I-API
p	JJ	I-API
-(	NN	I-API
i	NN	I-API
+1	NNP	I-API
)	)	L-API
)	)	O
;	:	O
k	CC	O
=	NNP	O
k	NNP	O
+	NNP	O
r	NN	O
;	:	O
}	)	O
while(	VBP	B-API
k	JJ	I-API
<	NNP	I-API
x	NNP	I-API
)	)	L-API
;	:	O
k	CC	O
=	NNP	O
k	NNP	O
-	:	O
r	NN	O
;	:	O
}	)	O
c	VBP	O
[p	JJ	O
-	:	O
1	CD	O
]	JJ	O
=	NNP	O
c	NN	O
[p	NNP	O
-	:	O
2	CD	O
]	JJ	O
+	NNP	O
x	NNP	O
-	:	O
k	NN	O
;	:	O
}	)	O
~	VBP	O
"Algorithm	JJ	O
515	CD	O
:	:	O
Generation	NN	O
of	IN	O
a	DT	O
Vector	NN	O
from	IN	O
the	DT	O
Lexicographical	NNP	O
Index	NNP	O
"	NNP	O
;	:	O
Buckles	NNP	O
,	,	O
B	NNP	O
.	.	O
P	NNP	O
.	.	O
,	,	O
and	CC	O
Lybanon	NNP	O
,	,	O
M	NNP	O
.	.	O
ACM	NNP	O
Transactions	NNPS	O
on	IN	O
Mathematical	NNP	O
Software	NNP	O
,	,	O
Vol	NNP	O
.	.	O
3	CD	O
,	,	O
No	NNP	O
.	.	O
2	CD	O
,	,	O
June	NNP	O
1977	CD	O
.	.	O
I	PRP	O
uploaded	VBD	O
it	PRP	O
and	CC	O
got	VBD	O
an	DT	O
internal	JJ	O
error	NN	O
Premature	NNP	O
end	NN	O
of	IN	O
script	NN	O
headers	NNS	O
After	IN	O
much	JJ	O
playing	NN	O
around	IN	O
,	,	O
I	PRP	O
found	VBD	O
that	IN	O
if	IN	O
I	PRP	O
had	VBD	O
import	NN	O
cgiimport	NN	O
cgitb	NN	O
;	:	O
cgitb.enable()	CC	U-API
import	NN	O
MySQLdb	NNP	O
It	PRP	O
would	MD	O
give	VB	O
me	PRP	O
a	DT	O
much	RB	O
more	RBR	O
useful	JJ	O
answer	NN	O
and	CC	O
say	VBP	O
that	IN	O
it	PRP	O
was	VBD	O
not	RB	O
installed	VBN	O
,	,	O
you	PRP	O
can	MD	O
see	VB	O
it	PRP	O
yourself	PRP	O
-	:	O
>	NN	O
http	NN	O
:	:	O
/	JJ	O
/woarl	NNP	O
.	.	O
com	NN	O
/db	NN	O
.	.	O
py	NN	O
Oddly	RB	O
enough	RB	O
,	,	O
this	DT	O
would	MD	O
produce	VB	O
an	DT	O
error	NN	O
import	NN	O
MySQLdbimport	NNP	O
cgiimport	NN	O
cgitb	NN	O
;	:	O
cgitb.enable()	NN	U-API
I	PRP	O
looked	VBD	O
at	IN	O
some	DT	O
of	IN	O
the	DT	O
other	JJ	O
files	NNS	O
I	PRP	O
had	VBD	O
up	RP	O
there	RB	O
and	CC	O
it	PRP	O
seems	VBZ	O
that	IN	O
library	NN	O
was	VBD	O
one	CD	O
of	IN	O
the	DT	O
ones	NNS	O
I	PRP	O
had	VBD	O
already	RB	O
tried	VBN	O
.	.	O
The	DT	O
magic	NN	O
all	DT	O
seems	VBZ	O
to	TO	O
be	VB	O
in	IN	O
visitortime.getTimezoneOffset()	JJ	U-API
That's	NNP	O
cool	NN	O
,	,	O
I	PRP	O
didn't	VBP	O
know	VB	O
about	IN	O
that	DT	O
.	.	O
Does	VBZ	O
it	PRP	O
work	VB	O
in	IN	O
IE	NNP	O
,	,	O
etc	FW	O
?	.	O
From	IN	O
there	EX	O
you	PRP	O
should	MD	O
be	VB	O
able	JJ	O
to	TO	O
use	VB	O
JS	NNP	O
to	TO	O
ajax	VB	O
,	,	O
set	VB	O
cookies	NNS	O
,	,	O
whatever	WDT	O
.	.	O
I'd	NNP	O
probably	RB	O
go	VBP	O
the	DT	O
cookie	NN	O
route	NN	O
myself	PRP	O
.	.	O
You'll	CC	O
need	MD	O
to	TO	O
allow	VB	O
the	DT	O
user	NN	O
to	TO	O
change	VB	O
it	PRP	O
though	IN	O
.	.	O
We	PRP	O
tried	VBD	O
to	TO	O
use	VB	O
geolocation	NN	O
(	(	O
via	IN	O
maxmind	NN	O
)	)	O
to	TO	O
do	VB	O
this	DT	O
a	DT	O
while	NN	O
ago	RB	O
,	,	O
and	CC	O
it	PRP	O
was	VBD	O
wrong	JJ	O
reasonably	RB	O
often	RB	O
-	:	O
enough	JJ	O
to	TO	O
make	VB	O
it	PRP	O
not	RB	O
worth	IN	O
doing	VBG	O
,	,	O
so	IN	O
we	PRP	O
just	RB	O
let	VB	O
the	DT	O
user	NN	O
set	VBD	O
it	PRP	O
in	IN	O
their	PRP$	O
profile	NN	O
,	,	O
and	CC	O
show	VB	O
a	DT	O
notice	NN	O
to	TO	O
users	NNS	O
who	WP	O
haven't	VBP	O
set	VBN	O
theirs	JJ	O
yet	RB	O
.	.	O
SQL	NN	O
:	:	O
SELECT	NNP	O
u	NN	O
.	.	O
id	NN	O
,	,	O
u	JJ	O
.	.	O
name	NN	O
,	,	O
isnull(	JJ	B-API
MAX(	NNP	I-API
h	NN	I-API
.	.	I-API
dateCol	NN	I-API
)	)	L-API
,	,	O
'	''	O
1900-01-01	JJ	O
'	POS	O
)	)	O
dateColWithDefault	NN	O
FROM	NNP	O
universe	NN	O
u	NN	O
LEFT	NNP	O
JOIN	NNP	O
history	NN	O
h	NN	O
ON	NNP	O
u	NN	O
.	.	O
id	JJ	O
=h	NN	O
.	.	O
id	NN	O
AND	CC	O
h	NN	O
.	.	O
dateCol	NN	O
<GETDATE	NN	O
(	(	O
)	)	O
-	:	O
1	CD	O
GROUP	NNP	O
BY	NNP	O
u	NN	O
.	.	O
Id	NNP	O
,	,	O
u	NN	O
.	.	O
name	NN	O
A	DT	O
solution	NN	O
,	,	O
albeit	IN	O
one	CD	O
that	WDT	O
defers	VBZ	O
handling	NN	O
of	IN	O
the	DT	O
null	JJ	O
value	NN	O
to	TO	O
the	DT	O
code	NN	O
,	,	O
could	MD	O
be	VB	O
:	:	O
DateTime	NNP	O
yesterday	NN	O
=	NNP	O
DateTime.Now.Date.AddDays(	NNP	B-API
-	:	I-API
1	CD	I-API
)	)	L-API
;	:	O
var	CC	O
collection	NN	O
=	NN	O
from	IN	O
u	JJ	O
in	IN	O
db	NN	O
.	.	O
Universe	NNP	O
select	JJ	O
new	JJ	O
{	(	O
u	JJ	O
.	.	O
id	NN	O
,	,	O
u	JJ	O
.	.	O
name	NN	O
,	,	O
MaxDate	NNP	O
=	NNP	O
(	(	O
DateTime	NNP	O
?	.	O
)	)	O
(	(	O
from	IN	O
h	NN	O
in	IN	O
db	NN	O
.	.	O
History	NNP	O
where	WRB	O
u	NN	O
.	.	O
Id	NNP	O
=	NNP	O
=	NNP	O
h	NN	O
.	.	O
Id	NNP	O
&	CC	O
&	CC	O
h	NN	O
.	.	O
dateCol	NN	O
<	NN	O
yesterday	NN	O
select	VBP	O
h	NN	O
.	.	O
dateCol	NN	O
)	)	O
.	.	O
Max()	NNP	U-API
}	)	O
;	:	O
This	DT	O
does	VBZ	O
not	RB	O
produce	VB	O
exactly	RB	O
the	DT	O
same	JJ	O
SQL	NNP	O
,	,	O
but	CC	O
does	VBZ	O
provide	VB	O
the	DT	O
same	JJ	O
logical	JJ	O
result	NN	O
.	.	O
Translating	VBG	O
"complex	JJ	O
"	NNP	O
SQL	NNP	O
queries	NNS	O
to	TO	O
LINQ	NNP	O
is	VBZ	O
not	RB	O
always	RB	O
straightforward	RB	O
.	.	O
PHP	NNP	O
variables	NNS	O
are	VBP	O
assigned	VBN	O
by	IN	O
value	NN	O
,	,	O
passed	VBN	O
to	TO	O
functions	NNS	O
by	IN	O
value	NN	O
,	,	O
and	CC	O
when	WRB	O
containing	VBG	O
/representing	VBG	O
objects	NNS	O
are	VBP	O
passed	VBN	O
by	IN	O
reference	NN	O
.	.	O
You	PRP	O
can	MD	O
force	VB	O
variables	NNS	O
to	TO	O
pass	VB	O
by	IN	O
reference	NN	O
using	VBG	O
an	DT	O
&	CC	O
Assigned	VBN	O
by	IN	O
value	NN	O
/reference	NN	O
example	NN	O
:	:	O
$var1	NN	O
=	NN	O
"test	NNP	O
"	NN	O
;	:	O
$var2	CC	O
=	NNP	O
$var1	NNP	O
;	:	O
$var2	NNP	O
=	NNP	O
"new	NNP	O
test	NN	O
"	NN	O
;	:	O
$var3	NNP	O
=	NNP	O
&	CC	O
$var2	NNP	O
;	:	O
$var3	NNP	O
=	NNP	O
"final	JJ	O
test	NN	O
"	NN	O
;	:	O
print	NN	O
(	(	O
"var1	JJ	O
:	:	O
$var1	NN	O
,	,	O
var2	NN	O
:	:	O
$var2	NN	O
,	,	O
var3	NN	O
:	:	O
$var3	NN	O
)	)	O
;	:	O
would	MD	O
output	NN	O
"var1	VB	O
:	:	O
test	NN	O
,	,	O
var2	NN	O
:	:	O
final	JJ	O
test	NN	O
,	,	O
var3	NN	O
:	:	O
final	JJ	O
test	NN	O
"	NN	O
.	.	O
Passed	VBN	O
by	IN	O
value	NN	O
/reference	NN	O
exampe	NN	O
:	:	O
$var1	JJ	O
=	NNP	O
"foo	NNP	O
"	NNP	O
;	:	O
$var2	NNP	O
=	NNP	O
"bar	NNP	O
"	NNP	O
;	:	O
changeThem(	NN	B-API
$var1	NN	I-API
,	,	I-API
$var2	NNP	I-API
)	)	L-API
;	:	O
print	NN	O
"var1	NN	O
:	:	O
$var1	NN	O
,	,	O
var2	NN	O
:	:	O
$var2	JJ	O
"	NN	O
;	:	U-API
function	NN	O
changeThem(	NN	B-API
$var1	NNP	I-API
,	,	I-API
&	CC	I-API
$var2	NNP	I-API
)	)	L-API
{	(	O
$var1	JJ	O
=	NNP	O
"FOO	NNP	O
"	NNP	O
;	:	O
$var2	NNP	O
=	NNP	O
"BAR	NNP	O
"	NNP	O
;	:	O
}	)	O
would	MD	O
output	NN	O
:	:	O
"var1	NN	O
:	:	O
foo	NN	O
,	,	O
var2	JJ	O
BAR	NNP	O
"	NNP	O
.	.	O
Object	NNP	O
variables	NNS	O
passed	VBN	O
by	IN	O
reference	NN	O
exampe	NN	O
:	:	O
class	NN	O
Foo	NNP	O
{	(	O
public	JJ	O
$var1	NNPS	O
;	:	U-API
function	NN	O
__construct()	FW	U-API
{	(	O
$this	SYM	O
-	:	O
>var1	NN	O
=	JJ	O
"foo	NNP	O
"	NNP	O
;	:	O
}	)	O
public	JJ	U-API
function	NN	O
printFoo()	NN	U-API
{	(	O
print	NN	O
$this	SYM	O
-	:	O
>var1	NN	O
;	:	O
}	)	O
}	)	O
$foo	NNP	O
=	NNP	O
new	JJ	O
Foo()	NNP	U-API
;	:	O
changeFoo(	VB	B-API
$foo	NNP	I-API
)	)	L-API
;	:	O
$foo	SYM	O
-	:	O
>printFoo	NN	O
(	(	O
)	)	O
;	:	U-API
function	NN	O
changeFoo(	NN	B-API
$foo	NNP	I-API
)	)	L-API
{	(	O
$foo	SYM	O
-	:	O
>var1	NN	O
=	JJ	O
"FOO	NNP	O
"	NNP	O
;	:	O
}	)	O
Would	MD	O
output	NN	O
:	:	O
"FOO	JJ	O
"	NN	O
(	(	O
that	IN	O
last	JJ	O
example	NN	O
could	MD	O
be	VB	O
better	JJR	O
probably	RB	O
...	:	O
)	)	O
Rather	JJR	O
than	IN	O
coding	VBG	O
this	DT	O
out	IN	O
,	,	O
I	PRP	O
figure	VBP	O
I'll	JJ	O
pseudo-code	NN	O
it	PRP	O
in	IN	O
steps	NNS	O
and	CC	O
explain	VB	O
my	PRP$	O
logic	NN	O
,	,	O
so	IN	O
that	DT	O
better	JJR	O
programmers	NNS	O
can	MD	O
poke	VB	O
holes	NNS	O
in	IN	O
my	PRP$	O
logic	NN	O
if	IN	O
necessary	JJ	O
.	.	O
On	IN	O
the	DT	O
first	JJ	O
step	NN	O
we	PRP	O
start	VBP	O
out	RP	O
with	IN	O
a	DT	O
list	NN	O
of	IN	O
numbers	NNS	O
length	VBP	O
n	RB	O
.	.	O
For	IN	O
each	DT	O
number	NN	O
we	PRP	O
need	VBP	O
to	TO	O
create	VB	O
a	DT	O
list	NN	O
of	IN	O
length	JJ	O
n-1	JJ	O
becuase	NN	O
we	PRP	O
aren't	VBP	O
adding	VBG	O
a	DT	O
number	NN	O
to	TO	O
itself	PRP	O
.	.	O
By	IN	O
the	DT	O
end	NN	O
we	PRP	O
have	VBP	O
a	DT	O
list	NN	O
of	IN	O
about	IN	O
n	NN	O
sorted	VBD	O
lists	NNS	O
that	WDT	O
was	VBD	O
generated	VBN	O
in	IN	O
O(	NNP	B-API
n	FW	I-API
^2	NNP	I-API
)	)	L-API
time	NN	O
.	.	O
step	VB	O
1	CD	O
(	(	O
startinglist	NN	O
)	)	O
for	IN	O
each	DT	O
number	NN	O
num1	NN	O
in	IN	O
startinglist	NN	O
for	IN	O
each	DT	O
number	NN	O
num2	NN	O
in	IN	O
startinglist	JJ	O
add	NN	O
num1	JJ	O
plus	CC	O
num2	JJ	O
into	IN	O
templist	JJ	O
add	JJ	O
templist	NN	O
to	TO	O
sumlist	VB	O
return	JJ	O
sumlist	NN	O
In	IN	O
step	NN	O
2	CD	O
because	IN	O
the	DT	O
lists	NNS	O
were	VBD	O
sorted	VBN	O
by	IN	O
design	NN	O
(	(	O
add	VB	O
a	DT	O
number	NN	O
to	TO	O
each	DT	O
element	NN	O
in	IN	O
a	DT	O
sorted	JJ	O
list	NN	O
and	CC	O
the	DT	O
list	NN	O
will	MD	O
still	RB	O
be	VB	O
sorted	VBN	O
)	)	O
we	PRP	O
can	MD	O
simply	RB	O
do	VB	O
a	DT	O
mergesort	NN	O
by	IN	O
merging	VBG	O
each	DT	O
list	NN	O
together	RB	O
rather	RB	O
than	IN	O
mergesorting	VBG	O
the	DT	O
whole	JJ	O
lot	NN	O
.	.	O
In	IN	O
the	DT	O
end	NN	O
this	DT	O
should	MD	O
take	VB	O
O(	NNP	B-API
n	NNP	I-API
^2	NNP	I-API
)	)	L-API
time	NN	O
.	.	O
step	VB	O
2	CD	O
(	(	O
sumlist	NN	O
)	)	O
create	VBP	O
an	DT	O
empty	JJ	O
list	NN	O
mergedlist	NN	O
for	IN	O
each	DT	O
list	NN	O
templist	NN	O
in	IN	O
sumlist	NN	O
set	VBN	O
mergelist	JJ	O
equal	JJ	O
to	TO	O
:	:	O
merge(	NN	B-API
mergedlist	NN	I-API
,	,	I-API
templist	NN	I-API
)	)	L-API
return	NN	O
mergedlist	VBP	O
The	DT	O
merge	NN	O
method	NN	O
would	MD	O
be	VB	O
then	RB	O
the	DT	O
normal	JJ	O
merge	JJ	O
step	NN	O
with	IN	O
a	DT	O
check	NN	O
to	TO	O
make	VB	O
sure	JJ	O
that	IN	O
there	EX	O
are	VBP	O
no	DT	O
duplicate	NN	O
sums	NNS	O
.	.	O
I	PRP	O
won't	VBP	O
write	VB	O
this	DT	O
out	RP	O
because	IN	O
anyone	NN	O
can	MD	O
look	VB	O
up	RP	O
mergesort	NN	O
.	.	O
So	RB	O
there's	JJ	O
my	PRP$	O
solution	NN	O
.	.	O
The	DT	O
entire	JJ	O
algorithm	NN	O
is	VBZ	O
O(	NNP	B-API
n	RB	I-API
^2	NNP	I-API
)	)	L-API
time	NN	O
.	.	O
Feel	NNP	O
free	JJ	O
to	TO	O
point	VB	O
out	RP	O
any	DT	O
mistakes	NNS	O
or	CC	O
improvements	NNS	O
.	.	O
It's	NNP	O
by	IN	O
value	NN	O
according	VBG	O
to	TO	O
the	DT	O
PHP	NNP	O
Documentation	NNP	O
.	.	O
By	IN	O
default	NN	O
,	,	U-API
function	NN	O
arguments	NNS	O
are	VBP	O
passed	VBN	O
by	IN	O
value	NN	O
(	(	O
so	IN	O
that	IN	O
if	IN	O
the	DT	O
value	NN	O
of	IN	O
the	DT	O
argument	NN	O
within	IN	O
the	DT	U-API
function	NN	O
is	VBZ	O
changed	VBN	O
,	,	O
it	PRP	O
does	VBZ	O
not	RB	O
get	VB	O
changed	VBN	O
outside	IN	O
of	IN	O
the	DT	U-API
function	NN	O
)	)	O
.	.	O
To	TO	O
allow	VB	O
a	DT	U-API
function	NN	O
to	TO	O
modify	VB	O
its	PRP$	O
arguments	NNS	O
,	,	O
they	PRP	O
must	MD	O
be	VB	O
passed	VBN	O
by	IN	O
reference	NN	O
.	.	O
To	TO	O
have	VB	O
an	DT	O
argument	NN	O
to	TO	O
a	DT	U-API
function	NN	O
always	RB	O
passed	VBN	O
by	IN	O
reference	NN	O
,	,	O
prepend	VBP	O
an	DT	O
ampersand	NN	O
(	(	O
&	CC	O
)	)	O
to	TO	O
the	DT	O
argument	NN	O
name	NN	O
in	IN	O
the	DT	U-API
function	NN	O
definition	NN	O
.	.	O
<	CC	O
?php	JJ	U-API
function	NN	O
add_some_extra(	NN	B-API
&	CC	I-API
$string	VBG	I-API
)	)	L-API
{	(	O
$string	VBG	O
.	.	O
=	NN	O
'	''	O
and	CC	O
something	NN	O
extra	JJ	O
.	.	O
'	''	O
;	:	O
}	)	O
$str	FW	O
=	NNP	O
'	POS	O
This	DT	O
is	VBZ	O
a	DT	O
string	NN	O
,	,	O
'	''	O
;	:	O
add_some_extra(	IN	B-API
$str	NNP	I-API
)	)	L-API
;	:	O
echo	JJ	O
$str	NN	O
;	:	O
/	CC	O
/	VB	O
outputs	NNS	O
'	POS	O
This	DT	O
is	VBZ	O
a	DT	O
string	NN	O
,	,	O
and	CC	O
something	NN	O
extra	JJ	O
.	.	O
'	''	O
?	.	O
>	JJ	O
Try	NNP	O
Eclipse	NNP	O
PDT	NNP	O
to	TO	O
setup	VB	O
an	DT	O
Eclipse	NNP	O
environment	NN	O
that	WDT	O
has	VBZ	O
debugging	VBG	O
features	NNS	O
like	IN	O
you	PRP	O
mentioned	VBD	O
.	.	O
The	DT	O
ability	NN	O
to	TO	O
step	VB	O
into	IN	O
the	DT	O
code	NN	O
is	VBZ	O
a	DT	O
much	RB	O
better	JJR	O
way	NN	O
to	TO	O
debug	VB	O
then	RB	O
the	DT	O
old	JJ	O
method	NN	O
of	IN	O
var_dump	NN	O
and	CC	O
print	NN	O
at	IN	O
various	JJ	O
points	NNS	O
to	TO	O
see	VB	O
where	WRB	O
your	PRP$	O
flow	NN	O
goes	VBZ	O
wrong	JJ	O
.	.	O
When	WRB	O
all	DT	O
else	RB	O
fails	VBZ	O
though	IN	O
and	CC	O
all	DT	O
I	PRP	O
have	VBP	O
is	VBZ	O
SSH	NNP	O
and	CC	O
vim	NN	O
I	PRP	O
still	RB	O
var_dump()	VBP	U-API
/die	NNP	O
(	(	O
)	)	O
to	TO	O
find	VB	O
where	WRB	O
the	DT	O
code	NN	O
goes	VBZ	O
south	RB	O
.	.	O
