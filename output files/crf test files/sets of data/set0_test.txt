Well	RB
,	,
here's	VB
how	WRB
we	PRP
do	VBP
it	PRP
on	IN
Stack	NNP
Overflow	NNP
.	.
		
var	NN
ts	NN
=	NNP
new	JJ
TimeSpan(	NNP
DateTime	NNP
.	.
UtcNow	NNP
.	.
Ticks	NNP
-	:
		
dt	NN
.	.
Ticks	NNP
)	)
;	:
double	JJ
delta	NN
=	NNP
Math.Abs(	NNP
ts	NN
.	.
		
TotalSeconds	NNP
)	)
;	:
if	IN
(	(
delta	JJ
<	VBP
60	CD
)	)
{	(
return	NN
		
ts	NN
.	.
Seconds	VBZ
=	JJ
=	$
1	CD
?	.
"one	CD
second	JJ
ago	RB
"	NN
		
:	:
ts	NN
.	.
Seconds	VBZ
+	JJ
"	NNP
seconds	NNS
ago	RB
"	VBP
;	:
}	)
		
if	IN
(	(
delta	JJ
<	VBP
120	CD
)	)
{	(
return	NN
"a	NNP
minute	NN
ago	RB
		
"	NNP
;	:
}	)
if	IN
(	(
delta	NN
<	IN
2700	CD
)	)
/	VBD
/	$
		
45	CD
*	NNP
60	CD
{	(
return	NN
ts	NN
.	.
Minutes	NNP
+	NNP
"	NNP
minutes	NNS
		
ago	RB
"	VBP
;	:
}	)
if	IN
(	(
delta	NN
<	IN
5400	CD
)	)
/	VBD
		
/	$
90	CD
*	NNP
60	CD
{	(
return	NN
"an	FW
hour	NN
ago	IN
"	NN
;	:
		
}	)
if	IN
(	(
delta	JJ
<	VBP
86400	CD
)	)
/	NN
/	$
24	CD
*	$
		
60	CD
*	NNP
60	CD
{	(
return	NN
ts	NN
.	.
Hours	NNP
+	NNP
"	NNP
hours	NNS
		
ago	RB
"	VBP
;	:
}	)
if	IN
(	(
delta	JJ
<	VBP
172800	CD
)	)
/	NN
		
/	$
48	CD
*	$
60	CD
*	NNP
60	CD
{	(
return	NN
"yesterday	NNP
"	NNP
;	:
		
}	)
if	IN
(	(
delta	JJ
<	VBP
2592000	CD
)	)
/	NN
/	$
30	CD
*	$
		
24	CD
*	$
60	CD
*	NNP
60	CD
{	(
return	NN
ts	NN
.	.
Days	VBZ
+	JJ
		
"	NNP
days	NNS
ago	RB
"	VBP
;	:
}	)
if	IN
(	(
delta	JJ
<	VBP
31104000	CD
		
)	)
/	NN
/	$
12	CD
*	$
30	CD
*	$
24	CD
*	$
60	CD
*	NNP
		
60	CD
{	(
int	JJ
months	NNS
=	IN
Convert.ToInt32(	NNP
Math.Floor(	NNP
(	(
double	JJ
)ts	NN
.	.
		
Days	VBZ
/	RB
30	CD
)	)
)	)
;	:
return	VB
months	NNS
<	NNP
=	VBD
1	CD
		
?	.
"one	CD
month	NN
ago	RB
"	VBZ
:	:
months	NNS
+	IN
"	JJ
months	NNS
ago	IN
		
"	NN
;	:
}	)
int	NN
years	NNS
=	VBP
Convert.ToInt32(	NNP
Math.Floor(	NNP
(	(
double	JJ
)ts	NN
		
.	.
Days	VBZ
/	RB
365	CD
)	)
)	)
;	:
return	VB
years	NNS
<	NNP
=	VBD
		
1	CD
?	.
"one	CD
year	NN
ago	RB
"	IN
:	:
years	NNS
+	VBP
"	CD
years	NNS
		
ago	RB
"	VBD
;	:
Suggestions	NNP
?	.
Comments	NNS
?	.
Ways	NNS
to	TO
improve	VB
this	DT
		
algorithm	NN
?	.
What	WP
is	VBZ
the	DT
difference	NN
between	IN
Math.Floor()	NNP
and	CC
Math.Truncate()	NNP
in	IN
		
.	.
NET	NN
?	.
How	WRB
do	VBP
you	PRP
expose	VB
a	DT
LINQ	NNP
query	NN
as	IN
		
an	DT
ASMX	NNP
web	NN
service	NN
?	.
Usually	RB
,	,
from	IN
the	DT
business	NN
tier	NN
		
,	,
I	PRP
can	MD
return	VB
a	DT
typed	JJ
DataSet	NNP
or	CC
DataTable	NNP
which	WDT
can	MD
		
be	VB
serialized	VBN
for	IN
transport	NN
over	IN
ASMX	NNP
.	.
How	WRB
can	MD
I	PRP
do	VBP
		
the	DT
same	JJ
for	IN
a	DT
LINQ	NNP
query	NN
?	.
Is	VBZ
there	EX
a	DT
way	NN
		
to	TO
populate	VB
a	DT
typed	JJ
DataSet	NNP
or	CC
DataTable	NNP
via	IN
a	DT
LINQ	NNP
query	NN
		
?	.
:	:
public	JJ
static	JJ
MyDataTable	NNP
CallMySproc()	NNP
{	(
string	VBG
conn	NN
=	NN
...	:
		
;	:
MyDatabaseDataContext	NNP
db	VBZ
=	NNP
new	JJ
MyDatabaseDataContext(	NNP
conn	NN
)	)
;	:
MyDataTable	JJ
dt	NN
		
=	NNP
new	JJ
MyDataTable()	NNP
;	:
/	NNP
/	NNP
execute	VB
a	DT
sproc	NN
via	IN
LINQ	NNP
		
var	FW
query	NN
=	NN
from	IN
dr	NN
in	IN
db.MySproc()	NN
.	.
AsEnumerable	JJ
select	JJ
dr	NN
		
;	:
/	CC
/	VB
copy	NN
LINQ	NNP
query	NN
resultset	NN
into	IN
a	DT
DataTable	JJ
-	:
		
this	DT
does	VBZ
not	RB
work	VB
!	.
dt	JJ
=	NNP
query.CopyToDataTable()	NN
;	:
return	VB
dt	NN
		
;	:
}	)
How	WRB
can	MD
I	PRP
get	VB
the	DT
resultset	NN
of	IN
a	DT
LINQ	NNP
		
query	NN
into	IN
a	DT
DataSet	NNP
or	CC
DataTable	NNP
?	.
Alternatively	RB
,	,
is	VBZ
the	DT
		
LINQ	NNP
query	NN
serializeable	NN
so	IN
that	IN
I	PRP
can	MD
expose	VB
it	PRP
as	IN
an	DT
		
ASMX	NNP
web	NN
service	NN
?	.
For	IN
a	DT
table	NN
like	IN
this	DT
:	:
CREATE	NN
		
TABLE	NNP
binary_data	NN
(	(
id	JJ
INT(	NNP
4	CD
)	)
NOT	NNP
NULL	NNP
AUTO_INCREMENT	NNP
PRIMARY	NNP
		
KEY	NNP
,	,
description	NN
CHAR(	NNP
50	CD
)	)
,	,
bin_data	JJ
LONGBLOB	NNP
,	,
filename	NN
		
CHAR(	NNP
50	CD
)	)
,	,
filesize	VB
CHAR(	NNP
50	CD
)	)
,	,
filetype	JJ
CHAR(	NNP
		
50	CD
)	)
)	)
;	:
Here	RB
is	VBZ
a	DT
PHP	JJ
example	NN
:	:
<	NN
		
?php	NNP
/	NNP
/	NNP
store	NN
.	.
php3	CC
-	:
by	IN
Florian	JJ
Dittmer	NNP
<dittmer	NNP
		
@gmx	NNP
.	.
net	JJ
>	NN
/	NNP
/	NNP
Example	NNP
php	VBP
script	NN
to	TO
demonstrate	VB
		
the	DT
storing	NN
of	IN
binary	JJ
files	NNS
into	IN
/	NNP
/	NNP
an	DT
sql	JJ
database	NN
		
.	.
More	JJR
information	NN
can	MD
be	VB
found	VBN
at	IN
http	NN
:	:
/	JJ
/www	NN
		
.	.
phpbuilder	NN
.	.
com	NN
/	NN
?	.
>	JJ
<html	NN
>	NNP
<head	NNP
>	NNP
		
<title	NNP
>Store	VBD
binary	JJ
data	NNS
into	IN
SQL	NNP
Database	NNP
<	NNP
/title	NNP
>	NNP
<	NNP
		
/head	NNP
>	NNP
<body	NN
>	NNP
<	NNP
?php	NNP
/	NNP
/	NNP
Code	NNP
that	WDT
will	MD
		
be	VB
executed	VBN
if	IN
the	DT
form	NN
has	VBZ
been	VBN
submitted	VBN
:	:
if	IN
(	(
		
$submit	NN
)	)
{	(
/	JJ
/	NN
Connect	NNP
to	TO
the	DT
database	NN
(	(
you	PRP
		
may	MD
have	VB
to	TO
adjust	VB
/	NNP
/	NNP
the	DT
hostname	NN
,	,
username	NN
or	CC
		
password	NN
)	)
.	.
mysql_connect(	NN
"localhost	NN
"	NNP
,	,
"root	NNP
"	NNP
,	,
"password	NNP
		
"	NNP
)	)
;	:
mysql_select_db(	CC
"binary_data	NNP
"	NNP
)	)
;	:
$data	CC
=	VB
mysql_real_escape_string(	NN
		
fread(	NN
fopen(	NN
$form_data	NNP
,	,
"r	NNP
"	NNP
)	)
,	,
filesize(	JJ
$form_data	NNP
)	)
		
)	)
)	)
;	:
$result	CC
=	VB
mysql_query(	NN
"INSERT	NNP
INTO	NNP
binary_data	NN
(	(
description	NN
		
,	,
bin_data	NN
,	,
filename	NN
,	,
filesize	VB
,	,
filetype	NN
)	)
"	NN
.	.
		
"VALUES	NN
(	(
'	POS
$form_description	NN
'	''
,	,
'	''
$data	NNP
'	POS
,	,
'	''
		
$form_data_name	NN
'	''
,	,
'	''
$form_data_size	NNP
'	POS
,	,
'	''
$form_data_type	NNP
'	POS
)	)
		
"	NN
)	)
;	:
$id	CC
=	NNP
mysql_insert_id()	NN
;	:
print	NN
"	NN
<p	NNP
>This	NNP
		
file	NN
has	VBZ
the	DT
following	JJ
Database	NNP
ID	NNP
:	:
<b	NN
>	NNP
$id	NNP
<	NNP
		
/b	NNP
>	NNP
"	NNP
;	:
mysql_close()	NN
;	:
}	)
else	RB
{	(
/	JJ
/	NN
		
else	RB
show	VBP
the	DT
form	NN
to	TO
submit	VB
new	JJ
data	NNS
:	:
?	.
>	VB
		
<form	NN
method	NN
=	NNP
"post	NNP
"	NNP
action	NN
=	NNP
"	NNP
<	NNP
?php	NNP
echo	VBP
		
$PHP_SELF	NN
;	:
?	.
>	FW
"	FW
enctype	FW
=	FW
"multipart	FW
/form	FW
-	:
data	NNS
		
"	VBP
>	NNP
File	NNP
Description	NNP
:	:
<br	NN
>	NNP
<input	NNP
type	NN
=	NNP
"text	NNP
		
"	NNP
name	NN
=	NNP
"form_description	NNP
"	NNP
size	NN
=	NNP
"40	NNP
"	NNP
>	NNP
<input	NNP
		
type	NN
=	NNP
"hidden	NNP
"	NNP
name	NN
=	NNP
"MAX_FILE_SIZE	NNP
"	NNP
value	NN
=	NNP
"1000000	NNP
		
"	NNP
>	NNP
<br	NNP
>File	NNP
to	TO
upload	VB
/store	NN
in	IN
database	NN
:	:
<br	JJ
		
>	NNP
<input	NNP
type	NN
=	NN
"file	NNP
"	NNP
name	NN
=	NNP
"form_data	NNP
"	NNP
size	NN
		
=	NNP
"40	NNP
"	NNP
>	NNP
<p	NNP
>	NNP
<input	NNP
type	NN
=	NNP
"submit	NNP
"	NNP
		
name	NN
=	NNP
"submit	NNP
"	NNP
value	NN
=	NNP
"submit	NNP
"	NNP
>	NNP
<	NNP
/form	NNP
		
>	NNP
<	NNP
?php	NNP
}	)
?	.
>	JJ
<	NN
/body	NN
>	NNP
<	NNP
/html	NNP
		
>	NNP
Solutions	NNP
are	VBP
welcome	JJ
in	IN
any	DT
language	NN
.	.
:	:
-	:
)	)
		
I'm	NNP
looking	VBG
for	IN
the	DT
fastest	JJS
way	NN
to	TO
obtain	VB
the	DT
value	NN
of	IN
		
Ï€	NNP
,	,
as	IN
a	DT
personal	JJ
challenge	NN
.	.
More	RBR
specifically	RB
I'm	NNP
using	VBG
		
ways	NNS
that	WDT
don't	VBP
involve	VB
using	VBG
#defined	JJ
constants	NNS
like	IN
M_PI	NNP
,	,
or	CC
		
hard-coding	VBG
the	DT
number	NN
in	IN
.	.
The	DT
program	NN
below	IN
tests	VBZ
the	DT
various	JJ
		
ways	NNS
I	PRP
know	VBP
of	IN
.	.
The	DT
inline	NN
assembly	NN
version	NN
is	VBZ
,	,
		
in	IN
theory	NN
,	,
the	DT
fastest	JJS
option	NN
,	,
though	RB
clearly	RB
not	RB
portable	JJ
		
;	:
I've	NNP
included	VBD
it	PRP
as	IN
a	DT
baseline	NN
to	TO
compare	VB
the	DT
other	JJ
		
versions	NNS
against	IN
.	.
In	IN
my	PRP$
tests	NNS
,	,
with	IN
built-ins	NNS
,	,
the	DT
		
4	CD
*	NNP
atan(	RB
1	CD
)	)
version	NN
is	VBZ
fastest	JJS
on	IN
GCC	NNP
4	CD
		
.	.
2	CD
,	,
because	IN
it	PRP
auto-folds	VBZ
the	DT
atan(	JJ
1	CD
)	)
into	IN
		
a	DT
constant	JJ
.	.
With	IN
-	:
fno-builtin	JJ
specified	VBN
,	,
the	DT
atan2(	NN
0	CD
		
,	,
-	:
1	CD
)	)
version	NN
is	VBZ
fastest	JJS
.	.
Here's	NNP
the	DT
main	JJ
		
testing	NN
program	NN
(	(
pitimes	NNS
.	.
c	NN
)	)
:	:
#include	JJ
<math	NN
.	.
		
h	NN
>	JJ
#include	NN
<stdio	NNP
.	.
h	NN
>	JJ
#include	NN
<time	NNP
.	.
h	NN
		
>	JJ
#define	NN
ITERS	NNP
10000000	CD
#define	NNP
TESTWITH(	NNP
x	NNP
)	)
{	(
\	JJ
diff	NN
		
=	VBD
0	CD
.	.
0	CD
;	:
\	NNP
time1	VBZ
=	NNP
clock()	NN
;	:
\	CC
		
for	IN
(	(
i	JJ
=	VBP
0	CD
;	:
i	JJ
<	VBP
ITERS	NNPS
;	:
+	NNP
		
+i	NNP
)	)
\	VBP
diff	JJ
+	NNP
=	NNP
(	(
x	NNP
)	)
-	:
M_PI	NN
		
;	:
\	CC
time2	VB
=	NNP
clock()	NN
;	:
\	CC
printf(	VB
"	JJ
%s	NNP
\t	NNP
		
=	NNP
>	NNP
%e	NNP
,	,
time	NN
=	NNP
>	NNP
%f	NNP
\n	NNP
"	NNP
,	,
		
#x	NNP
,	,
diff	NN
,	,
diffclock(	NN
time2	NN
,	,
time1	NN
)	)
)	)
;	:
		
\	CC
}	)
static	JJ
inline	NN
double	JJ
diffclock(	NN
clock_t	NN
time1	NN
,	,
clock_t	VB
time0	NN
		
)	)
{	(
return	NN
(	(
double	JJ
)	)
(	(
time1	JJ
-	:
time0	NN
)	)
		
/	VBZ
CLOCKS_PER_SEC	NNP
;	:
}	)
int	NN
main()	NNS
{	(
int	NN
i	NN
;	:
clock_t	NN
		
time1	NN
,	,
time2	NN
;	:
double	JJ
diff	NN
;	:
/	CC
*	VB
Warmup	NNP
.	.
		
The	DT
atan2	JJ
case	NN
catches	NNS
GCC's	NNP
atan	IN
folding	NN
(	(
which	WDT
would	MD
*	VB
		
optimise	VB
the	DT
`	``
`4	JJ
*	NN
atan(	IN
1	CD
)	)
-	:
M_PI	NNP
'	POS
		
'	''
to	TO
a	DT
no-op	JJ
)	)
,	,
if	IN
-	:
fno-builtin	JJ
*	NN
is	VBZ
		
not	RB
used	VBN
.	.
*	JJ
/	JJ
TESTWITH(	NNP
4	CD
*	NNP
atan(	RB
1	CD
)	)
		
)	)
TESTWITH(	$
4	CD
*	NNP
atan2(	NN
1	CD
,	,
1	CD
)	)
)	)
#if	VBP
		
defined(	JJ
__GNUC__	NNP
)	)
&	CC
&	CC
(	(
defined(	JJ
__i386__	NN
)	)
|	VBZ
|	JJ
		
defined(	NN
__amd64__	NNP
)	)
)	)
extern	VBP
double	JJ
fldpi()	NN
;	:
TESTWITH(	NNP
fldpi()	NN
)	)
		
#endif	VBZ
/	JJ
*	NNP
Actual	NNP
tests	NNS
start	VBP
here	RB
.	.
*	JJ
/	JJ
TESTWITH(	NNP
		
atan2(	NN
0	CD
,	,
-	:
1	CD
)	)
)	)
TESTWITH(	NNP
acos(	SYM
-	:
1	CD
		
)	)
)	)
TESTWITH(	$
2	CD
*	NNP
asin(	RB
1	CD
)	)
)	)
TESTWITH(	$
4	CD
		
*	NNP
atan2(	NN
1	CD
,	,
1	CD
)	)
)	)
TESTWITH(	$
4	CD
*	NNP
atan(	RB
		
1	CD
)	)
)	)
return	VBP
0	CD
;	:
}	)
And	CC
the	DT
inline	NN
assembly	NN
		
stuff	NN
(	(
fldpi	JJ
.	.
c	NN
)	)
,	,
noting	VBG
that	IN
it	PRP
will	MD
		
only	RB
work	VB
for	IN
x86	NN
and	CC
x64	JJ
systems	NNS
:	:
double	JJ
fldpi()	NN
{	(
		
double	JJ
pi	NN
;	:
asm(	CC
"fldpi	JJ
"	NN
:	:
"	JJ
=t	NN
"	NNP
(	(
		
pi	NN
)	)
)	)
;	:
return	VB
pi	NN
;	:
}	)
And	CC
a	DT
build	JJ
		
script	NN
that	WDT
builds	VBZ
all	PDT
the	DT
configurations	NNS
I'm	NNP
testing	VBG
(	(
build	VB
.	.
		
sh	NN
)	)
:	:
#	#
!	.
/bin	NN
/sh	NNP
gcc	NN
-	:
O3	NNP
-	:
		
Wall	NNP
-	:
c	SYM
-	:
m32	NN
-	:
o	JJ
fldpi-32	JJ
.	.
o	JJ
fldpi	NN
		
.	.
c	VB
gcc	JJ
-	:
O3	NNP
-	:
Wall	NNP
-	:
c	SYM
-	:
m64	NN
		
-	:
o	JJ
fldpi-64	JJ
.	.
o	JJ
fldpi	NN
.	.
c	VB
gcc	JJ
-	:
O3	NNP
		
-	:
Wall	NNP
-	:
ffast-math	JJ
-	:
m32	NN
-	:
o	JJ
pitimes1-32	JJ
pitimes	NNS
.	.
		
c	VB
fldpi-32	JJ
.	.
o	NN
gcc	SYM
-	:
O3	NNP
-	:
Wall	NNP
-	:
m32	NN
		
-	:
o	JJ
pitimes2-32	JJ
pitimes	NNS
.	.
c	VB
fldpi-32	JJ
.	.
o	SYM
-	:
lm	NN
		
gcc	SYM
-	:
O3	NNP
-	:
Wall	NNP
-	:
fno-builtin	JJ
-	:
m32	NN
-	:
o	JJ
		
pitimes3-32	JJ
pitimes	NNS
.	.
c	VB
fldpi-32	JJ
.	.
o	SYM
-	:
lm	NN
gcc	SYM
-	:
		
O3	NNP
-	:
Wall	NNP
-	:
ffast-math	JJ
-	:
m64	NN
-	:
o	JJ
pitimes1-64	JJ
pitimes	NNS
		
.	.
c	VB
fldpi-64	JJ
.	.
o	SYM
-	:
lm	NN
gcc	SYM
-	:
O3	NNP
-	:
		
Wall	NNP
-	:
m64	NN
-	:
o	JJ
pitimes2-64	JJ
pitimes	NNS
.	.
c	VB
fldpi-64	JJ
.	.
		
o	SYM
-	:
lm	NN
gcc	SYM
-	:
O3	NNP
-	:
Wall	NNP
-	:
fno-builtin	JJ
-	:
		
m64	NN
-	:
o	JJ
pitimes3-64	JJ
pitimes	NNS
.	.
c	VB
fldpi-64	JJ
.	.
o	SYM
-	:
		
lm	JJ
Apart	NNP
from	IN
testing	VBG
between	IN
various	JJ
compiler	NN
flags	NNS
(	(
I've	NNP
compared	VBN
		
32-bit	CD
against	IN
64-bit	CD
too	RB
,	,
because	IN
the	DT
optimisations	NNS
are	VBP
different	JJ
)	)
		
,	,
I've	NNP
also	RB
tried	VBD
switching	VBG
the	DT
order	NN
of	IN
the	DT
tests	NNS
around	IN
		
.	.
The	DT
atan2(	NN
0	CD
,	,
-	:
1	CD
)	)
version	NN
still	RB
comes	VBZ
		
out	RP
top	JJ
every	DT
time	NN
,	,
though	RB
.	.
Many	JJ
years	NNS
ago	RB
,	,
		
to	TO
provide	VB
an	DT
age	NN
calculator	NN
gimmick	NN
on	IN
my	PRP$
website	NN
,	,
I	PRP
		
wrote	VBD
a	DT
function	NN
to	TO
calculate	VB
age	NN
to	TO
a	DT
fraction	NN
.	.
This	DT
		
is	VBZ
a	DT
quick	JJ
port	NN
of	IN
that	DT
function	NN
to	TO
C	NNP
#	#
(	(
		
from	IN
the	DT
PHP	NNP
version	NN
)	)
.	.
I'm	NNP
afraid	VBD
I	PRP
haven't	VBP
been	VBN
		
able	JJ
to	TO
test	VB
the	DT
C	NNP
#	#
version	NN
,	,
but	CC
hope	VBP
you	PRP
		
enjoy	VBP
all	PDT
the	DT
same	JJ
!	.
(	(
Admittedly	RB
this	DT
is	VBZ
a	DT
bit	NN
		
gimmicky	JJ
for	IN
the	DT
purposes	NNS
of	IN
showing	VBG
user	JJ
profiles	NNS
on	IN
Stack	NNP
Overflow	NNP
		
,	,
but	CC
maybe	RB
readers	NNS
will	MD
find	VB
some	DT
use	NN
for	IN
it	PRP
.	.
		
:	:
-	:
)	)
)	)
double	JJ
AgeDiff(	NNP
DateTime	NNP
date1	NN
,	,
DateTime	NNP
date2	NN
		
)	)
{	(
double	JJ
years	NNS
=	VBP
date2	NN
.	.
Year	SYM
-	:
date1	NN
.	.
		
Year	NN
;	:
/	CC
*	VB
*	NN
If	IN
date2	NN
and	CC
date1	NN
+	NNP
round(	NN
		
date2	NN
-	:
date1	NN
)	)
are	VBP
on	IN
different	JJ
sides	NNS
*	NN
of	IN
29	CD
		
February	NNP
,	,
then	RB
our	PRP$
partial	JJ
year	NN
is	VBZ
considered	VBN
to	TO
have	VB
366	CD
		
*	NNP
days	NNS
total	NN
,	,
otherwise	RB
it's	JJ
365	CD
.	.
Note	NN
that	IN
59	CD
		
is	VBZ
the	DT
day	NN
number	NN
*	NNP
of	IN
29	CD
Feb	NNP
.	.
*	CC
/	JJ
		
double	JJ
fraction	NN
=	VBD
365	CD
+	NNP
(	(
DateTime.IsLeapYear(	NNP
date2	NN
.	.
Year	NN
)	)
		
&	CC
&	CC
date2	NN
.	.
DayOfYear	NNP
>	NNP
=	NNP
59	NNP
&	CC
&	CC
(	(
		
date1	NN
.	.
DayOfYear	NNP
<	VBD
59	CD
|	NNP
|	NNP
date1	NN
.	.
DayOfYear	NNP
>	JJ
		
date2	NN
.	.
DayOfYear	NNP
)	)
?	.
1	CD
:	:
0	CD
)	)
;	:
/	CC
		
*	VB
*	VBZ
The	DT
only	JJ
really	RB
nontrivial	JJ
case	NN
is	VBZ
if	IN
date1	NN
is	VBZ
		
in	IN
a	DT
leap	JJ
year	NN
,	,
*	NNP
and	CC
date2	NN
is	VBZ
not	RB
.	.
		
So	RB
let's	JJ
handle	VBP
the	DT
others	NNS
first	RB
.	.
*	VB
/	JJ
if	IN
(	(
		
DateTime.IsLeapYear(	NNP
date2	NN
.	.
Year	NN
)	)
=	NN
=	NNP
DateTime.IsLeapYear(	NNP
date1	NN
.	.
Year	NNP
		
)	)
)	)
return	VBP
years	NNS
+	NNP
(	(
date2	NN
.	.
DayOfYear	NNP
-	:
date1	NN
		
.	.
DayOfYear	NNP
)	)
/	NNP
fraction	NN
;	:
/	CC
*	VB
*	NN
If	IN
date2	NN
		
is	VBZ
in	IN
a	DT
leap	JJ
year	NN
,	,
but	CC
date1	NN
is	VBZ
not	RB
and	CC
		
is	VBZ
March	NNP
or	CC
*	NNP
beyond	IN
,	,
shift	VB
up	RP
by	IN
a	DT
day	NN
		
.	.
*	VB
/	JJ
if	IN
(	(
DateTime.IsLeapYear(	NNP
date2	NN
.	.
Year	NNP
)	)
)	)
		
{	(
return	NN
years	NNS
+	NNP
(	(
date2	NN
.	.
DayOfYear	NNP
-	:
date1	NN
.	.
		
DayOfYear	NNP
-	:
(	(
date1	NN
.	.
DayOfYear	NNP
>	NNP
=	VBD
59	CD
?	.
1	CD
		
:	:
0	CD
)	)
)	)
/	$
fraction	NN
;	:
}	)
/	FW
*	FW
*	FW
		
If	IN
date1	NN
is	VBZ
not	RB
on	IN
29	CD
February	NNP
,	,
shift	VB
down	RP
date1	NN
		
by	IN
a	DT
day	NN
if	IN
*	VBN
March	NNP
or	CC
later	RB
.	.
Proceed	VB
normally	RB
		
.	.
*	VB
/	JJ
if	IN
(	(
date1	NN
.	.
DayOfYear	JJ
!	.
=	$
59	CD
		
)	)
{	(
return	NN
years	NNS
+	NNP
(	(
date2	NN
.	.
DayOfYear	NNP
-	:
date1	NN
		
.	.
DayOfYear	NNP
+	NNP
(	(
date1	NN
.	.
DayOfYear	NNP
>	VBD
59	CD
?	.
1	CD
		
:	:
0	CD
)	)
)	)
/	$
fraction	NN
;	:
}	)
/	FW
*	JJ
*	NNP
		
Okay	NNP
,	,
here	RB
date1	NN
is	VBZ
on	IN
29	CD
February	NNP
,	,
and	CC
date2	NN
		
is	VBZ
not	RB
on	IN
a	DT
leap	NN
*	JJ
year	NN
.	.
What	WP
to	TO
do	VB
		
now	RB
?	.
On	IN
28	CD
Feb	NNP
in	IN
date2's	JJ
year	NN
,	,
the	DT
`	``
		
`age	NN
'	''
'	POS
*	NNS
should	MD
be	VB
just	RB
shy	NN
of	IN
a	DT
whole	JJ
		
number	NN
,	,
and	CC
on	IN
1	CD
Mar	NNP
should	MD
be	VB
*	JJ
just	RB
over	IN
		
.	.
Perhaps	RB
the	DT
easiest	JJS
way	NN
is	VBZ
to	TO
a	DT
point	NN
halfway	NN
*	NN
		
between	IN
those	DT
two	CD
:	:
58	CD
.	.
5	CD
.	.
*	JJ
/	JJ
return	NN
		
years	NNS
+	NNP
(	(
date2	NN
.	.
DayOfYear	NNP
-	:
58	CD
.	.
5	CD
)	)
		
/	NN
fraction	NN
;	:
}	)
The	DT
best	JJS
way	NN
that	IN
I	PRP
know	VBP
of	IN
		
because	IN
of	IN
leap	JJ
years	NNS
and	CC
everything	NN
is	VBZ
:	:
DateTime	JJ
birthDate	NN
=	NNP
		
new	JJ
DateTime(	NNP
2000	CD
,	,
3	CD
,	,
1	CD
)	)
;int	NN
age	NN
=	NNP
		
(	(
int	JJ
)Math	NN
.	.
Floor(	NNP
(	(
DateTime	NNP
.	.
Now	RB
-	:
birthDate	NN
		
)	)
.	.
TotalDays	NNP
/	VBD
365	CD
.	.
25D	CD
)	)
;	:
Hope	NNP
this	DT
		
helps	VBZ
.	.
@jeff	VB
IMHO	NNP
yours	NNPS
seems	VBZ
a	DT
little	JJ
long	JJ
.	.
However	RB
		
it	PRP
does	VBZ
seem	VB
a	DT
little	RB
more	RBR
robust	JJ
with	IN
support	NN
for	IN
"yesterday	JJ
		
"	NNP
and	CC
"years	NNP
"	NNP
.	.
But	CC
in	IN
my	PRP$
experience	NN
when	WRB
this	DT
		
is	VBZ
used	VBN
the	DT
person	NN
is	VBZ
most	RBS
likely	JJ
to	TO
view	VB
the	DT
content	NN
		
in	IN
the	DT
first	JJ
30	CD
days	NNS
.	.
It	PRP
is	VBZ
only	RB
the	DT
really	RB
		
hardcore	JJ
people	NNS
that	IN
come	VBP
after	IN
that	DT
.	.
So	IN
that	DT
is	VBZ
why	WRB
		
I	PRP
usually	RB
elect	VBP
to	TO
keep	VB
this	DT
short	JJ
and	CC
simple	JJ
.	.
This	DT
		
is	VBZ
the	DT
method	NN
I	PRP
am	VBP
currently	RB
using	VBG
on	IN
one	CD
of	IN
my	PRP$
		
websites	NNS
.	.
This	DT
only	JJ
returns	VBZ
a	DT
relative	JJ
day	NN
,	,
hour	NN
,	,
		
time	NN
.	.
And	CC
then	RB
the	DT
user	NN
has	VBZ
to	TO
slap	VB
on	IN
"ago	JJ
		
"	NN
in	IN
the	DT
output	NN
.	.
public	JJ
static	JJ
string	NN
ToLongString(	NNP
this	DT
TimeSpan	NNP
		
time	NN
)	)
{	(
string	VBG
output	NN
=	NNP
String	NNP
.	.
Empty	NNP
;	:
if	IN
		
(	(
time	NN
.	.
Days	VBZ
>	RB
0	CD
)	)
output	NN
+	NNP
=	NNP
time	NN
		
.	.
Days	NNS
+	VBP
"	JJ
days	NNS
"	VBP
;	:
if	IN
((	JJ
time	NN
.	.
		
Days	NNS
=	VBP
=	JJ
0	CD
|	JJ
|	JJ
time	NN
.	.
Days	NNS
=	VBP
=	JJ
		
1	CD
)	)
&	CC
&	CC
time	NN
.	.
Hours	NNP
>	NNP
0	CD
)	)
output	NN
		
+	NNP
=	NNP
time	NN
.	.
Hours	NNP
+	NNP
"	NNP
hr	NN
"	NN
;	:
if	IN
		
(	(
time	NN
.	.
Days	NNS
=	VBP
=	JJ
0	CD
&	CC
&	CC
time	NN
.	.
		
Minutes	NNS
>	VBP
0	CD
)	)
output	NN
+	NNP
=	NNP
time	NN
.	.
Minutes	NNS
+	VBP
		
"	JJ
min	NN
"	NN
;	:
if	IN
(	(
output	NN
.	.
Length	NNP
=	NNP
=	NNP
		
0	CD
)	)
output	NN
+	NNP
=	NNP
time	NN
.	.
Seconds	NNS
+	JJ
"	NNP
sec	NN
		
"	NN
;	:
return	VB
output.Trim()	NN
;	:
}	)
I've	NNP
had	VBD
no	DT
trouble	NN
using	VBG
		
the	DT
BSD	NNP
sockets	NNS
API	NNP
in	IN
C	NNP
+	NNP
+	NNP
,	,
in	IN
GNU	NNP
		
/Linux	NNP
.	.
Here's	NNP
the	DT
sample	JJ
program	NN
I	PRP
used	VBD
:	:
#include	NN
<sys	NN
		
/socket	NN
.	.
h	NN
>intmain	NNP
(	(
)	)
{	(
return	JJ
AF_INET	NNP
;	:
}	)
		
So	IN
my	PRP$
take	NN
on	IN
this	DT
is	VBZ
that	IN
z	NN
/OS	NN
is	VBZ
probably	RB
		
the	DT
complicating	NN
factor	NN
here	RB
,	,
however	RB
,	,
because	IN
I've	NNP
never	RB
used	VBD
		
z	NN
/OS	NN
before	IN
,	,
much	RB
less	JJR
programmed	VBN
in	IN
it	PRP
,	,
I	PRP
		
can't	VBP
say	VB
this	DT
definitively	RB
.	.
:	:
-	:
P	VB
How	WRB
do	VB
I	PRP
		
forcefully	RB
unload	VBP
a	DT
ByteArray	NNP
from	IN
memory	NN
in	IN
ActionScript	NNP
3	CD
?	.
I	PRP
		
have	VBP
tried	VBN
(	(
without	IN
success	NN
)	)
:	:
byteArray	NN
.	.
length	NN
=	VBD
		
0	CD
;	:
byteArray	NN
=	VBD
new	JJ
ByteArray()	NNP
;	:
And	CC
for	IN
(	(
var	NN
		
i	NN
:int	VBP
=0	NN
;	:
i	CC
<	VBP
byteArray	NN
.	.
length	NN
;	:
i	CC
		
+	VBP
+	NNP
)	)
{	(
byteArray	NN
[i	NNP
]	NNP
=	NNP
null	NN
;	:
}	)
		
How	WRB
can	MD
I	PRP
monitor	VB
an	DT
SQL	NNP
Server	NNP
database	NN
for	IN
changes	NNS
to	TO
		
a	DT
table	NN
without	IN
using	VBG
triggers	NNS
or	CC
modifying	VBG
the	DT
structure	NN
of	IN
the	DT
		
database	NN
in	IN
any	DT
way	NN
?	.
My	PRP$
preferred	JJ
programming	NN
environment	NN
is	VBZ
.	.
		
NET	JJ
and	CC
C	NNP
#	#
.	.
I'd	NNP
like	IN
to	TO
be	VB
able	JJ
to	TO
		
support	VB
any	DT
SQL	NNP
Server	NNP
2000	CD
SP4	NNP
or	CC
newer	JJR
.	.
My	PRP$
application	NN
		
is	VBZ
a	DT
bolt-on	JJ
data	NN
visualization	NN
for	IN
another	DT
company's	JJ
product	NN
.	.
Our	PRP$
		
customer	NN
base	NN
is	VBZ
in	IN
the	DT
thousands	NNS
,	,
so	IN
I	PRP
don't	VBP
want	VBP
		
to	TO
have	VB
to	TO
put	VB
in	IN
requirements	NNS
that	IN
we	PRP
modify	VBP
the	DT
third-party	JJ
		
vendor's	NN
table	NN
at	IN
every	DT
installation	NN
.	.
By	IN
"changes	NNS
to	TO
a	DT
table	JJ
		
"	NN
I	PRP
mean	VBP
changes	NNS
to	TO
table	VB
data	NNS
,	,
not	RB
changes	NNS
to	TO
		
table	JJ
structure	NN
.	.
Ultimately	RB
,	,
I	PRP
would	MD
like	VB
the	DT
change	NN
to	TO
		
trigger	VB
an	DT
event	NN
in	IN
my	PRP$
application	NN
,	,
instead	RB
of	IN
having	VBG
to	TO
		
check	VB
for	IN
changes	NNS
at	IN
an	DT
interval	NN
.	.
The	DT
best	JJS
course	NN
of	IN
		
action	NN
given	VBN
my	PRP$
requirements	NNS
(	(
no	DT
triggers	NNS
or	CC
schema	NN
modification	NN
,	,
		
SQL	NNP
Server	NNP
2000	CD
and	CC
2005	CD
)	)
seems	VBZ
to	TO
be	VB
to	TO
use	VB
		
the	DT
BINARY_CHECKSUM	NNP
function	NN
in	IN
T-SQL	NNP
.	.
The	DT
way	NN
I	PRP
plan	VBP
to	TO
		
implement	VB
is	VBZ
this	DT
:	:
Every	DT
X	NN
seconds	VBZ
run	VBP
the	DT
following	JJ
query	NN
		
:	:
SELECT	NNP
CHECKSUM_AGG(	NNP
BINARY_CHECKSUM(	NNP
*	NNP
)	)
)	)
FROM	NNP
sample_table	JJ
WITH	NNP
(	(
		
NOLOCK	NNP
)	)
;	:
and	CC
compare	VB
that	DT
against	IN
the	DT
stored	JJ
value	NN
.	.
		
If	IN
the	DT
value	NN
has	VBZ
changed	VBN
,	,
go	VBP
through	IN
the	DT
table	NN
row	NN
		
by	IN
row	NN
using	VBG
the	DT
query	NN
select	NN
row_id	NN
,	,
BINARY_CHECKSUM(	NNP
*	NNP
)	)
		
from	IN
sample_table	JJ
WITH	NNP
(	(
NOLOCK	NNP
)	)
;	:
and	CC
compare	VB
the	DT
returned	JJ
		
checksums	NNS
against	IN
stored	VBN
values	NNS
.	.
Sure	JJ
I	PRP
can	MD
post	VB
a	DT
test	NN
		
app	NN
.	.
#include	VB
<sys	JJ
/socket	NN
.	.
h	JJ
>int	NN
main()	NN
{	(
return	JJ
		
AF_INET	NNP
;	:
}	)
Compile	NNP
/Link	NNP
Output	NNP
:	:
cxx	NN
-	:
Wc	NNP
,	,
		
xplink	NNP
-	:
Wl	NNP
,	,
xplink	NNP
-	:
o	NN
inet_test	JJ
inet	NN
.	.
C	NNP
		
"	NNP
.	.
/inet	NN
.	.
C	NNP
"	NNP
,	,
line	NN
5	CD
.	.
16	CD
		
:	:
CCN5274	NNP
(	(
S	NNP
)	)
The	DT
name	NN
lookup	NN
for	IN
"AF_INET	NNP
"	NNP
		
did	VBD
not	RB
find	VB
a	DT
declaration	NN
.	.
CCN0797(	NNP
I	PRP
)	)
Compilation	NN
failed	VBD
		
for	IN
file	NN
.	.
/inet	NN
.	.
C	NNP
.	.
Object	NNP
file	NN
not	RB
created	VBN
		
.	.
A	DT
check	NN
of	IN
sys	JJ
/sockets	NNS
.	.
h	NN
does	VBZ
include	VB
the	DT
		
definition	NN
I	PRP
need	VBP
,	,
and	CC
as	RB
far	RB
as	IN
I	PRP
can	MD
tell	VB
		
,	,
it	PRP
is	VBZ
not	RB
being	VBG
blocked	VBN
by	IN
any	DT
#ifdef	JJ
statements	NNS
.	.
		
I	PRP
have	VBP
however	RB
noticed	VBN
it	PRP
contains	VBZ
a	DT
the	DT
following	JJ
:	:
#ifdef	JJ
		
__cplusplus	CC
extern	JJ
"C	NNP
"	NNP
{	(
#endif	NNP
which	WDT
encapsulates	VBZ
basically	RB
the	DT
whole	JJ
		
file	NN
.	.
Not	RB
sure	JJ
if	IN
it	PRP
matters	VBZ
.	.
Consider	VB
using	VBG
a	DT
		
ManualResetEvent	NN
to	TO
block	VB
the	DT
main	JJ
thread	NN
at	IN
the	DT
end	NN
of	IN
its	PRP$
		
processing	NN
,	,
and	CC
call	VB
Reset()	NNP
on	IN
it	PRP
once	RB
the	DT
timer's	NN
processing	NN
		
has	VBZ
finished	VBN
.	.
If	IN
this	DT
is	VBZ
something	NN
that	WDT
needs	VBZ
to	TO
run	VB
		
constantly	RB
,	,
consider	VB
moving	VBG
this	DT
into	IN
a	DT
service	NN
process	NN
instead	RB
of	IN
		
a	DT
console	JJ
app	NN
.	.
You	PRP
can	MD
use	VB
something	NN
like	IN
Console.ReadLine()	NNP
to	TO
		
block	VB
the	DT
main	JJ
thread	NN
,	,
so	IN
other	JJ
background	NN
threads	NNS
(	(
like	IN
		
timer	NN
threads	NNS
)	)
will	MD
still	RB
work	VB
.	.
You	PRP
may	MD
also	RB
use	VB
		
an	DT
AutoResetEvent	NN
to	TO
block	VB
the	DT
execution	NN
,	,
then	RB
(	(
when	WRB
you	PRP
		
need	VBP
to	TO
)	)
you	PRP
can	MD
call	VB
Set()	NNP
method	NN
on	IN
that	DT
AutoResetEvent	NNP
		
object	NN
to	TO
release	VB
the	DT
main	JJ
thread	NN
.	.
Also	RB
ensure	VB
that	IN
your	PRP$
		
reference	NN
to	TO
Timer	NNP
object	NN
doesn't	NN
go	VB
out	IN
of	IN
scope	NN
and	CC
garbage	NN
		
collected	VBN
.	.
Have	VBP
a	DT
look	NN
at	IN
this	DT
article	NN
http	NN
:	:
/	JJ
		
/www	NN
.	.
gskinner	NN
.	.
com	NN
/blog	NN
/archives	VBZ
/2006	NNP
/06	NNP
/as3_resource_ma	NNP
.	.
		
html	NN
IANA	NNP
actionscript	NN
programmer	NN
,	,
however	RB
the	DT
feeling	NN
I'm	NNP
getting	VBG
is	VBZ
		
that	IN
,	,
because	IN
the	DT
garbage	NN
collector	NN
might	MD
not	RB
run	VB
when	WRB
you	PRP
		
want	VBP
it	PRP
to	TO
.	.
Hence	NNP
http	NN
:	:
/	JJ
/www	NN
.	.
craftymind	NN
		
.	.
com	NN
/2008	JJ
/04	NNP
/09	NNP
/kick	NNP
-	:
starting-the-garbage-collector-in-actionscript-3-with-air	JJ
/	NNS
So	RB
I'd	NNP
		
recommend	VB
trying	VBG
out	RP
their	PRP$
collection	NN
code	NN
and	CC
see	VB
if	IN
it	PRP
helps	VBZ
		
private	JJ
var	NN
gcCount	NN
:int	NN
;private	NNP
function	NN
startGCCycle()	NN
:void	NNP
{	(
gcCount	NN
=	RB
		
0	CD
;	:
addEventListener(	JJ
Event	NNP
.	.
ENTER_FRAME	NNP
,	,
doGC	NN
)	)
;	:
}private	JJ
		
function	NN
doGC(	NN
evt	FW
:Event	NN
)	)
:void	FW
{	(
flash.system.System.gc()	NN
;	:
if(	CC
+	NNP
		
+gcCount	NNP
>	NNP
1	CD
)	)
{	(
removeEventListener(	JJ
Event	NNP
.	.
ENTER_FRAME	NNP
,	,
doGC	NN
		
)	)
;	:
setTimeout(	JJ
lastGC	NN
,	,
40	CD
)	)
;	:
}	)
}private	VBP
function	NN
		
lastGC()	NN
:void	NNP
{	(
flash.system.System.gc()	NN
;	:
}	)
(	(
I'm	NNP
not	RB
positive	JJ
about	IN
		
this	DT
,	,
but	CC
...	:
)	)
AS3	VBP
uses	VBZ
a	DT
non-deterministic	JJ
garbage	NN
collection	NN
		
.	.
Which	JJ
means	VBZ
that	IN
unreferenced	JJ
memory	NN
will	MD
be	VB
freed	VBN
up	RP
whenever	WRB
		
the	DT
runtime	NN
feels	NNS
like	IN
it	PRP
(	(
typically	RB
not	RB
unless	IN
there's	VB
a	DT
		
reason	NN
to	TO
run	VB
,	,
since	IN
it's	NN
an	DT
expensive	JJ
operation	NN
to	TO
execute	VB
		
)	)
.	.
This	DT
is	VBZ
the	DT
same	JJ
approach	NN
used	VBN
by	IN
most	JJS
modern	JJ
		
garbage	NN
collected	VBN
languages	NNS
(	(
like	IN
C	NNP
#	#
and	CC
Java	NNP
as	RB
well	RB
		
)	)
.	.
Assuming	VBG
there	EX
are	VBP
no	DT
other	JJ
references	NNS
to	TO
the	DT
memory	NN
		
pointed	VBD
to	TO
by	IN
byteArray	NN
or	CC
the	DT
items	NNS
within	IN
the	DT
array	NN
itself	PRP
		
,	,
the	DT
memory	NN
will	MD
be	VB
freed	VBN
at	IN
some	DT
point	NN
after	IN
you	PRP
		
exit	VBP
the	DT
scope	NN
where	WRB
byteArray	NN
is	VBZ
declared	VBN
.	.
You	PRP
can	MD
force	VB
		
a	DT
garbage	NN
collection	NN
,	,
though	IN
you	PRP
really	RB
shouldn't	VB
.	.
If	IN
you	PRP
		
do	VBP
,	,
do	VB
it	PRP
only	RB
for	IN
testing	VBG
...	:
if	IN
you	PRP
do	VBP
		
it	PRP
in	IN
production	NN
,	,
you'll	JJ
hurt	VBD
performance	NN
much	RB
more	JJR
than	IN
help	NN
		
it	PRP
.	.
To	TO
force	VB
a	DT
GC	NNP
,	,
try	NN
(	(
yes	UH
,	,
		
twice	RB
)	)
:	:
flash.system.System.gc()	NN
;	:
flash.system.System.gc()	CC
;	:
You	PRP
can	MD
read	VB
more	JJR
		
here	RB
.	.
Give	VB
your	PRP$
submit	NN
buttons	NNS
same	JJ
name	NN
like	IN
this	DT
:	:
		
<input	NN
type	NN
=	NNP
"submit	NNP
"	NNP
name	NN
=	NNP
"submitButton	NNP
"	NNP
value	NN
=	NNP
		
"Previous	JJ
Page	NNP
"	NNP
/	NNP
>	NNP
<input	NNP
type	NN
=	NNP
"submit	NNP
"	NNP
name	NN
		
=	NNP
"submitButton	NNP
"	NNP
value	NN
=	NNP
"Next	NNP
Page	NNP
"	NNP
/	NNP
>	NN
When	WRB
		
the	DT
user	NN
presses	VBZ
enter	RBR
and	CC
the	DT
Request	NNP
goes	VBZ
to	TO
server	VB
,	,
		
you	PRP
can	MD
check	VB
the	DT
value	NN
for	IN
submitButton	NN
on	IN
your	PRP$
server-side	JJ
code	NN
		
which	WDT
contains	VBZ
a	DT
collection	NN
of	IN
form	NN
name	NN
/value	NNP
pairs	NNS
.	.
For	IN
		
example	NN
in	IN
classic	JJ
ASP	NN
:	:
If	IN
Request.Form(	NNP
"submitButton	NNP
"	NNP
)	)
=	VBP
		
"Previous	JJ
Page	NNP
"	NNP
Then	RB
'	POS
Code	NNP
for	IN
Previous	NNP
Page	NNP
ElseIf	NNP
Request.Form(	NNP
		
"submitButton	NNP
"	NNP
)	)
=	VBP
"Next	JJ
Page	NNP
"	NNP
Then	RB
'	POS
Code	NNP
for	IN
		
Next	NNP
Page	NNP
End	NNP
If	IN
Reference	NNP
:	:
Using	VBG
multiple	JJ
submit	NN
buttons	NNS
on	IN
		
a	DT
single	JJ
form	NN
Let's	NNP
say	VBP
I	PRP
have	VBP
a	DT
DataTable	JJ
with	IN
a	DT
		
Name	NN
column	NN
.	.
I	PRP
want	VBP
to	TO
have	VB
a	DT
collection	NN
of	IN
the	DT
		
unique	JJ
names	NNS
ordered	VBN
alphabetically	RB
.	.
The	DT
following	JJ
query	NN
ignores	VBZ
the	DT
order	NN
		
by	IN
clause	NN
.	.
var	JJ
names	NNS
=	VBP
(	(
from	IN
DataRow	NNP
dr	NN
in	IN
		
dataTable	JJ
.	.
Rows	NNP
orderby	NN
(	(
string	VBG
)dr	NNP
[	NNP
"Name	NNP
"	NNP
]	NNP
		
select	NN
(	(
string	VBG
)dr	NNP
[	NNP
"Name	NNP
"	NNP
]	NNP
)	)
.	.
Distinct()	NNP
		
;	:
Why	WRB
does	VBZ
the	DT
orderby	NN
not	RB
get	VB
enforced	VBN
?	.
Unfortunately	RB
when	WRB
		
it	PRP
comes	VBZ
to	TO
memory	VB
management	NN
in	IN
Flash	NNP
/actionscript	NNP
there	EX
isn't	VBZ
a	DT
		
whole	JJ
lot	NN
you	PRP
can	MD
do	VB
.	.
ActionScript	NNP
was	VBD
designed	VBN
to	TO
be	VB
		
easy	JJ
to	TO
use	VB
(	(
so	IN
they	PRP
didn't	VBP
want	JJ
people	NNS
to	TO
have	VB
		
to	TO
worry	VB
about	IN
memory	NN
management	NN
)	)
The	DT
following	NN
is	VBZ
a	DT
workaround	NN
		
,	,
instead	RB
of	IN
creating	VBG
a	DT
ByteArray	NNP
variable	JJ
try	NN
this	DT
.	.
var	NN
		
byteObject	NN
:Object	NNP
=	NNP
new	JJ
Object()	NNP
;	:
byteObject	NN
.	.
byteArray	NN
=	VBD
new	JJ
		
ByteArray()	NNP
;	:
...	:
/	VBP
/Then	VB
when	WRB
you	PRP
are	VBP
finished	VBN
delete	IN
the	DT
		
variable	JJ
from	IN
byteObject	JJ
delete	JJ
byteObject	NN
.	.
byteArray	NN
;	:
Where	NNP
byteArray	NN
is	VBZ
		
a	DT
dynamic	JJ
property	NN
of	IN
byteObject	NN
,	,
you	PRP
can	MD
free	VB
the	DT
memory	NN
		
that	WDT
was	VBD
allocated	VBN
for	IN
it	PRP
.	.
The	DT
problem	NN
is	VBZ
that	IN
the	DT
		
Distinct	NNP
operator	NN
does	VBZ
not	RB
grant	VB
that	IN
it	PRP
will	MD
maintain	VB
the	DT
original	JJ
		
order	NN
of	IN
values	NNS
.	.
So	RB
your	PRP$
query	NN
will	MD
need	VB
to	TO
work	VB
		
like	IN
this	DT
var	NN
names	VBZ
=	NNP
(	(
from	IN
DataRow	NNP
dr	NN
in	IN
dataTable	JJ
		
.	.
Rows	NNS
select	VBP
(	(
string	VBG
)dr	NNP
[	NNP
"Name	NNP
"	NNP
]	NNP
)	)
		
.	.
Distinct()	NNP
.	.
OrderBy(	NNP
name	NN
=	NNP
>	NNP
name	NN
)	)
;	:
