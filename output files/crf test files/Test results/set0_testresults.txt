Well	RB	O
,	,	O
here's	VB	O
how	WRB	O
we	PRP	O
do	VBP	O
it	PRP	O
on	IN	O
Stack	NNP	O
Overflow	NNP	O
.	.	O

var	NN	O
ts	NN	O
=	NNP	O
new	JJ	O
TimeSpan(	NNP	O
DateTime	NNP	O
.	.	O
UtcNow	NNP	O
.	.	O
Ticks	NNP	O
-	:	O

dt	NN	I-API
.	.	I-API
Ticks	NNP	I-API
)	)	L-API
;	:	O
double	JJ	O
delta	NN	O
=	NNP	O
Math.Abs(	NNP	O
ts	NN	O
.	.	O

TotalSeconds	NNP	I-API
)	)	L-API
;	:	O
if	IN	O
(	(	O
delta	JJ	O
<	VBP	O
60	CD	O
)	)	O
{	(	O
return	NN	O

ts	NN	O
.	.	O
Seconds	VBZ	O
=	JJ	O
=	$	O
1	CD	O
?	.	O
"one	CD	O
second	JJ	O
ago	RB	O
"	NN	O

:	:	O
ts	NN	O
.	.	O
Seconds	VBZ	O
+	JJ	O
"	NNP	O
seconds	NNS	O
ago	RB	O
"	VBP	O
;	:	O
}	)	O

if	IN	O
(	(	O
delta	JJ	O
<	VBP	O
120	CD	O
)	)	O
{	(	O
return	NN	O
"a	NNP	O
minute	NN	O
ago	RB	O

"	NNP	O
;	:	O
}	)	O
if	IN	O
(	(	O
delta	NN	O
<	IN	O
2700	CD	O
)	)	O
/	VBD	O
/	$	O

45	CD	O
*	NNP	O
60	CD	O
{	(	O
return	NN	O
ts	NN	O
.	.	O
Minutes	NNP	O
+	NNP	O
"	NNP	O
minutes	NNS	O

ago	RB	O
"	VBP	O
;	:	O
}	)	O
if	IN	O
(	(	O
delta	NN	O
<	IN	O
5400	CD	O
)	)	O
/	VBD	O

/	$	O
90	CD	O
*	NNP	O
60	CD	O
{	(	O
return	NN	O
"an	FW	O
hour	NN	O
ago	IN	O
"	NN	O
;	:	O

}	)	O
if	IN	O
(	(	O
delta	JJ	O
<	VBP	O
86400	CD	O
)	)	O
/	NN	O
/	$	O
24	CD	O
*	$	O

60	CD	O
*	NNP	O
60	CD	O
{	(	O
return	NN	O
ts	NN	O
.	.	O
Hours	NNP	O
+	NNP	O
"	NNP	O
hours	NNS	O

ago	RB	O
"	VBP	O
;	:	O
}	)	O
if	IN	O
(	(	O
delta	JJ	O
<	VBP	O
172800	CD	O
)	)	O
/	NN	O

/	$	O
48	CD	O
*	$	O
60	CD	O
*	NNP	O
60	CD	O
{	(	O
return	NN	O
"yesterday	NNP	O
"	NNP	O
;	:	O

}	)	O
if	IN	O
(	(	O
delta	JJ	O
<	VBP	O
2592000	CD	O
)	)	O
/	NN	O
/	$	O
30	CD	O
*	$	O

24	CD	O
*	$	O
60	CD	O
*	NNP	O
60	CD	O
{	(	O
return	NN	O
ts	NN	O
.	.	O
Days	VBZ	O
+	JJ	O

"	NNP	O
days	NNS	O
ago	RB	O
"	VBP	O
;	:	O
}	)	O
if	IN	O
(	(	O
delta	JJ	O
<	VBP	O
31104000	CD	O

)	)	O
/	NN	O
/	$	O
12	CD	O
*	$	O
30	CD	O
*	$	O
24	CD	O
*	$	O
60	CD	O
*	NNP	O

60	CD	O
{	(	O
int	JJ	O
months	NNS	O
=	IN	O
Convert.ToInt32(	NNP	O
Math.Floor(	NNP	O
(	(	O
double	JJ	O
)ts	NN	O
.	.	O

Days	VBZ	O
/	RB	O
30	CD	O
)	)	O
)	)	O
;	:	O
return	VB	O
months	NNS	O
<	NNP	O
=	VBD	O
1	CD	O

?	.	O
"one	CD	O
month	NN	O
ago	RB	O
"	VBZ	O
:	:	O
months	NNS	O
+	IN	O
"	JJ	O
months	NNS	O
ago	IN	O

"	NN	O
;	:	O
}	)	O
int	NN	O
years	NNS	O
=	VBP	O
Convert.ToInt32(	NNP	O
Math.Floor(	NNP	O
(	(	O
double	JJ	O
)ts	NN	O

.	.	O
Days	VBZ	O
/	RB	O
365	CD	O
)	)	O
)	)	O
;	:	O
return	VB	O
years	NNS	O
<	NNP	O
=	VBD	O

1	CD	O
?	.	O
"one	CD	O
year	NN	O
ago	RB	O
"	IN	O
:	:	O
years	NNS	O
+	VBP	O
"	CD	O
years	NNS	O

ago	RB	O
"	VBD	O
;	:	O
Suggestions	NNP	O
?	.	O
Comments	NNS	O
?	.	O
Ways	NNS	O
to	TO	O
improve	VB	O
this	DT	O

algorithm	NN	O
?	.	O
What	WP	O
is	VBZ	O
the	DT	O
difference	NN	O
between	IN	O
Math.Floor()	NNP	O
and	CC	O
Math.Truncate()	NNP	O
in	IN	O

.	.	O
NET	NN	O
?	.	O
How	WRB	O
do	VBP	O
you	PRP	O
expose	VB	O
a	DT	O
LINQ	NNP	O
query	NN	O
as	IN	O

an	DT	O
ASMX	NNP	O
web	NN	O
service	NN	O
?	.	O
Usually	RB	O
,	,	O
from	IN	O
the	DT	O
business	NN	O
tier	NN	O

,	,	O
I	PRP	O
can	MD	O
return	VB	O
a	DT	O
typed	JJ	O
DataSet	NNP	O
or	CC	O
DataTable	NNP	O
which	WDT	O
can	MD	O

be	VB	O
serialized	VBN	O
for	IN	O
transport	NN	O
over	IN	O
ASMX	NNP	O
.	.	O
How	WRB	O
can	MD	O
I	PRP	O
do	VBP	O

the	DT	O
same	JJ	O
for	IN	O
a	DT	O
LINQ	NNP	O
query	NN	O
?	.	O
Is	VBZ	O
there	EX	O
a	DT	O
way	NN	O

to	TO	O
populate	VB	O
a	DT	O
typed	JJ	O
DataSet	NNP	O
or	CC	O
DataTable	NNP	O
via	IN	O
a	DT	O
LINQ	NNP	O
query	NN	O

?	.	O
:	:	O
public	JJ	O
static	JJ	O
MyDataTable	NNP	O
CallMySproc()	NNP	O
{	(	O
string	VBG	O
conn	NN	O
=	NN	O
...	:	O

;	:	O
MyDatabaseDataContext	NNP	O
db	VBZ	O
=	NNP	O
new	JJ	O
MyDatabaseDataContext(	NNP	B-API
conn	NN	I-API
)	)	L-API
;	:	O
MyDataTable	JJ	O
dt	NN	O

=	NNP	O
new	JJ	O
MyDataTable()	NNP	U-API
;	:	O
/	NNP	O
/	NNP	O
execute	VB	O
a	DT	O
sproc	NN	O
via	IN	O
LINQ	NNP	O

var	FW	O
query	NN	O
=	NN	O
from	IN	O
dr	NN	O
in	IN	O
db.MySproc()	NN	O
.	.	O
AsEnumerable	JJ	O
select	JJ	O
dr	NN	O

;	:	O
/	CC	O
/	VB	O
copy	NN	O
LINQ	NNP	O
query	NN	O
resultset	NN	O
into	IN	O
a	DT	O
DataTable	JJ	O
-	:	O

this	DT	O
does	VBZ	O
not	RB	O
work	VB	O
!	.	O
dt	JJ	O
=	NNP	O
query.CopyToDataTable()	NN	U-API
;	:	O
return	VB	O
dt	NN	O

;	:	O
}	)	O
How	WRB	O
can	MD	O
I	PRP	O
get	VB	O
the	DT	O
resultset	NN	O
of	IN	O
a	DT	O
LINQ	NNP	O

query	NN	O
into	IN	O
a	DT	O
DataSet	NNP	O
or	CC	O
DataTable	NNP	O
?	.	O
Alternatively	RB	O
,	,	O
is	VBZ	O
the	DT	O

LINQ	NNP	O
query	NN	O
serializeable	NN	O
so	IN	O
that	IN	O
I	PRP	O
can	MD	O
expose	VB	O
it	PRP	O
as	IN	O
an	DT	O

ASMX	NNP	O
web	NN	O
service	NN	O
?	.	O
For	IN	O
a	DT	O
table	NN	O
like	IN	O
this	DT	O
:	:	O
CREATE	NN	O

TABLE	NNP	O
binary_data	NN	O
(	(	O
id	JJ	O
INT(	NNP	O
4	CD	O
)	)	O
NOT	NNP	O
NULL	NNP	O
AUTO_INCREMENT	NNP	O
PRIMARY	NNP	O

KEY	NNP	I-API
,	,	I-API
description	NN	I-API
CHAR(	NNP	I-API
50	CD	I-API
)	)	L-API
,	,	O
bin_data	JJ	O
LONGBLOB	NNP	O
,	,	O
filename	NN	O

CHAR(	NNP	I-API
50	CD	I-API
)	)	L-API
,	,	O
filesize	VB	O
CHAR(	NNP	B-API
50	CD	I-API
)	)	L-API
,	,	O
filetype	JJ	O
CHAR(	NNP	O

50	CD	I-API
)	)	L-API
)	)	O
;	:	O
Here	RB	O
is	VBZ	O
a	DT	O
PHP	JJ	O
example	NN	O
:	:	O
<	NN	O

?php	NNP	O
/	NNP	O
/	NNP	O
store	NN	O
.	.	O
php3	CC	O
-	:	O
by	IN	O
Florian	JJ	O
Dittmer	NNP	O
<dittmer	NNP	O

@gmx	NNP	O
.	.	O
net	JJ	O
>	NN	O
/	NNP	O
/	NNP	O
Example	NNP	O
php	VBP	O
script	NN	O
to	TO	O
demonstrate	VB	O

the	DT	O
storing	NN	O
of	IN	O
binary	JJ	O
files	NNS	O
into	IN	O
/	NNP	O
/	NNP	O
an	DT	O
sql	JJ	O
database	NN	O

.	.	O
More	JJR	O
information	NN	O
can	MD	O
be	VB	O
found	VBN	O
at	IN	O
http	NN	O
:	:	O
/	JJ	O
/www	NN	O

.	.	O
phpbuilder	NN	O
.	.	O
com	NN	O
/	NN	O
?	.	O
>	JJ	O
<html	NN	O
>	NNP	O
<head	NNP	O
>	NNP	O

<title	NNP	O
>Store	VBD	O
binary	JJ	O
data	NNS	O
into	IN	O
SQL	NNP	O
Database	NNP	O
<	NNP	O
/title	NNP	O
>	NNP	O
<	NNP	O

/head	NNP	O
>	NNP	O
<body	NN	O
>	NNP	O
<	NNP	O
?php	NNP	O
/	NNP	O
/	NNP	O
Code	NNP	O
that	WDT	O
will	MD	O

be	VB	O
executed	VBN	O
if	IN	O
the	DT	O
form	NN	O
has	VBZ	O
been	VBN	O
submitted	VBN	O
:	:	O
if	IN	O
(	(	O

$submit	NN	I-API
)	)	L-API
{	(	O
/	JJ	O
/	NN	O
Connect	NNP	O
to	TO	O
the	DT	O
database	NN	O
(	(	O
you	PRP	O

may	MD	O
have	VB	O
to	TO	O
adjust	VB	O
/	NNP	O
/	NNP	O
the	DT	O
hostname	NN	O
,	,	O
username	NN	O
or	CC	O

password	NN	O
)	)	O
.	.	O
mysql_connect(	NN	B-API
"localhost	NN	I-API
"	NNP	I-API
,	,	I-API
"root	NNP	I-API
"	NNP	I-API
,	,	I-API
"password	NNP	I-API

"	NNP	I-API
)	)	L-API
;	:	O
mysql_select_db(	CC	B-API
"binary_data	NNP	I-API
"	NNP	I-API
)	)	L-API
;	:	O
$data	CC	O
=	VB	O
mysql_real_escape_string(	NN	O

fread(	NN	B-API
fopen(	NN	I-API
$form_data	NNP	I-API
,	,	I-API
"r	NNP	I-API
"	NNP	I-API
)	)	L-API
,	,	O
filesize(	JJ	B-API
$form_data	NNP	I-API
)	)	L-API

)	)	O
)	)	O
;	:	O
$result	CC	O
=	VB	O
mysql_query(	NN	O
"INSERT	NNP	O
INTO	NNP	O
binary_data	NN	O
(	(	O
description	NN	O

,	,	I-API
bin_data	NN	I-API
,	,	I-API
filename	NN	I-API
,	,	I-API
filesize	VB	I-API
,	,	I-API
filetype	NN	I-API
)	)	L-API
"	NN	O
.	.	O

"VALUES	NN	O
(	(	O
'	POS	O
$form_description	NN	O
'	''	O
,	,	O
'	''	O
$data	NNP	O
'	POS	O
,	,	O
'	''	O

$form_data_name	NN	B-API
'	''	I-API
,	,	I-API
'	''	I-API
$form_data_size	NNP	I-API
'	POS	I-API
,	,	I-API
'	''	I-API
$form_data_type	NNP	I-API
'	POS	I-API
)	)	L-API

"	NN	I-API
)	)	L-API
;	:	O
$id	CC	O
=	NNP	O
mysql_insert_id()	NN	U-API
;	:	O
print	NN	O
"	NN	O
<p	NNP	O
>This	NNP	O

file	NN	O
has	VBZ	O
the	DT	O
following	JJ	O
Database	NNP	O
ID	NNP	O
:	:	O
<b	NN	O
>	NNP	O
$id	NNP	O
<	NNP	O

/b	NNP	O
>	NNP	O
"	NNP	O
;	:	O
mysql_close()	NN	U-API
;	:	O
}	)	O
else	RB	O
{	(	O
/	JJ	O
/	NN	O

else	RB	O
show	VBP	O
the	DT	O
form	NN	O
to	TO	O
submit	VB	O
new	JJ	O
data	NNS	O
:	:	O
?	.	O
>	VB	O

<form	NN	O
method	NN	O
=	NNP	O
"post	NNP	O
"	NNP	O
action	NN	O
=	NNP	O
"	NNP	O
<	NNP	O
?php	NNP	O
echo	VBP	O

$PHP_SELF	NN	O
;	:	O
?	.	O
>	FW	O
"	FW	O
enctype	FW	O
=	FW	O
"multipart	FW	O
/form	FW	O
-	:	O
data	NNS	O

"	VBP	O
>	NNP	O
File	NNP	O
Description	NNP	O
:	:	O
<br	NN	O
>	NNP	O
<input	NNP	O
type	NN	O
=	NNP	O
"text	NNP	O

"	NNP	O
name	NN	O
=	NNP	O
"form_description	NNP	O
"	NNP	O
size	NN	O
=	NNP	O
"40	NNP	O
"	NNP	O
>	NNP	O
<input	NNP	O

type	NN	O
=	NNP	O
"hidden	NNP	O
"	NNP	O
name	NN	O
=	NNP	O
"MAX_FILE_SIZE	NNP	O
"	NNP	O
value	NN	O
=	NNP	O
"1000000	NNP	O

"	NNP	O
>	NNP	O
<br	NNP	O
>File	NNP	O
to	TO	O
upload	VB	O
/store	NN	O
in	IN	O
database	NN	O
:	:	O
<br	JJ	O

>	NNP	O
<input	NNP	O
type	NN	O
=	NN	O
"file	NNP	O
"	NNP	O
name	NN	O
=	NNP	O
"form_data	NNP	O
"	NNP	O
size	NN	O

=	NNP	O
"40	NNP	O
"	NNP	O
>	NNP	O
<p	NNP	O
>	NNP	O
<input	NNP	O
type	NN	O
=	NNP	O
"submit	NNP	O
"	NNP	O

name	NN	O
=	NNP	O
"submit	NNP	O
"	NNP	O
value	NN	O
=	NNP	O
"submit	NNP	O
"	NNP	O
>	NNP	O
<	NNP	O
/form	NNP	O

>	NNP	O
<	NNP	O
?php	NNP	O
}	)	O
?	.	O
>	JJ	O
<	NN	O
/body	NN	O
>	NNP	O
<	NNP	O
/html	NNP	O

>	NNP	O
Solutions	NNP	O
are	VBP	O
welcome	JJ	O
in	IN	O
any	DT	O
language	NN	O
.	.	O
:	:	O
-	:	O
)	)	O

I'm	NNP	O
looking	VBG	O
for	IN	O
the	DT	O
fastest	JJS	O
way	NN	O
to	TO	O
obtain	VB	O
the	DT	O
value	NN	O
of	IN	O

Ï€	NNP	O
,	,	O
as	IN	O
a	DT	O
personal	JJ	O
challenge	NN	O
.	.	O
More	RBR	O
specifically	RB	O
I'm	NNP	O
using	VBG	O

ways	NNS	O
that	WDT	O
don't	VBP	O
involve	VB	O
using	VBG	O
#defined	JJ	O
constants	NNS	O
like	IN	O
M_PI	NNP	O
,	,	O
or	CC	O

hard-coding	VBG	O
the	DT	O
number	NN	O
in	IN	O
.	.	O
The	DT	O
program	NN	O
below	IN	O
tests	VBZ	O
the	DT	O
various	JJ	O

ways	NNS	O
I	PRP	O
know	VBP	O
of	IN	O
.	.	O
The	DT	O
inline	NN	O
assembly	NN	O
version	NN	O
is	VBZ	O
,	,	O

in	IN	O
theory	NN	O
,	,	O
the	DT	O
fastest	JJS	O
option	NN	O
,	,	O
though	RB	O
clearly	RB	O
not	RB	O
portable	JJ	O

;	:	O
I've	NNP	O
included	VBD	O
it	PRP	O
as	IN	O
a	DT	O
baseline	NN	O
to	TO	O
compare	VB	O
the	DT	O
other	JJ	O

versions	NNS	O
against	IN	O
.	.	O
In	IN	O
my	PRP$	O
tests	NNS	O
,	,	O
with	IN	O
built-ins	NNS	O
,	,	O
the	DT	O

4	CD	O
*	NNP	O
atan(	RB	O
1	CD	O
)	)	O
version	NN	O
is	VBZ	O
fastest	JJS	O
on	IN	O
GCC	NNP	O
4	CD	O

.	.	O
2	CD	O
,	,	O
because	IN	O
it	PRP	O
auto-folds	VBZ	O
the	DT	O
atan(	JJ	O
1	CD	O
)	)	O
into	IN	O

a	DT	O
constant	JJ	O
.	.	O
With	IN	O
-	:	O
fno-builtin	JJ	O
specified	VBN	O
,	,	O
the	DT	O
atan2(	NN	O
0	CD	O

,	,	O
-	:	O
1	CD	O
)	)	O
version	NN	O
is	VBZ	O
fastest	JJS	O
.	.	O
Here's	NNP	O
the	DT	O
main	JJ	O

testing	NN	O
program	NN	O
(	(	O
pitimes	NNS	O
.	.	O
c	NN	O
)	)	O
:	:	O
#include	JJ	O
<math	NN	O
.	.	O

h	NN	O
>	JJ	O
#include	NN	O
<stdio	NNP	O
.	.	O
h	NN	O
>	JJ	O
#include	NN	O
<time	NNP	O
.	.	O
h	NN	O

>	JJ	O
#define	NN	O
ITERS	NNP	O
10000000	CD	O
#define	NNP	O
TESTWITH(	NNP	O
x	NNP	O
)	)	O
{	(	O
\	JJ	O
diff	NN	O

=	VBD	O
0	CD	O
.	.	O
0	CD	O
;	:	O
\	NNP	O
time1	VBZ	O
=	NNP	O
clock()	NN	U-API
;	:	O
\	CC	O

for	IN	O
(	(	O
i	JJ	O
=	VBP	O
0	CD	O
;	:	O
i	JJ	O
<	VBP	O
ITERS	NNPS	O
;	:	O
+	NNP	O

+i	NNP	I-API
)	)	L-API
\	VBP	O
diff	JJ	O
+	NNP	O
=	NNP	O
(	(	O
x	NNP	O
)	)	O
-	:	O
M_PI	NN	O

;	:	O
\	CC	O
time2	VB	O
=	NNP	O
clock()	NN	U-API
;	:	O
\	CC	B-API
printf(	VB	I-API
"	JJ	I-API
%s	NNP	I-API
\t	NNP	I-API

=	NNP	O
>	NNP	O
%e	NNP	O
,	,	O
time	NN	O
=	NNP	O
>	NNP	O
%f	NNP	O
\n	NNP	O
"	NNP	O
,	,	O

#x	NNP	I-API
,	,	I-API
diff	NN	I-API
,	,	I-API
diffclock(	NN	I-API
time2	NN	I-API
,	,	I-API
time1	NN	I-API
)	)	L-API
)	)	O
;	:	O

\	CC	O
}	)	O
static	JJ	O
inline	NN	O
double	JJ	O
diffclock(	NN	O
clock_t	NN	O
time1	NN	O
,	,	O
clock_t	VB	O
time0	NN	O

)	)	O
{	(	O
return	NN	O
(	(	O
double	JJ	O
)	)	O
(	(	O
time1	JJ	O
-	:	O
time0	NN	O
)	)	O

/	VBZ	O
CLOCKS_PER_SEC	NNP	O
;	:	O
}	)	O
int	NN	O
main()	NNS	O
{	(	O
int	NN	O
i	NN	O
;	:	O
clock_t	NN	O

time1	NN	O
,	,	O
time2	NN	O
;	:	O
double	JJ	O
diff	NN	O
;	:	O
/	CC	O
*	VB	O
Warmup	NNP	O
.	.	O

The	DT	O
atan2	JJ	O
case	NN	O
catches	NNS	O
GCC's	NNP	O
atan	IN	O
folding	NN	O
(	(	O
which	WDT	O
would	MD	O
*	VB	O

optimise	VB	O
the	DT	O
`	``	O
`4	JJ	O
*	NN	O
atan(	IN	O
1	CD	O
)	)	O
-	:	O
M_PI	NNP	O
'	POS	O

'	''	O
to	TO	O
a	DT	O
no-op	JJ	O
)	)	O
,	,	O
if	IN	O
-	:	O
fno-builtin	JJ	O
*	NN	O
is	VBZ	O

not	RB	O
used	VBN	O
.	.	O
*	JJ	O
/	JJ	O
TESTWITH(	NNP	O
4	CD	O
*	NNP	O
atan(	RB	O
1	CD	O
)	)	O

)	)	O
TESTWITH(	$	O
4	CD	O
*	NNP	O
atan2(	NN	O
1	CD	O
,	,	O
1	CD	O
)	)	O
)	)	O
#if	VBP	O

defined(	JJ	O
__GNUC__	NNP	O
)	)	O
&	CC	O
&	CC	O
(	(	O
defined(	JJ	O
__i386__	NN	O
)	)	O
|	VBZ	O
|	JJ	O

defined(	NN	B-API
__amd64__	NNP	I-API
)	)	L-API
)	)	O
extern	VBP	O
double	JJ	O
fldpi()	NN	O
;	:	O
TESTWITH(	NNP	B-API
fldpi()	NN	I-API
)	)	L-API

#endif	VBZ	O
/	JJ	O
*	NNP	O
Actual	NNP	O
tests	NNS	O
start	VBP	O
here	RB	O
.	.	O
*	JJ	O
/	JJ	O
TESTWITH(	NNP	O

atan2(	NN	O
0	CD	O
,	,	O
-	:	O
1	CD	O
)	)	O
)	)	O
TESTWITH(	NNP	O
acos(	SYM	O
-	:	O
1	CD	O

)	)	O
)	)	O
TESTWITH(	$	O
2	CD	O
*	NNP	O
asin(	RB	O
1	CD	O
)	)	O
)	)	O
TESTWITH(	$	O
4	CD	O

*	NNP	O
atan2(	NN	O
1	CD	O
,	,	O
1	CD	O
)	)	O
)	)	O
TESTWITH(	$	O
4	CD	O
*	NNP	O
atan(	RB	O

1	CD	O
)	)	O
)	)	O
return	VBP	O
0	CD	O
;	:	O
}	)	O
And	CC	O
the	DT	O
inline	NN	O
assembly	NN	O

stuff	NN	O
(	(	O
fldpi	JJ	O
.	.	O
c	NN	O
)	)	O
,	,	O
noting	VBG	O
that	IN	O
it	PRP	O
will	MD	O

only	RB	O
work	VB	O
for	IN	O
x86	NN	O
and	CC	O
x64	JJ	O
systems	NNS	O
:	:	O
double	JJ	O
fldpi()	NN	O
{	(	O

double	JJ	O
pi	NN	O
;	:	O
asm(	CC	O
"fldpi	JJ	O
"	NN	O
:	:	O
"	JJ	O
=t	NN	O
"	NNP	O
(	(	O

pi	NN	I-API
)	)	L-API
)	)	O
;	:	O
return	VB	O
pi	NN	O
;	:	O
}	)	O
And	CC	O
a	DT	O
build	JJ	O

script	NN	O
that	WDT	O
builds	VBZ	O
all	PDT	O
the	DT	O
configurations	NNS	O
I'm	NNP	O
testing	VBG	O
(	(	O
build	VB	O
.	.	O

sh	NN	I-API
)	)	L-API
:	:	O
#	#	O
!	.	O
/bin	NN	O
/sh	NNP	O
gcc	NN	O
-	:	O
O3	NNP	O
-	:	O

Wall	NNP	O
-	:	O
c	SYM	O
-	:	O
m32	NN	O
-	:	O
o	JJ	O
fldpi-32	JJ	O
.	.	O
o	JJ	O
fldpi	NN	O

.	.	O
c	VB	O
gcc	JJ	O
-	:	O
O3	NNP	O
-	:	O
Wall	NNP	O
-	:	O
c	SYM	O
-	:	O
m64	NN	O

-	:	O
o	JJ	O
fldpi-64	JJ	O
.	.	O
o	JJ	O
fldpi	NN	O
.	.	O
c	VB	O
gcc	JJ	O
-	:	O
O3	NNP	O

-	:	O
Wall	NNP	O
-	:	O
ffast-math	JJ	O
-	:	O
m32	NN	O
-	:	O
o	JJ	O
pitimes1-32	JJ	O
pitimes	NNS	O
.	.	O

c	VB	O
fldpi-32	JJ	O
.	.	O
o	NN	O
gcc	SYM	O
-	:	O
O3	NNP	O
-	:	O
Wall	NNP	O
-	:	O
m32	NN	O

-	:	O
o	JJ	O
pitimes2-32	JJ	O
pitimes	NNS	O
.	.	O
c	VB	O
fldpi-32	JJ	O
.	.	O
o	SYM	O
-	:	O
lm	NN	O

gcc	SYM	O
-	:	O
O3	NNP	O
-	:	O
Wall	NNP	O
-	:	O
fno-builtin	JJ	O
-	:	O
m32	NN	O
-	:	O
o	JJ	O

pitimes3-32	JJ	O
pitimes	NNS	O
.	.	O
c	VB	O
fldpi-32	JJ	O
.	.	O
o	SYM	O
-	:	O
lm	NN	O
gcc	SYM	O
-	:	O

O3	NNP	O
-	:	O
Wall	NNP	O
-	:	O
ffast-math	JJ	O
-	:	O
m64	NN	O
-	:	O
o	JJ	O
pitimes1-64	JJ	O
pitimes	NNS	O

.	.	O
c	VB	O
fldpi-64	JJ	O
.	.	O
o	SYM	O
-	:	O
lm	NN	O
gcc	SYM	O
-	:	O
O3	NNP	O
-	:	O

Wall	NNP	O
-	:	O
m64	NN	O
-	:	O
o	JJ	O
pitimes2-64	JJ	O
pitimes	NNS	O
.	.	O
c	VB	O
fldpi-64	JJ	O
.	.	O

o	SYM	O
-	:	O
lm	NN	O
gcc	SYM	O
-	:	O
O3	NNP	O
-	:	O
Wall	NNP	O
-	:	O
fno-builtin	JJ	O
-	:	O

m64	NN	O
-	:	O
o	JJ	O
pitimes3-64	JJ	O
pitimes	NNS	O
.	.	O
c	VB	O
fldpi-64	JJ	O
.	.	O
o	SYM	O
-	:	O

lm	JJ	O
Apart	NNP	O
from	IN	O
testing	VBG	O
between	IN	O
various	JJ	O
compiler	NN	O
flags	NNS	O
(	(	O
I've	NNP	O
compared	VBN	O

32-bit	CD	O
against	IN	O
64-bit	CD	O
too	RB	O
,	,	O
because	IN	O
the	DT	O
optimisations	NNS	O
are	VBP	O
different	JJ	O
)	)	O

,	,	O
I've	NNP	O
also	RB	O
tried	VBD	O
switching	VBG	O
the	DT	O
order	NN	O
of	IN	O
the	DT	O
tests	NNS	O
around	IN	O

.	.	O
The	DT	O
atan2(	NN	O
0	CD	O
,	,	O
-	:	O
1	CD	O
)	)	O
version	NN	O
still	RB	O
comes	VBZ	O

out	RP	O
top	JJ	O
every	DT	O
time	NN	O
,	,	O
though	RB	O
.	.	O
Many	JJ	O
years	NNS	O
ago	RB	O
,	,	O

to	TO	O
provide	VB	O
an	DT	O
age	NN	O
calculator	NN	O
gimmick	NN	O
on	IN	O
my	PRP$	O
website	NN	O
,	,	O
I	PRP	O

wrote	VBD	O
a	DT	U-API
function	NN	O
to	TO	O
calculate	VB	O
age	NN	O
to	TO	O
a	DT	O
fraction	NN	O
.	.	O
This	DT	O

is	VBZ	O
a	DT	O
quick	JJ	O
port	NN	O
of	IN	O
that	DT	U-API
function	NN	O
to	TO	O
C	NNP	O
#	#	O
(	(	O

from	IN	O
the	DT	O
PHP	NNP	O
version	NN	O
)	)	O
.	.	O
I'm	NNP	O
afraid	VBD	O
I	PRP	O
haven't	VBP	O
been	VBN	O

able	JJ	O
to	TO	O
test	VB	O
the	DT	O
C	NNP	O
#	#	O
version	NN	O
,	,	O
but	CC	O
hope	VBP	O
you	PRP	O

enjoy	VBP	O
all	PDT	O
the	DT	O
same	JJ	O
!	.	O
(	(	O
Admittedly	RB	O
this	DT	O
is	VBZ	O
a	DT	O
bit	NN	O

gimmicky	JJ	O
for	IN	O
the	DT	O
purposes	NNS	O
of	IN	O
showing	VBG	O
user	JJ	O
profiles	NNS	O
on	IN	O
Stack	NNP	O
Overflow	NNP	O

,	,	O
but	CC	O
maybe	RB	O
readers	NNS	O
will	MD	O
find	VB	O
some	DT	O
use	NN	O
for	IN	O
it	PRP	O
.	.	O

:	:	O
-	:	O
)	)	O
)	)	O
double	JJ	O
AgeDiff(	NNP	O
DateTime	NNP	O
date1	NN	O
,	,	O
DateTime	NNP	O
date2	NN	O

)	)	O
{	(	O
double	JJ	O
years	NNS	O
=	VBP	O
date2	NN	O
.	.	O
Year	SYM	O
-	:	O
date1	NN	O
.	.	O

Year	NN	O
;	:	O
/	CC	O
*	VB	O
*	NN	O
If	IN	O
date2	NN	O
and	CC	O
date1	NN	O
+	NNP	O
round(	NN	O

date2	NN	O
-	:	O
date1	NN	O
)	)	O
are	VBP	O
on	IN	O
different	JJ	O
sides	NNS	O
*	NN	O
of	IN	O
29	CD	O

February	NNP	O
,	,	O
then	RB	O
our	PRP$	O
partial	JJ	O
year	NN	O
is	VBZ	O
considered	VBN	O
to	TO	O
have	VB	O
366	CD	O

*	NNP	O
days	NNS	O
total	NN	O
,	,	O
otherwise	RB	O
it's	JJ	O
365	CD	O
.	.	O
Note	NN	O
that	IN	O
59	CD	O

is	VBZ	O
the	DT	O
day	NN	O
number	NN	O
*	NNP	O
of	IN	O
29	CD	O
Feb	NNP	O
.	.	O
*	CC	O
/	JJ	O

double	JJ	O
fraction	NN	O
=	VBD	O
365	CD	O
+	NNP	O
(	(	O
DateTime.IsLeapYear(	NNP	O
date2	NN	O
.	.	O
Year	NN	O
)	)	O

&	CC	O
&	CC	O
date2	NN	O
.	.	O
DayOfYear	NNP	O
>	NNP	O
=	NNP	O
59	NNP	O
&	CC	O
&	CC	O
(	(	O

date1	NN	O
.	.	O
DayOfYear	NNP	O
<	VBD	O
59	CD	O
|	NNP	O
|	NNP	O
date1	NN	O
.	.	O
DayOfYear	NNP	O
>	JJ	O

date2	NN	O
.	.	O
DayOfYear	NNP	O
)	)	O
?	.	O
1	CD	O
:	:	O
0	CD	O
)	)	O
;	:	O
/	CC	O

*	VB	O
*	VBZ	O
The	DT	O
only	JJ	O
really	RB	O
nontrivial	JJ	O
case	NN	O
is	VBZ	O
if	IN	O
date1	NN	O
is	VBZ	O

in	IN	O
a	DT	O
leap	JJ	O
year	NN	O
,	,	O
*	NNP	O
and	CC	O
date2	NN	O
is	VBZ	O
not	RB	O
.	.	O

So	RB	O
let's	JJ	O
handle	VBP	O
the	DT	O
others	NNS	O
first	RB	O
.	.	O
*	VB	O
/	JJ	O
if	IN	O
(	(	O

DateTime.IsLeapYear(	NNP	B-API
date2	NN	I-API
.	.	I-API
Year	NN	I-API
)	)	L-API
=	NN	O
=	NNP	O
DateTime.IsLeapYear(	NNP	O
date1	NN	O
.	.	O
Year	NNP	O

)	)	O
)	)	O
return	VBP	O
years	NNS	O
+	NNP	O
(	(	O
date2	NN	O
.	.	O
DayOfYear	NNP	O
-	:	O
date1	NN	O

.	.	I-API
DayOfYear	NNP	I-API
)	)	L-API
/	NNP	O
fraction	NN	O
;	:	O
/	CC	O
*	VB	O
*	NN	O
If	IN	O
date2	NN	O

is	VBZ	O
in	IN	O
a	DT	O
leap	JJ	O
year	NN	O
,	,	O
but	CC	O
date1	NN	O
is	VBZ	O
not	RB	O
and	CC	O

is	VBZ	O
March	NNP	O
or	CC	O
*	NNP	O
beyond	IN	O
,	,	O
shift	VB	O
up	RP	O
by	IN	O
a	DT	O
day	NN	O

.	.	O
*	VB	O
/	JJ	O
if	IN	O
(	(	O
DateTime.IsLeapYear(	NNP	B-API
date2	NN	I-API
.	.	I-API
Year	NNP	I-API
)	)	L-API
)	)	O

{	(	O
return	NN	O
years	NNS	O
+	NNP	O
(	(	O
date2	NN	O
.	.	O
DayOfYear	NNP	O
-	:	O
date1	NN	O
.	.	O

DayOfYear	NNP	O
-	:	O
(	(	O
date1	NN	O
.	.	O
DayOfYear	NNP	O
>	NNP	O
=	VBD	O
59	CD	O
?	.	O
1	CD	O

:	:	O
0	CD	O
)	)	O
)	)	O
/	$	O
fraction	NN	O
;	:	O
}	)	O
/	FW	O
*	FW	O
*	FW	O

If	IN	O
date1	NN	O
is	VBZ	O
not	RB	O
on	IN	O
29	CD	O
February	NNP	O
,	,	O
shift	VB	O
down	RP	O
date1	NN	O

by	IN	O
a	DT	O
day	NN	O
if	IN	O
*	VBN	O
March	NNP	O
or	CC	O
later	RB	O
.	.	O
Proceed	VB	O
normally	RB	O

.	.	O
*	VB	O
/	JJ	O
if	IN	O
(	(	O
date1	NN	O
.	.	O
DayOfYear	JJ	O
!	.	O
=	$	O
59	CD	O

)	)	O
{	(	O
return	NN	O
years	NNS	O
+	NNP	O
(	(	O
date2	NN	O
.	.	O
DayOfYear	NNP	O
-	:	O
date1	NN	O

.	.	O
DayOfYear	NNP	O
+	NNP	O
(	(	O
date1	NN	O
.	.	O
DayOfYear	NNP	O
>	VBD	O
59	CD	O
?	.	O
1	CD	O

:	:	O
0	CD	O
)	)	O
)	)	O
/	$	O
fraction	NN	O
;	:	O
}	)	O
/	FW	O
*	JJ	O
*	NNP	O

Okay	NNP	O
,	,	O
here	RB	O
date1	NN	O
is	VBZ	O
on	IN	O
29	CD	O
February	NNP	O
,	,	O
and	CC	O
date2	NN	O

is	VBZ	O
not	RB	O
on	IN	O
a	DT	O
leap	NN	O
*	JJ	O
year	NN	O
.	.	O
What	WP	O
to	TO	O
do	VB	O

now	RB	O
?	.	O
On	IN	O
28	CD	O
Feb	NNP	O
in	IN	O
date2's	JJ	O
year	NN	O
,	,	O
the	DT	O
`	``	O

`age	NN	O
'	''	O
'	POS	O
*	NNS	O
should	MD	O
be	VB	O
just	RB	O
shy	NN	O
of	IN	O
a	DT	O
whole	JJ	O

number	NN	O
,	,	O
and	CC	O
on	IN	O
1	CD	O
Mar	NNP	O
should	MD	O
be	VB	O
*	JJ	O
just	RB	O
over	IN	O

.	.	O
Perhaps	RB	O
the	DT	O
easiest	JJS	O
way	NN	O
is	VBZ	O
to	TO	O
a	DT	O
point	NN	O
halfway	NN	O
*	NN	O

between	IN	O
those	DT	O
two	CD	O
:	:	O
58	CD	O
.	.	O
5	CD	O
.	.	O
*	JJ	O
/	JJ	O
return	NN	O

years	NNS	O
+	NNP	O
(	(	O
date2	NN	O
.	.	O
DayOfYear	NNP	O
-	:	O
58	CD	O
.	.	O
5	CD	O
)	)	O

/	NN	O
fraction	NN	O
;	:	O
}	)	O
The	DT	O
best	JJS	O
way	NN	O
that	IN	O
I	PRP	O
know	VBP	O
of	IN	O

because	IN	O
of	IN	O
leap	JJ	O
years	NNS	O
and	CC	O
everything	NN	O
is	VBZ	O
:	:	O
DateTime	JJ	O
birthDate	NN	O
=	NNP	O

new	JJ	O
DateTime(	NNP	B-API
2000	CD	I-API
,	,	I-API
3	CD	I-API
,	,	I-API
1	CD	I-API
)	)	L-API
;int	NN	O
age	NN	O
=	NNP	O

(	(	O
int	JJ	O
)Math	NN	O
.	.	O
Floor(	NNP	O
(	(	O
DateTime	NNP	O
.	.	O
Now	RB	O
-	:	O
birthDate	NN	O

)	)	O
.	.	O
TotalDays	NNP	O
/	VBD	O
365	CD	O
.	.	O
25D	CD	O
)	)	O
;	:	O
Hope	NNP	O
this	DT	O

helps	VBZ	O
.	.	O
@jeff	VB	O
IMHO	NNP	O
yours	NNPS	O
seems	VBZ	O
a	DT	O
little	JJ	O
long	JJ	O
.	.	O
However	RB	O

it	PRP	O
does	VBZ	O
seem	VB	O
a	DT	O
little	RB	O
more	RBR	O
robust	JJ	O
with	IN	O
support	NN	O
for	IN	O
"yesterday	JJ	O

"	NNP	O
and	CC	O
"years	NNP	O
"	NNP	O
.	.	O
But	CC	O
in	IN	O
my	PRP$	O
experience	NN	O
when	WRB	O
this	DT	O

is	VBZ	O
used	VBN	O
the	DT	O
person	NN	O
is	VBZ	O
most	RBS	O
likely	JJ	O
to	TO	O
view	VB	O
the	DT	O
content	NN	O

in	IN	O
the	DT	O
first	JJ	O
30	CD	O
days	NNS	O
.	.	O
It	PRP	O
is	VBZ	O
only	RB	O
the	DT	O
really	RB	O

hardcore	JJ	O
people	NNS	O
that	IN	O
come	VBP	O
after	IN	O
that	DT	O
.	.	O
So	IN	O
that	DT	O
is	VBZ	O
why	WRB	O

I	PRP	O
usually	RB	O
elect	VBP	O
to	TO	O
keep	VB	O
this	DT	O
short	JJ	O
and	CC	O
simple	JJ	O
.	.	O
This	DT	O

is	VBZ	O
the	DT	O
method	NN	O
I	PRP	O
am	VBP	O
currently	RB	O
using	VBG	O
on	IN	O
one	CD	O
of	IN	O
my	PRP$	O

websites	NNS	O
.	.	O
This	DT	O
only	JJ	O
returns	VBZ	O
a	DT	O
relative	JJ	O
day	NN	O
,	,	O
hour	NN	O
,	,	O

time	NN	O
.	.	O
And	CC	O
then	RB	O
the	DT	O
user	NN	O
has	VBZ	O
to	TO	O
slap	VB	O
on	IN	O
"ago	JJ	O

"	NN	O
in	IN	O
the	DT	O
output	NN	O
.	.	O
public	JJ	O
static	JJ	O
string	NN	O
ToLongString(	NNP	O
this	DT	O
TimeSpan	NNP	O

time	NN	I-API
)	)	L-API
{	(	O
string	VBG	O
output	NN	O
=	NNP	O
String	NNP	O
.	.	O
Empty	NNP	O
;	:	O
if	IN	O

(	(	O
time	NN	O
.	.	O
Days	VBZ	O
>	RB	O
0	CD	O
)	)	O
output	NN	O
+	NNP	O
=	NNP	O
time	NN	O

.	.	O
Days	NNS	O
+	VBP	O
"	JJ	O
days	NNS	O
"	VBP	O
;	:	O
if	IN	O
((	JJ	O
time	NN	O
.	.	O

Days	NNS	O
=	VBP	O
=	JJ	O
0	CD	O
|	JJ	O
|	JJ	O
time	NN	O
.	.	O
Days	NNS	O
=	VBP	O
=	JJ	O

1	CD	O
)	)	O
&	CC	O
&	CC	O
time	NN	O
.	.	O
Hours	NNP	O
>	NNP	O
0	CD	O
)	)	O
output	NN	O

+	NNP	O
=	NNP	O
time	NN	O
.	.	O
Hours	NNP	O
+	NNP	O
"	NNP	O
hr	NN	O
"	NN	O
;	:	O
if	IN	O

(	(	O
time	NN	O
.	.	O
Days	NNS	O
=	VBP	O
=	JJ	O
0	CD	O
&	CC	O
&	CC	O
time	NN	O
.	.	O

Minutes	NNS	O
>	VBP	O
0	CD	O
)	)	O
output	NN	O
+	NNP	O
=	NNP	O
time	NN	O
.	.	O
Minutes	NNS	O
+	VBP	O

"	JJ	O
min	NN	O
"	NN	O
;	:	O
if	IN	O
(	(	O
output	NN	O
.	.	O
Length	NNP	O
=	NNP	O
=	NNP	O

0	CD	I-API
)	)	L-API
output	NN	O
+	NNP	O
=	NNP	O
time	NN	O
.	.	O
Seconds	NNS	O
+	JJ	O
"	NNP	O
sec	NN	O

"	NN	O
;	:	O
return	VB	O
output.Trim()	NN	O
;	:	O
}	)	O
I've	NNP	O
had	VBD	O
no	DT	O
trouble	NN	O
using	VBG	O

the	DT	O
BSD	NNP	O
sockets	NNS	O
API	NNP	O
in	IN	O
C	NNP	O
+	NNP	O
+	NNP	O
,	,	O
in	IN	O
GNU	NNP	O

/Linux	NNP	O
.	.	O
Here's	NNP	O
the	DT	O
sample	JJ	O
program	NN	O
I	PRP	O
used	VBD	O
:	:	O
#include	NN	O
<sys	NN	O

/socket	NN	O
.	.	O
h	NN	O
>intmain	NNP	O
(	(	O
)	)	O
{	(	O
return	JJ	O
AF_INET	NNP	O
;	:	O
}	)	O

So	IN	O
my	PRP$	O
take	NN	O
on	IN	O
this	DT	O
is	VBZ	O
that	IN	O
z	NN	O
/OS	NN	O
is	VBZ	O
probably	RB	O

the	DT	O
complicating	NN	O
factor	NN	O
here	RB	O
,	,	O
however	RB	O
,	,	O
because	IN	O
I've	NNP	O
never	RB	O
used	VBD	O

z	NN	O
/OS	NN	O
before	IN	O
,	,	O
much	RB	O
less	JJR	O
programmed	VBN	O
in	IN	O
it	PRP	O
,	,	O
I	PRP	O

can't	VBP	O
say	VB	O
this	DT	O
definitively	RB	O
.	.	O
:	:	O
-	:	O
P	VB	O
How	WRB	O
do	VB	O
I	PRP	O

forcefully	RB	O
unload	VBP	O
a	DT	O
ByteArray	NNP	O
from	IN	O
memory	NN	O
in	IN	O
ActionScript	NNP	O
3	CD	O
?	.	O
I	PRP	O

have	VBP	O
tried	VBN	O
(	(	O
without	IN	O
success	NN	O
)	)	O
:	:	O
byteArray	NN	O
.	.	O
length	NN	O
=	VBD	O

0	CD	O
;	:	O
byteArray	NN	O
=	VBD	O
new	JJ	O
ByteArray()	NNP	U-API
;	:	O
And	CC	O
for	IN	O
(	(	O
var	NN	O

i	NN	O
:int	VBP	O
=0	NN	O
;	:	O
i	CC	O
<	VBP	O
byteArray	NN	O
.	.	O
length	NN	O
;	:	O
i	CC	O

+	VBP	O
+	NNP	O
)	)	O
{	(	O
byteArray	NN	O
[i	NNP	O
]	NNP	O
=	NNP	O
null	NN	U-API
;	:	O
}	)	O

How	WRB	O
can	MD	O
I	PRP	O
monitor	VB	O
an	DT	O
SQL	NNP	O
Server	NNP	O
database	NN	O
for	IN	O
changes	NNS	O
to	TO	O

a	DT	O
table	NN	O
without	IN	O
using	VBG	O
triggers	NNS	O
or	CC	O
modifying	VBG	O
the	DT	O
structure	NN	O
of	IN	O
the	DT	O

database	NN	O
in	IN	O
any	DT	O
way	NN	O
?	.	O
My	PRP$	O
preferred	JJ	O
programming	NN	O
environment	NN	O
is	VBZ	O
.	.	O

NET	JJ	O
and	CC	O
C	NNP	O
#	#	O
.	.	O
I'd	NNP	O
like	IN	O
to	TO	O
be	VB	O
able	JJ	O
to	TO	O

support	VB	O
any	DT	O
SQL	NNP	O
Server	NNP	O
2000	CD	O
SP4	NNP	O
or	CC	O
newer	JJR	O
.	.	O
My	PRP$	O
application	NN	O

is	VBZ	O
a	DT	O
bolt-on	JJ	O
data	NN	O
visualization	NN	O
for	IN	O
another	DT	O
company's	JJ	O
product	NN	O
.	.	O
Our	PRP$	O

customer	NN	O
base	NN	O
is	VBZ	O
in	IN	O
the	DT	O
thousands	NNS	O
,	,	O
so	IN	O
I	PRP	O
don't	VBP	O
want	VBP	O

to	TO	O
have	VB	O
to	TO	O
put	VB	O
in	IN	O
requirements	NNS	O
that	IN	O
we	PRP	O
modify	VBP	O
the	DT	O
third-party	JJ	O

vendor's	NN	O
table	NN	O
at	IN	O
every	DT	O
installation	NN	O
.	.	O
By	IN	O
"changes	NNS	O
to	TO	O
a	DT	O
table	JJ	O

"	NN	O
I	PRP	O
mean	VBP	O
changes	NNS	O
to	TO	O
table	VB	O
data	NNS	O
,	,	O
not	RB	O
changes	NNS	O
to	TO	O

table	JJ	O
structure	NN	O
.	.	O
Ultimately	RB	O
,	,	O
I	PRP	O
would	MD	O
like	VB	O
the	DT	O
change	NN	O
to	TO	O

trigger	VB	O
an	DT	O
event	NN	O
in	IN	O
my	PRP$	O
application	NN	O
,	,	O
instead	RB	O
of	IN	O
having	VBG	O
to	TO	O

check	VB	O
for	IN	O
changes	NNS	O
at	IN	O
an	DT	O
interval	NN	O
.	.	O
The	DT	O
best	JJS	O
course	NN	O
of	IN	O

action	NN	O
given	VBN	O
my	PRP$	O
requirements	NNS	O
(	(	O
no	DT	O
triggers	NNS	O
or	CC	O
schema	NN	O
modification	NN	O
,	,	O

SQL	NNP	O
Server	NNP	O
2000	CD	O
and	CC	O
2005	CD	O
)	)	O
seems	VBZ	O
to	TO	O
be	VB	O
to	TO	O
use	VB	O

the	DT	O
BINARY_CHECKSUM	NNP	U-API
function	NN	O
in	IN	O
T-SQL	NNP	O
.	.	O
The	DT	O
way	NN	O
I	PRP	O
plan	VBP	O
to	TO	O

implement	VB	O
is	VBZ	O
this	DT	O
:	:	O
Every	DT	O
X	NN	O
seconds	VBZ	O
run	VBP	O
the	DT	O
following	JJ	O
query	NN	O

:	:	O
SELECT	NNP	O
CHECKSUM_AGG(	NNP	B-API
BINARY_CHECKSUM(	NNP	I-API
*	NNP	I-API
)	)	L-API
)	)	O
FROM	NNP	O
sample_table	JJ	O
WITH	NNP	O
(	(	O

NOLOCK	NNP	I-API
)	)	L-API
;	:	O
and	CC	O
compare	VB	O
that	DT	O
against	IN	O
the	DT	O
stored	JJ	O
value	NN	O
.	.	O

If	IN	O
the	DT	O
value	NN	O
has	VBZ	O
changed	VBN	O
,	,	O
go	VBP	O
through	IN	O
the	DT	O
table	NN	O
row	NN	O

by	IN	O
row	NN	O
using	VBG	O
the	DT	O
query	NN	O
select	NN	B-API
row_id	NN	I-API
,	,	I-API
BINARY_CHECKSUM(	NNP	I-API
*	NNP	I-API
)	)	L-API

from	IN	O
sample_table	JJ	O
WITH	NNP	O
(	(	O
NOLOCK	NNP	O
)	)	O
;	:	O
and	CC	O
compare	VB	O
the	DT	O
returned	JJ	O

checksums	NNS	O
against	IN	O
stored	VBN	O
values	NNS	O
.	.	O
Sure	JJ	O
I	PRP	O
can	MD	O
post	VB	O
a	DT	O
test	NN	O

app	NN	O
.	.	O
#include	VB	O
<sys	JJ	O
/socket	NN	O
.	.	O
h	JJ	O
>int	NN	O
main()	NN	O
{	(	O
return	JJ	O

AF_INET	NNP	O
;	:	O
}	)	O
Compile	NNP	O
/Link	NNP	O
Output	NNP	O
:	:	O
cxx	NN	O
-	:	O
Wc	NNP	O
,	,	O

xplink	NNP	O
-	:	O
Wl	NNP	O
,	,	O
xplink	NNP	O
-	:	O
o	NN	O
inet_test	JJ	O
inet	NN	O
.	.	O
C	NNP	O

"	NNP	O
.	.	O
/inet	NN	O
.	.	O
C	NNP	O
"	NNP	O
,	,	O
line	NN	O
5	CD	O
.	.	O
16	CD	O

:	:	O
CCN5274	NNP	O
(	(	O
S	NNP	O
)	)	O
The	DT	O
name	NN	O
lookup	NN	O
for	IN	O
"AF_INET	NNP	O
"	NNP	O

did	VBD	O
not	RB	O
find	VB	O
a	DT	O
declaration	NN	O
.	.	O
CCN0797(	NNP	O
I	PRP	O
)	)	O
Compilation	NN	O
failed	VBD	O

for	IN	O
file	NN	O
.	.	O
/inet	NN	O
.	.	O
C	NNP	O
.	.	O
Object	NNP	O
file	NN	O
not	RB	O
created	VBN	O

.	.	O
A	DT	O
check	NN	O
of	IN	O
sys	JJ	O
/sockets	NNS	O
.	.	O
h	NN	O
does	VBZ	O
include	VB	O
the	DT	O

definition	NN	O
I	PRP	O
need	VBP	O
,	,	O
and	CC	O
as	RB	O
far	RB	O
as	IN	O
I	PRP	O
can	MD	O
tell	VB	O

,	,	O
it	PRP	O
is	VBZ	O
not	RB	O
being	VBG	O
blocked	VBN	O
by	IN	O
any	DT	O
#ifdef	JJ	O
statements	NNS	O
.	.	O

I	PRP	O
have	VBP	O
however	RB	O
noticed	VBN	O
it	PRP	O
contains	VBZ	O
a	DT	O
the	DT	O
following	JJ	O
:	:	O
#ifdef	JJ	O

__cplusplus	CC	O
extern	JJ	O
"C	NNP	O
"	NNP	O
{	(	O
#endif	NNP	O
which	WDT	O
encapsulates	VBZ	O
basically	RB	O
the	DT	O
whole	JJ	O

file	NN	O
.	.	O
Not	RB	O
sure	JJ	O
if	IN	O
it	PRP	O
matters	VBZ	O
.	.	O
Consider	VB	O
using	VBG	O
a	DT	O

ManualResetEvent	NN	O
to	TO	O
block	VB	O
the	DT	O
main	JJ	O
thread	NN	O
at	IN	O
the	DT	O
end	NN	O
of	IN	O
its	PRP$	O

processing	NN	O
,	,	O
and	CC	O
call	VB	O
Reset()	NNP	O
on	IN	O
it	PRP	O
once	RB	O
the	DT	O
timer's	NN	O
processing	NN	O

has	VBZ	O
finished	VBN	O
.	.	O
If	IN	O
this	DT	O
is	VBZ	O
something	NN	O
that	WDT	O
needs	VBZ	O
to	TO	O
run	VB	O

constantly	RB	O
,	,	O
consider	VB	O
moving	VBG	O
this	DT	O
into	IN	O
a	DT	O
service	NN	O
process	NN	O
instead	RB	O
of	IN	O

a	DT	O
console	JJ	O
app	NN	O
.	.	O
You	PRP	O
can	MD	O
use	VB	O
something	NN	O
like	IN	O
Console.ReadLine()	NNP	O
to	TO	O

block	VB	O
the	DT	O
main	JJ	O
thread	NN	O
,	,	O
so	IN	O
other	JJ	O
background	NN	O
threads	NNS	O
(	(	O
like	IN	O

timer	NN	O
threads	NNS	O
)	)	O
will	MD	O
still	RB	O
work	VB	O
.	.	O
You	PRP	O
may	MD	O
also	RB	O
use	VB	O

an	DT	O
AutoResetEvent	NN	O
to	TO	O
block	VB	O
the	DT	O
execution	NN	O
,	,	O
then	RB	O
(	(	O
when	WRB	O
you	PRP	O

need	VBP	O
to	TO	O
)	)	O
you	PRP	O
can	MD	O
call	VB	O
Set()	NNP	O
method	NN	O
on	IN	O
that	DT	O
AutoResetEvent	NNP	O

object	NN	O
to	TO	O
release	VB	O
the	DT	O
main	JJ	O
thread	NN	O
.	.	O
Also	RB	O
ensure	VB	O
that	IN	O
your	PRP$	O

reference	NN	O
to	TO	O
Timer	NNP	O
object	NN	O
doesn't	NN	O
go	VB	O
out	IN	O
of	IN	O
scope	NN	O
and	CC	O
garbage	NN	O

collected	VBN	O
.	.	O
Have	VBP	O
a	DT	O
look	NN	O
at	IN	O
this	DT	O
article	NN	O
http	NN	O
:	:	O
/	JJ	O

/www	NN	O
.	.	O
gskinner	NN	O
.	.	O
com	NN	O
/blog	NN	O
/archives	VBZ	O
/2006	NNP	O
/06	NNP	O
/as3_resource_ma	NNP	O
.	.	O

html	NN	O
IANA	NNP	O
actionscript	NN	O
programmer	NN	O
,	,	O
however	RB	O
the	DT	O
feeling	NN	O
I'm	NNP	O
getting	VBG	O
is	VBZ	O

that	IN	O
,	,	O
because	IN	O
the	DT	O
garbage	NN	O
collector	NN	O
might	MD	O
not	RB	O
run	VB	O
when	WRB	O
you	PRP	O

want	VBP	O
it	PRP	O
to	TO	O
.	.	O
Hence	NNP	O
http	NN	O
:	:	O
/	JJ	O
/www	NN	O
.	.	O
craftymind	NN	O

.	.	O
com	NN	O
/2008	JJ	O
/04	NNP	O
/09	NNP	O
/kick	NNP	O
-	:	O
starting-the-garbage-collector-in-actionscript-3-with-air	JJ	O
/	NNS	O
So	RB	O
I'd	NNP	O

recommend	VB	O
trying	VBG	O
out	RP	O
their	PRP$	O
collection	NN	O
code	NN	O
and	CC	O
see	VB	O
if	IN	O
it	PRP	O
helps	VBZ	O

private	JJ	O
var	NN	O
gcCount	NN	O
:int	NN	O
;private	NNP	U-API
function	NN	O
startGCCycle()	NN	O
:void	NNP	O
{	(	O
gcCount	NN	O
=	RB	O

0	CD	O
;	:	O
addEventListener(	JJ	B-API
Event	NNP	I-API
.	.	I-API
ENTER_FRAME	NNP	I-API
,	,	I-API
doGC	NN	I-API
)	)	L-API
;	:	O
}private	JJ	B-API

function	NN	O
doGC(	NN	B-API
evt	FW	I-API
:Event	NN	I-API
)	)	L-API
:void	FW	O
{	(	O
flash.system.System.gc()	NN	U-API
;	:	O
if(	CC	O
+	NNP	O

+gcCount	NNP	O
>	NNP	O
1	CD	O
)	)	O
{	(	O
removeEventListener(	JJ	O
Event	NNP	O
.	.	O
ENTER_FRAME	NNP	O
,	,	O
doGC	NN	O

)	)	L-API
;	:	O
setTimeout(	JJ	B-API
lastGC	NN	I-API
,	,	I-API
40	CD	I-API
)	)	L-API
;	:	O
}	)	O
}private	VBP	U-API
function	NN	O

lastGC()	NN	O
:void	NNP	O
{	(	O
flash.system.System.gc()	NN	U-API
;	:	O
}	)	O
(	(	O
I'm	NNP	O
not	RB	O
positive	JJ	O
about	IN	O

this	DT	O
,	,	O
but	CC	O
...	:	O
)	)	O
AS3	VBP	O
uses	VBZ	O
a	DT	O
non-deterministic	JJ	O
garbage	NN	O
collection	NN	O

.	.	O
Which	JJ	O
means	VBZ	O
that	IN	O
unreferenced	JJ	O
memory	NN	O
will	MD	O
be	VB	O
freed	VBN	O
up	RP	O
whenever	WRB	O

the	DT	O
runtime	NN	O
feels	NNS	O
like	IN	O
it	PRP	O
(	(	O
typically	RB	O
not	RB	O
unless	IN	O
there's	VB	O
a	DT	O

reason	NN	O
to	TO	O
run	VB	O
,	,	O
since	IN	O
it's	NN	O
an	DT	O
expensive	JJ	O
operation	NN	O
to	TO	O
execute	VB	O

)	)	O
.	.	O
This	DT	O
is	VBZ	O
the	DT	O
same	JJ	O
approach	NN	O
used	VBN	O
by	IN	O
most	JJS	O
modern	JJ	O

garbage	NN	O
collected	VBN	O
languages	NNS	O
(	(	O
like	IN	O
C	NNP	O
#	#	O
and	CC	O
Java	NNP	O
as	RB	O
well	RB	O

)	)	O
.	.	O
Assuming	VBG	O
there	EX	O
are	VBP	O
no	DT	O
other	JJ	O
references	NNS	O
to	TO	O
the	DT	O
memory	NN	O

pointed	VBD	O
to	TO	O
by	IN	O
byteArray	NN	O
or	CC	O
the	DT	O
items	NNS	O
within	IN	O
the	DT	O
array	NN	O
itself	PRP	O

,	,	O
the	DT	O
memory	NN	O
will	MD	O
be	VB	O
freed	VBN	O
at	IN	O
some	DT	O
point	NN	O
after	IN	O
you	PRP	O

exit	VBP	O
the	DT	O
scope	NN	O
where	WRB	O
byteArray	NN	O
is	VBZ	O
declared	VBN	O
.	.	O
You	PRP	O
can	MD	O
force	VB	O

a	DT	O
garbage	NN	O
collection	NN	O
,	,	O
though	IN	O
you	PRP	O
really	RB	O
shouldn't	VB	O
.	.	O
If	IN	O
you	PRP	O

do	VBP	O
,	,	O
do	VB	O
it	PRP	O
only	RB	O
for	IN	O
testing	VBG	O
...	:	O
if	IN	O
you	PRP	O
do	VBP	O

it	PRP	O
in	IN	O
production	NN	O
,	,	O
you'll	JJ	O
hurt	VBD	O
performance	NN	O
much	RB	O
more	JJR	O
than	IN	O
help	NN	O

it	PRP	O
.	.	O
To	TO	O
force	VB	O
a	DT	O
GC	NNP	O
,	,	O
try	NN	O
(	(	O
yes	UH	O
,	,	O

twice	RB	I-API
)	)	L-API
:	:	O
flash.system.System.gc()	NN	O
;	:	O
flash.system.System.gc()	CC	O
;	:	O
You	PRP	O
can	MD	O
read	VB	O
more	JJR	O

here	RB	O
.	.	O
Give	VB	O
your	PRP$	O
submit	NN	O
buttons	NNS	O
same	JJ	O
name	NN	O
like	IN	O
this	DT	O
:	:	O

<input	NN	O
type	NN	O
=	NNP	O
"submit	NNP	O
"	NNP	O
name	NN	O
=	NNP	O
"submitButton	NNP	O
"	NNP	O
value	NN	O
=	NNP	O

"Previous	JJ	O
Page	NNP	O
"	NNP	O
/	NNP	O
>	NNP	O
<input	NNP	O
type	NN	O
=	NNP	O
"submit	NNP	O
"	NNP	O
name	NN	O

=	NNP	O
"submitButton	NNP	O
"	NNP	O
value	NN	O
=	NNP	O
"Next	NNP	O
Page	NNP	O
"	NNP	O
/	NNP	O
>	NN	O
When	WRB	O

the	DT	O
user	NN	O
presses	VBZ	O
enter	RBR	O
and	CC	O
the	DT	O
Request	NNP	O
goes	VBZ	O
to	TO	O
server	VB	O
,	,	O

you	PRP	O
can	MD	O
check	VB	O
the	DT	O
value	NN	O
for	IN	O
submitButton	NN	O
on	IN	O
your	PRP$	O
server-side	JJ	O
code	NN	O

which	WDT	O
contains	VBZ	O
a	DT	O
collection	NN	O
of	IN	O
form	NN	O
name	NN	O
/value	NNP	O
pairs	NNS	O
.	.	O
For	IN	O

example	NN	O
in	IN	O
classic	JJ	B-API
ASP	NN	I-API
:	:	I-API
If	IN	I-API
Request.Form(	NNP	I-API
"submitButton	NNP	I-API
"	NNP	I-API
)	)	L-API
=	VBP	O

"Previous	JJ	O
Page	NNP	O
"	NNP	O
Then	RB	O
'	POS	O
Code	NNP	O
for	IN	O
Previous	NNP	O
Page	NNP	O
ElseIf	NNP	O
Request.Form(	NNP	O

"submitButton	NNP	I-API
"	NNP	I-API
)	)	L-API
=	VBP	O
"Next	JJ	O
Page	NNP	O
"	NNP	O
Then	RB	O
'	POS	O
Code	NNP	O
for	IN	O

Next	NNP	O
Page	NNP	O
End	NNP	O
If	IN	O
Reference	NNP	O
:	:	O
Using	VBG	O
multiple	JJ	O
submit	NN	O
buttons	NNS	O
on	IN	O

a	DT	O
single	JJ	O
form	NN	O
Let's	NNP	O
say	VBP	O
I	PRP	O
have	VBP	O
a	DT	O
DataTable	JJ	O
with	IN	O
a	DT	O

Name	NN	O
column	NN	O
.	.	O
I	PRP	O
want	VBP	O
to	TO	O
have	VB	O
a	DT	O
collection	NN	O
of	IN	O
the	DT	O

unique	JJ	O
names	NNS	O
ordered	VBN	O
alphabetically	RB	O
.	.	O
The	DT	O
following	JJ	O
query	NN	O
ignores	VBZ	O
the	DT	O
order	NN	O

by	IN	O
clause	NN	O
.	.	O
var	JJ	O
names	NNS	O
=	VBP	O
(	(	O
from	IN	O
DataRow	NNP	O
dr	NN	O
in	IN	O

dataTable	JJ	O
.	.	O
Rows	NNP	O
orderby	NN	O
(	(	O
string	VBG	O
)dr	NNP	O
[	NNP	O
"Name	NNP	O
"	NNP	O
]	NNP	O

select	NN	O
(	(	O
string	VBG	O
)dr	NNP	O
[	NNP	O
"Name	NNP	O
"	NNP	O
]	NNP	O
)	)	O
.	.	O
Distinct()	NNP	O

;	:	O
Why	WRB	O
does	VBZ	O
the	DT	O
orderby	NN	O
not	RB	O
get	VB	O
enforced	VBN	O
?	.	O
Unfortunately	RB	O
when	WRB	O

it	PRP	O
comes	VBZ	O
to	TO	O
memory	VB	O
management	NN	O
in	IN	O
Flash	NNP	O
/actionscript	NNP	O
there	EX	O
isn't	VBZ	O
a	DT	O

whole	JJ	O
lot	NN	O
you	PRP	O
can	MD	O
do	VB	O
.	.	O
ActionScript	NNP	O
was	VBD	O
designed	VBN	O
to	TO	O
be	VB	O

easy	JJ	O
to	TO	O
use	VB	O
(	(	O
so	IN	O
they	PRP	O
didn't	VBP	O
want	JJ	O
people	NNS	O
to	TO	O
have	VB	O

to	TO	O
worry	VB	O
about	IN	O
memory	NN	O
management	NN	O
)	)	O
The	DT	O
following	NN	O
is	VBZ	O
a	DT	O
workaround	NN	O

,	,	O
instead	RB	O
of	IN	O
creating	VBG	O
a	DT	O
ByteArray	NNP	O
variable	JJ	O
try	NN	O
this	DT	O
.	.	O
var	NN	O

byteObject	NN	O
:Object	NNP	O
=	NNP	O
new	JJ	O
Object()	NNP	U-API
;	:	O
byteObject	NN	O
.	.	O
byteArray	NN	O
=	VBD	O
new	JJ	O

ByteArray()	NNP	O
;	:	O
...	:	O
/	VBP	O
/Then	VB	O
when	WRB	O
you	PRP	O
are	VBP	O
finished	VBN	O
delete	IN	O
the	DT	O

variable	JJ	O
from	IN	O
byteObject	JJ	O
delete	JJ	O
byteObject	NN	O
.	.	O
byteArray	NN	O
;	:	O
Where	NNP	O
byteArray	NN	O
is	VBZ	O

a	DT	O
dynamic	JJ	O
property	NN	O
of	IN	O
byteObject	NN	O
,	,	O
you	PRP	O
can	MD	O
free	VB	O
the	DT	O
memory	NN	O

that	WDT	O
was	VBD	O
allocated	VBN	O
for	IN	O
it	PRP	O
.	.	O
The	DT	O
problem	NN	O
is	VBZ	O
that	IN	O
the	DT	O

Distinct	NNP	O
operator	NN	O
does	VBZ	O
not	RB	O
grant	VB	O
that	IN	O
it	PRP	O
will	MD	O
maintain	VB	O
the	DT	O
original	JJ	O

order	NN	O
of	IN	O
values	NNS	O
.	.	O
So	RB	O
your	PRP$	O
query	NN	O
will	MD	O
need	VB	O
to	TO	O
work	VB	O

like	IN	O
this	DT	O
var	NN	O
names	VBZ	O
=	NNP	O
(	(	O
from	IN	O
DataRow	NNP	O
dr	NN	O
in	IN	O
dataTable	JJ	O

.	.	O
Rows	NNS	O
select	VBP	O
(	(	O
string	VBG	O
)dr	NNP	O
[	NNP	O
"Name	NNP	O
"	NNP	O
]	NNP	O
)	)	O

.	.	O
Distinct()	NNP	O
.	.	O
OrderBy(	NNP	O
name	NN	O
=	NNP	O
>	NNP	B-API
name	NN	I-API
)	)	L-API
;	:	O

