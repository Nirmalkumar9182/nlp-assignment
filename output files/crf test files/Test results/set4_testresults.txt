A	DT	O
solution	NN	O
,	,	O
albeit	IN	O
one	CD	O
that	WDT	O
defers	VBZ	O
handling	NN	O
of	IN	O
the	DT	O
null	JJ	O

value	NN	O
to	TO	O
the	DT	O
code	NN	O
,	,	O
could	MD	O
be	VB	O
:	:	O
DateTime	NNP	O
yesterday	NN	O
=	NNP	O

DateTime	NNP	O
.	.	O
Now	RB	O
.	.	O
Date	NNP	O
.	.	O
AddDays	NNP	O
(-	JJ	O
1	CD	O
)	)	O
;	:	O

var	CC	O
collection	NN	O
=	NN	O
from	IN	O
u	JJ	O
in	IN	O
db	NN	O
.	.	O
Universe	NNP	O
select	JJ	O
new	JJ	O

{	(	O
u	JJ	O
.	.	O
id	NN	O
,	,	O
u	JJ	O
.	.	O
name	NN	O
,	,	O
MaxDate	NNP	O
=	NNP	O

(	(	O
DateTime	NNP	O
?	.	O
)	)	O
(	(	O
from	IN	O
h	NN	O
in	IN	O
db	NN	O
.	.	O
History	NNP	O

where	WRB	O
u	NN	O
.	.	O
Id	NNP	O
=	NNP	O
=	NNP	O
h	NN	O
.	.	O
Id	NNP	O
&	CC	O
&	CC	O

h	NN	O
.	.	O
dateCol	NN	O
<	NN	O
yesterday	NN	O
select	VBP	O
h	NN	O
.	.	O
dateCol	NN	O
)	)	O
.	.	O

Max	NNP	U-API
(	(	U-API
)	)	U-API
}	)	O
;	:	O
This	DT	O
does	VBZ	O
not	RB	O
produce	VB	O
exactly	RB	O
the	DT	O

same	JJ	O
SQL	NNP	O
,	,	O
but	CC	O
does	VBZ	O
provide	VB	O
the	DT	O
same	JJ	O
logical	JJ	O
result	NN	O
.	.	O

Translating	VBG	O
"complex	JJ	O
"	NNP	O
SQL	NNP	O
queries	NNS	O
to	TO	O
LINQ	NNP	O
is	VBZ	O
not	RB	O
always	RB	O
straightforward	RB	O

.	.	O
PHP	NNP	O
variables	NNS	O
are	VBP	O
assigned	VBN	O
by	IN	O
value	NN	O
,	,	O
passed	VBN	O
to	TO	O
functions	NNS	O

by	IN	O
value	NN	O
,	,	O
and	CC	O
when	WRB	O
containing	VBG	O
/representing	VBG	O
objects	NNS	O
are	VBP	O
passed	VBN	O
by	IN	O

reference	NN	O
.	.	O
You	PRP	O
can	MD	O
force	VB	O
variables	NNS	O
to	TO	O
pass	VB	O
by	IN	O
reference	NN	O
using	VBG	O

an	DT	O
&	CC	O
Assigned	VBN	O
by	IN	O
value	NN	O
/reference	NN	O
example	NN	O
:	:	O
$var1	NN	O
=	NN	O
"test	NNP	O

"	NN	O
;	:	O
$var2	CC	O
=	NNP	O
$var1	NNP	O
;	:	O
$var2	NNP	O
=	NNP	O
"new	NNP	O
test	NN	O
"	NN	O

;	:	O
$var3	NNP	O
=	NNP	O
&	CC	O
$var2	NNP	O
;	:	O
$var3	NNP	O
=	NNP	O
"final	JJ	O
test	NN	O
"	NN	O

;	:	O
print	NN	B-API
(	(	B-API
"var1	JJ	I-API
:	:	I-API
$var1	NN	I-API
,	,	I-API
var2	NN	I-API
:	:	I-API
$var2	NN	I-API
,	,	I-API

var3	NN	O
:	:	O
$var3	NN	O
)	)	O
;	:	O
would	MD	O
output	NN	O
"var1	VB	O
:	:	O
test	NN	O
,	,	O

var2	NN	O
:	:	O
final	JJ	O
test	NN	O
,	,	O
var3	NN	O
:	:	O
final	JJ	O
test	NN	O
"	NN	O
.	.	O

Passed	VBN	O
by	IN	O
value	NN	O
/reference	NN	O
exampe	NN	O
:	:	O
$var1	JJ	O
=	NNP	O
"foo	NNP	O
"	NNP	O
;	:	O

$var2	NNP	O
=	NNP	O
"bar	NNP	O
"	NNP	O
;	:	O
changeThem	NN	B-API
(	(	B-API
$var1	UH	I-API
,	,	I-API
$var2	NNP	I-API
)	)	L-API

;	:	O
print	NN	O
"var1	NN	O
:	:	O
$var1	NN	O
,	,	O
var2	NN	O
:	:	O
$var2	JJ	O
"	NN	O
;	:	O

function	NN	O
changeThem	NN	B-API
(	(	B-API
$var1	NNP	I-API
,	,	I-API
&	CC	I-API
$var2	NNP	I-API
)	)	L-API
{	(	O
$var1	JJ	O
=	NNP	O

"FOO	NNP	O
"	NNP	O
;	:	O
$var2	NNP	O
=	NNP	O
"BAR	NNP	O
"	NNP	O
;	:	O
}	)	O
would	MD	O
output	NN	O

:	:	O
"var1	NN	O
:	:	O
foo	NN	O
,	,	O
var2	JJ	O
BAR	NNP	O
"	NNP	O
.	.	O
Object	NNP	O
variables	NNS	O

passed	VBN	O
by	IN	O
reference	NN	O
exampe	NN	O
:	:	O
class	NN	O
Foo	NNP	O
{	(	O
public	JJ	O
$var1	NNPS	O
;	:	O

function	NN	O
__construct	NN	U-API
(	(	U-API
)	)	U-API
{	(	O
$this	SYM	O
-	:	O
>var1	NN	O
=	JJ	O
"foo	NNP	O
"	NNP	O

;	:	O
}	)	O
public	JJ	O
function	NN	O
printFoo	NN	U-API
(	(	U-API
)	)	U-API
{	(	O
print	NN	O
$this	SYM	O
-	:	O

>var1	NN	O
;	:	O
}	)	O
}	)	O
$foo	NNP	O
=	NNP	O
new	JJ	O
Foo	NNP	U-API
(	(	U-API
)	)	U-API
;	:	O

changeFoo	NN	B-API
(	(	B-API
$foo	NNP	I-API
)	)	L-API
;	:	O
$foo	SYM	O
-	:	O
>printFoo	NN	O
(	(	U-API
)	)	U-API
;	:	O

function	NN	O
changeFoo	NN	B-API
(	(	B-API
$foo	NNP	I-API
)	)	L-API
{	(	O
$foo	SYM	O
-	:	O
>var1	NN	O
=	JJ	O
"FOO	NNP	O

"	NNP	O
;	:	O
}	)	O
Would	MD	O
output	NN	O
:	:	O
"FOO	JJ	O
"	NN	O
(	(	O
that	IN	O
last	JJ	O

example	NN	O
could	MD	O
be	VB	O
better	JJR	O
probably	RB	O
...	:	O
)	)	O
Rather	JJR	O
than	IN	O
coding	VBG	O
this	DT	O

out	IN	O
,	,	O
I	PRP	O
figure	VBP	O
I'll	JJ	O
pseudo-code	NN	O
it	PRP	O
in	IN	O
steps	NNS	O
and	CC	O
explain	VB	O

my	PRP$	O
logic	NN	O
,	,	O
so	IN	O
that	DT	O
better	JJR	O
programmers	NNS	O
can	MD	O
poke	VB	O
holes	NNS	O
in	IN	O

my	PRP$	O
logic	NN	O
if	IN	O
necessary	JJ	O
.	.	O
On	IN	O
the	DT	O
first	JJ	O
step	NN	O
we	PRP	O
start	VBP	O

out	RP	O
with	IN	O
a	DT	O
list	NN	O
of	IN	O
numbers	NNS	O
length	VBP	O
n	RB	O
.	.	O
For	IN	O
each	DT	O

number	NN	O
we	PRP	O
need	VBP	O
to	TO	O
create	VB	O
a	DT	O
list	NN	O
of	IN	O
length	JJ	O
n-1	JJ	O
becuase	NN	O

we	PRP	O
aren't	VBP	O
adding	VBG	O
a	DT	O
number	NN	O
to	TO	O
itself	PRP	O
.	.	O
By	IN	O
the	DT	O
end	NN	O

we	PRP	O
have	VBP	O
a	DT	O
list	NN	O
of	IN	O
about	IN	O
n	NN	O
sorted	VBD	O
lists	NNS	O
that	WDT	O
was	VBD	O

generated	VBN	O
in	IN	O
O	NNP	O
(	(	O
n	JJ	O
^2	NN	O
)	)	O
time	NN	O
.	.	O
step	VB	O
1	CD	O

(	(	O
startinglist	NN	O
)	)	O
for	IN	O
each	DT	O
number	NN	O
num1	NN	O
in	IN	O
startinglist	NN	O
for	IN	O
each	DT	O

number	NN	O
num2	NN	O
in	IN	O
startinglist	JJ	O
add	NN	O
num1	JJ	O
plus	CC	O
num2	JJ	O
into	IN	O
templist	JJ	O
add	JJ	O

templist	NN	O
to	TO	O
sumlist	VB	O
return	JJ	O
sumlist	NN	O
In	IN	O
step	NN	O
2	CD	O
because	IN	O
the	DT	O
lists	NNS	O

were	VBD	O
sorted	VBN	O
by	IN	O
design	NN	O
(	(	O
add	VB	O
a	DT	O
number	NN	O
to	TO	O
each	DT	O
element	NN	O

in	IN	O
a	DT	O
sorted	JJ	O
list	NN	O
and	CC	O
the	DT	O
list	NN	O
will	MD	O
still	RB	O
be	VB	O
sorted	VBN	O

)	)	O
we	PRP	O
can	MD	O
simply	RB	O
do	VB	O
a	DT	O
mergesort	NN	O
by	IN	O
merging	VBG	O
each	DT	O
list	NN	O

together	RB	O
rather	RB	O
than	IN	O
mergesorting	VBG	O
the	DT	O
whole	JJ	O
lot	NN	O
.	.	O
In	IN	O
the	DT	O
end	NN	O

this	DT	O
should	MD	O
take	VB	O
O	NNP	O
(	(	O
n	JJ	O
^2	NN	O
)	)	O
time	NN	O
.	.	O
step	VB	O

2	CD	O
(	(	O
sumlist	NN	O
)	)	O
create	VBP	O
an	DT	O
empty	JJ	O
list	NN	O
mergedlist	NN	O
for	IN	O
each	DT	O

list	NN	O
templist	NN	O
in	IN	O
sumlist	NN	O
set	VBN	O
mergelist	JJ	O
equal	JJ	O
to	TO	O
:	:	O
merge	NN	O
(	(	O

mergedlist	JJ	O
,templist	NN	O
)	)	O
return	NN	O
mergedlist	VBP	O
The	DT	O
merge	NN	O
method	NN	O
would	MD	O
be	VB	O
then	RB	O

the	DT	O
normal	JJ	O
merge	JJ	O
step	NN	O
with	IN	O
a	DT	O
check	NN	O
to	TO	O
make	VB	O
sure	JJ	O
that	IN	O

there	EX	O
are	VBP	O
no	DT	O
duplicate	NN	O
sums	NNS	O
.	.	O
I	PRP	O
won't	VBP	O
write	VB	O
this	DT	O
out	RP	O

because	IN	O
anyone	NN	O
can	MD	O
look	VB	O
up	RP	O
mergesort	NN	O
.	.	O
So	RB	O
there's	JJ	O
my	PRP$	O
solution	NN	O

.	.	O
The	DT	O
entire	JJ	O
algorithm	NN	O
is	VBZ	O
O	NNP	O
(	(	O
n	JJ	O
^2	NN	O
)	)	O
time	NN	O

.	.	O
Feel	NNP	O
free	JJ	O
to	TO	O
point	VB	O
out	RP	O
any	DT	O
mistakes	NNS	O
or	CC	O
improvements	NNS	O
.	.	O

It's	NNP	O
by	IN	O
value	NN	O
according	VBG	O
to	TO	O
the	DT	O
PHP	NNP	O
Documentation	NNP	O
.	.	O
By	IN	O
default	NN	O

,	,	O
function	NN	O
arguments	NNS	O
are	VBP	O
passed	VBN	O
by	IN	O
value	NN	O
(	(	O
so	IN	O
that	IN	O
if	IN	O

the	DT	O
value	NN	O
of	IN	O
the	DT	O
argument	NN	O
within	IN	O
the	DT	O
function	NN	O
is	VBZ	O
changed	VBN	O
,	,	O

it	PRP	O
does	VBZ	O
not	RB	O
get	VB	O
changed	VBN	O
outside	IN	O
of	IN	O
the	DT	O
function	NN	O
)	)	O
.	.	O

To	TO	O
allow	VB	O
a	DT	O
function	NN	O
to	TO	O
modify	VB	O
its	PRP$	O
arguments	NNS	O
,	,	O
they	PRP	O
must	MD	O

be	VB	O
passed	VBN	O
by	IN	O
reference	NN	O
.	.	O
To	TO	O
have	VB	O
an	DT	O
argument	NN	O
to	TO	O
a	DT	O

function	NN	O
always	RB	O
passed	VBN	O
by	IN	O
reference	NN	O
,	,	O
prepend	VBP	O
an	DT	O
ampersand	NN	O
(	(	O
&	CC	O

)	)	U-API
to	TO	O
the	DT	O
argument	NN	O
name	NN	O
in	IN	O
the	DT	O
function	NN	O
definition	NN	O
.	.	O
<	CC	O

?php	JJ	O
function	NN	O
add_some_extra	NN	O
(	(	O
&	CC	O
$string	VBG	O
)	)	O
{	(	O
$string	VBG	O
.	.	O
=	NN	O

'	''	O
and	CC	O
something	NN	O
extra	JJ	O
.	.	O
'	''	O
;	:	O
}	)	O
$str	FW	O
=	NNP	O
'	POS	O

This	DT	O
is	VBZ	O
a	DT	O
string	NN	O
,	,	O
'	''	O
;	:	O
add_some_extra	NNS	O
(	(	O
$str	NN	O
)	)	O

;	:	O
echo	JJ	O
$str	NN	O
;	:	O
/	CC	O
/	VB	O
outputs	NNS	O
'	POS	O
This	DT	O
is	VBZ	O
a	DT	O

string	NN	O
,	,	O
and	CC	O
something	NN	O
extra	JJ	O
.	.	O
'	''	O
?	.	O
>	JJ	O
Try	NNP	O
Eclipse	NNP	O

PDT	NNP	O
to	TO	O
setup	VB	O
an	DT	O
Eclipse	NNP	O
environment	NN	O
that	WDT	O
has	VBZ	O
debugging	VBG	O
features	NNS	O
like	IN	O

you	PRP	O
mentioned	VBD	O
.	.	O
The	DT	O
ability	NN	O
to	TO	O
step	VB	O
into	IN	O
the	DT	O
code	NN	O
is	VBZ	O

a	DT	O
much	RB	O
better	JJR	O
way	NN	O
to	TO	O
debug	VB	O
then	RB	O
the	DT	O
old	JJ	O
method	NN	O
of	IN	O

var_dump	NN	O
and	CC	O
print	NN	O
at	IN	O
various	JJ	O
points	NNS	O
to	TO	O
see	VB	O
where	WRB	O
your	PRP$	O
flow	NN	O

goes	VBZ	O
wrong	JJ	O
.	.	O
When	WRB	O
all	DT	O
else	RB	O
fails	VBZ	O
though	IN	O
and	CC	O
all	DT	O
I	PRP	O

have	VBP	O
is	VBZ	O
SSH	NNP	O
and	CC	O
vim	NN	O
I	PRP	O
still	RB	O
var_dump	VBP	O
(	(	O
)	)	O
/die	NNP	O

(	(	U-API
)	)	U-API
to	TO	O
find	VB	O
where	WRB	O
the	DT	O
code	NN	O
goes	VBZ	O
south	RB	O
.	.	O
print_r	NN	O

(	(	B-API
debug_backtrace	NN	I-API
(	(	I-API
)	)	I-API
)	)	L-API
;	:	O
or	CC	O
something	NN	O
like	IN	O
that	DT	O
:	:	O

-	:	O
)	)	O
Attempting	VBG	O
to	TO	O
insert	VB	O
an	DT	O
escape	NN	O
character	NN	O
into	IN	O
a	DT	O
table	JJ	O

results	NNS	O
in	IN	O
a	DT	O
warning	NN	O
.	.	O
For	IN	O
example	NN	O
:	:	O
create	NN	O
table	JJ	O
EscapeTest	NNP	O

(	(	O
text	JJ	O
varchar	NN	O
(	(	O
50	CD	O
)	)	O
)	)	O
;	:	O
insert	VB	O
into	IN	O
EscapeTest	NNP	O

(	(	O
text	NN	O
)	)	O
values	NNS	O
(	(	O
'	''	O
This	DT	O
is	VBZ	O
the	DT	O
first	JJ	O
part	NN	O

\n	NN	O
And	CC	O
this	DT	O
is	VBZ	O
the	DT	O
second	JJ	O
'	POS	O
)	)	O
;	:	O
Produces	VBZ	O
the	DT	O

warning	NN	O
:	:	O
WARNING	NN	O
:	:	O
nonstandard	JJ	O
use	NN	O
of	IN	O
escape	NN	O
in	IN	O
a	DT	O
string	JJ	O

literal	NN	O
(	(	O
Using	VBG	O
PSQL	NNP	O
8	CD	O
.	.	O
2	CD	O
)	)	O
Anyone	NN	O
know	VB	O
how	WRB	O

to	TO	O
get	VB	O
around	IN	O
this	DT	O
?	.	O
Very	NNP	O
roughly	RB	O
and	CC	O
from	IN	O
memory	NN	O
since	IN	O

I	PRP	O
don't	VBP	O
have	VBP	O
code	VBN	O
on	IN	O
this	DT	O
laptop	NN	O
:	:	O
using	VBG	O
(	(	O
OleDBConnection	NNP	O

conn	VBZ	O
=	NNP	O
new	JJ	O
OleDbConnection	NNP	U-API
(	(	U-API
)	)	U-API
)	)	O
{	(	O
conn	NN	O
.	.	O
ConnectionString	VBG	O

=	JJ	O
"Whatever	JJ	O
connection	NN	O
string	VBG	O
"	NN	O
;	:	O
using	VBG	O
(	(	O
OleDbCommand	NNP	O
cmd	VBZ	O
=	NNP	O

new	JJ	O
OleDbCommand	NNP	U-API
(	(	U-API
)	)	U-API
)	)	O
{	(	O
cmd	NN	O
.	.	O
Connection	NNP	O
=	NNP	O
conn	NN	O

;	:	O
cmd	NN	O
.	.	O
CommandText	NNP	O
=	NNP	O
"Select	NNP	O
*	NNP	O
from	IN	O
CoolTable	NNP	O
"	NNP	O
;	:	O

using	VBG	O
(	(	O
OleDbDataReader	NNP	O
dr	VBZ	O
=	NNP	O
cmd	NN	U-API
.	.	U-API
ExecuteReader	NNP	U-API
(	(	U-API
)	)	U-API
)	)	O

{	(	O
while	IN	O
(	(	O
dr	NN	U-API
.	.	U-API
Read	NNP	U-API
(	(	U-API
)	)	U-API
)	)	O
{	(	O
/	JJ	O

/	NNS	O
do	VBP	O
something	NN	O
like	IN	O
Console	NNP	O
.	.	O
WriteLine	NNP	O
(	(	O
dr	JJ	O
[	NNP	O
"column	NN	O

name	NN	O
"	NNP	O
]	NNP	O
as	IN	O
String	NNP	O
)	)	O
;	:	O
}	)	O
}	)	O
}	)	O
}	)	O

Cool	NNP	O
.	.	O
I	PRP	O
also	RB	O
found	VBD	O
the	DT	O
documentation	NN	O
regarding	VBG	O
the	DT	O
E	NN	O
:	:	O

http	NN	O
:	:	O
/	JJ	O
/www	NN	O
.	.	O
postgresql	NN	O
.	.	O
org	JJ	O
/docs	JJ	O
/8	NN	O
.	.	O

3	CD	O
/interactive	JJ	O
/sql	NNP	O
-	:	O
syntax-lexical	JJ	O
.	.	O
html	NN	O
#SQL	SYM	O
-	:	O
SYNTAX-STRINGS	JJ	O
PostgreSQL	NNP	O

also	RB	O
accepts	VBZ	O
"escape	NN	O
"	NN	O
string	NN	O
constants	NNS	O
,	,	O
which	WDT	O
are	VBP	O
an	DT	O
extension	NN	O

to	TO	O
the	DT	O
SQL	NNP	O
standard	NN	O
.	.	O
An	DT	O
escape	NN	O
string	NN	O
constant	NN	O
is	VBZ	O
specified	VBN	O

by	IN	O
writing	VBG	O
the	DT	O
letter	NN	O
E	NNP	O
(	(	O
upper	JJ	O
or	CC	O
lower	JJR	O
case	NN	O
)	)	O

just	RB	O
before	IN	O
the	DT	O
opening	NN	O
single	JJ	O
quote	NN	O
,	,	O
e	NN	O
.	.	O
g	NN	O
.	.	O

E'foo	NNP	O
'	POS	O
.	.	O
(	(	O
When	WRB	O
continuing	VBG	O
an	DT	O
escape	NN	O
string	NN	O
constant	JJ	O
across	IN	O

lines	NNS	O
,	,	O
write	VB	O
E	NNP	O
only	RB	O
before	IN	O
the	DT	O
first	JJ	O
opening	NN	O
quote	NN	O
.	.	O

)	)	O
Within	IN	O
an	DT	O
escape	NN	O
string	NN	O
,	,	O
a	DT	O
backslash	NN	O
character	NN	B-API
(	(	B-API
\	JJ	I-API

)	)	O
begins	VBZ	O
a	DT	O
C-like	JJ	O
backslash	NN	O
escape	NN	O
sequence	NN	O
,	,	O
in	IN	O
which	WDT	O
the	DT	O

combination	NN	O
of	IN	O
backslash	NN	O
and	CC	O
following	VBG	O
character	NN	O
(	(	O
s	PRP	O
)	)	O
represents	VBZ	O
a	DT	O

special	JJ	O
byte	NN	O
value	NN	O
.	.	O
\b	CC	O
is	VBZ	O
a	DT	O
backspace	NN	O
,	,	O
\f	NNP	O
is	VBZ	O

a	DT	O
form	NN	O
feed	NN	O
,	,	O
\n	NNP	O
is	VBZ	O
a	DT	O
newline	NN	O
,	,	O
\r	NNP	O
is	VBZ	O

a	DT	O
carriage	NN	O
return	NN	O
,	,	O
\t	NNP	O
is	VBZ	O
a	DT	O
tab	NN	O
.	.	O
Also	RB	O
supported	VBN	O

are	VBP	O
\digits	NNS	O
,	,	O
where	WRB	O
digits	NNS	O
represents	VBZ	O
an	DT	O
octal	JJ	O
byte	NN	O
value	NN	O
,	,	O

and	CC	O
\xhexdigits	NNS	O
,	,	O
where	WRB	O
hexdigits	NNS	O
represents	VBZ	O
a	DT	O
hexadecimal	JJ	O
byte	NN	O
value	NN	O
.	.	O

(	(	O
It	PRP	O
is	VBZ	O
your	PRP$	O
responsibility	NN	O
that	IN	O
the	DT	O
byte	NN	O
sequences	NNS	O
you	PRP	O
create	VBP	O

are	VBP	O
valid	JJ	O
characters	NNS	O
in	IN	O
the	DT	O
server	NN	O
character	NN	O
set	VBN	O
encoding	VBG	O
.	.	O
)	)	O

Any	IN	O
other	JJ	O
character	NN	O
following	VBG	O
a	DT	O
backslash	NN	O
is	VBZ	O
taken	VBN	O
literally	RB	O
.	.	O
Thus	RB	O

,	,	O
to	TO	O
include	VB	O
a	DT	O
backslash	JJ	O
character	NN	O
,	,	O
write	JJ	O
two	CD	O
backslashes	NNS	O
(	(	O

\	NNP	O
\	NNP	O
)	)	O
.	.	O
Also	RB	O
,	,	O
a	DT	O
single	JJ	O
quote	NN	O
can	MD	O
be	VB	O

included	VBN	O
in	IN	O
an	DT	O
escape	NN	O
string	NN	O
by	IN	O
writing	VBG	O
\	NNP	O
'	''	O
,	,	O
in	IN	O

addition	NN	O
to	TO	O
the	DT	O
normal	JJ	O
way	NN	O
of	IN	O
'	''	O
'	POS	O
.	.	O
@Goyuix	NNS	O
--	:	O

that's	VB	O
excellent	JJ	O
for	IN	O
something	NN	O
written	VBN	O
from	IN	O
memory	NN	O
.	.	O
tested	VBD	O
it	PRP	O
here	RB	O

--	:	O
found	VBD	O
the	DT	O
connection	NN	O
wasn't	NN	O
opened	VBD	O
.	.	O
Otherwise	VB	O
very	RB	O
nice	JJ	O
.	.	O

using	VBG	O
System	NNP	O
.	.	O
Data	NNP	O
.	.	O
OleDb	NNP	O
;	:	O
...	:	O
using	VBG	O
(	(	O
OleDbConnection	NNP	O

conn	VBZ	O
=	NNP	O
new	JJ	O
OleDbConnection	NNP	U-API
(	(	U-API
)	)	U-API
)	)	O
{	(	O
conn	NN	O
.	.	O
ConnectionString	VBG	O

=	JJ	O
"Provider	NN	O
=sqloledb	NNP	O
;Data	NNP	O
Source	NNP	O
=yourServername	NNP	O
\	NNP	O
\yourInstance	NNP	O
;Initial	NNP	O
Catalog	NNP	O
=databaseName	NNP	O

;Integrated	VBD	O
Security	NNP	O
=SSPI	NNP	O
;	:	O
"	NNP	O
;	:	O
using	VBG	O
(	(	O
OleDbCommand	NNP	O
cmd	VBZ	O
=	NNP	O

new	JJ	O
OleDbCommand	NNP	U-API
(	(	U-API
)	)	U-API
)	)	O
{	(	O
conn	NN	U-API
.	.	U-API
Open	NNP	U-API
(	(	U-API
)	)	U-API

;	:	O
cmd	NN	O
.	.	O
Connection	NNP	O
=	NNP	O
conn	NN	O
;	:	O
cmd	NN	O
.	.	O
CommandText	NNP	O
=	NNP	O

"Select	NNP	O
*	NNP	O
from	IN	O
yourTable	JJ	O
"	NN	O
;	:	O
using	VBG	O
(	(	O
OleDbDataReader	NNP	O
dr	VBZ	O
=	NNP	O

cmd	NN	U-API
.	.	U-API
ExecuteReader	NNP	U-API
(	(	U-API
)	)	U-API
)	)	O
{	(	O
while	IN	O
(	(	O
dr	NN	O
.	.	O

Read	NNP	U-API
(	(	U-API
)	)	U-API
)	)	O
{	(	O
Console	NNP	B-API
.	.	B-API
WriteLine	NNP	B-API
(	(	B-API
dr	JJ	I-API
[	NN	I-API

"columnName	NN	I-API
"	NNP	I-API
]	NNP	I-API
)	)	L-API
;	:	O
}	)	O
}	)	O
}	)	O
}	)	O
I've	NNP	O
read	VBP	O

that	IN	O
it	PRP	O
is	VBZ	O
possible	JJ	O
to	TO	O
add	VB	O
a	DT	O
method	NN	O
to	TO	O
an	DT	O
existing	VBG	O

object	NN	O
(	(	O
e	NN	O
.	.	O
g	NN	O
.	.	O
not	RB	O
in	IN	O
the	DT	O
class	NN	O
definition	NN	O

)	)	O
in	IN	O
Python	NNP	O
,	,	O
I	PRP	O
think	VBP	O
this	DT	O
is	VBZ	O
called	VBN	O
Monkey	NNP	O
Patching	NNP	O

(	(	O
or	CC	O
in	IN	O
some	DT	O
cases	NNS	O
Duck	NNP	O
Punching	NNP	O
)	)	O
.	.	O
I	PRP	O
understand	VBP	O

that	DT	O
it's	NN	O
not	RB	O
always	RB	O
a	DT	O
good	JJ	O
decision	NN	O
to	TO	O
do	VB	O
so	RB	O
.	.	O

But	CC	O
,	,	O
how	WRB	O
might	MD	O
one	CD	O
do	VB	O
this	DT	O
?	.	O
UPDATE	$	O
8	CD	O
/04	NNP	O

/2008	VBD	O
00	CD	O
:21	NNP	O
:01	NN	O
EST	NN	O
:	:	O
That	DT	O
looks	VBZ	O
like	IN	O
a	DT	O
good	JJ	O

answer	NN	O
John	NNP	O
Downey	NNP	O
,	,	O
I	PRP	O
tried	VBD	O
it	PRP	O
but	CC	O
it	PRP	O
appears	VBZ	O
that	IN	O

it	PRP	O
ends	VBZ	O
up	RP	O
being	VBG	O
not	RB	O
a	DT	O
true	JJ	O
method	NN	O
.	.	O
Your	PRP$	O
example	NN	O

defines	VBZ	O
the	DT	O
new	JJ	O
patch	NN	O
function	NN	O
with	IN	O
an	DT	O
argument	NN	O
of	IN	O
self	NN	O
,	,	O

but	CC	O
if	IN	O
you	PRP	O
write	VBP	O
actual	JJ	O
code	NN	O
that	WDT	O
way	NN	O
,	,	O
the	DT	O
now	RB	O

patched	JJ	O
class	NN	O
method	NN	O
asks	VBZ	O
for	IN	O
an	DT	O
argument	NN	O
named	VBN	O
self	NN	O
(	(	O
it	PRP	O

doesn't	VBZ	O
automagically	RB	O
recognize	VB	O
it	PRP	O
as	IN	O
the	DT	O
object	NN	O
to	TO	O
which	WDT	O
it	PRP	O
is	VBZ	O

supposed	VBN	O
to	TO	O
bind	VB	O
,	,	O
which	WDT	O
is	VBZ	O
what	WP	O
would	MD	O
happen	VB	O
if	IN	O
defined	VBN	O

within	IN	O
the	DT	O
class	NN	O
definition	NN	O
)	)	O
,	,	O
meaning	VBG	O
you	PRP	O
have	VBP	O
to	TO	O
call	VB	O

class	NN	O
.	.	O
patch	NN	O
(	(	O
obj	PRP	O
)	)	O
instead	RB	O
of	IN	O
just	RB	O
class	NN	O
.	.	O

patch	NN	U-API
(	(	U-API
)	)	U-API
if	IN	O
you	PRP	O
want	VBP	O
the	DT	O
same	JJ	O
functionality	NN	O
as	IN	O
a	DT	O

true	JJ	O
method	NN	O
.	.	O
It	PRP	O
looks	VBZ	O
like	IN	O
Python	NNP	O
isn't	VBP	O
really	RB	O
treating	VBG	O
it	PRP	O

as	IN	O
a	DT	O
method	NN	O
,	,	O
but	CC	O
more	JJR	O
just	RB	O
as	IN	O
a	DT	O
variable	JJ	O
which	WDT	O

happens	VBZ	O
to	TO	O
be	VB	O
a	DT	O
function	NN	O
(	(	O
and	CC	O
as	IN	O
such	JJ	O
is	VBZ	O
callable	JJ	O

)	)	O
.	.	O
Is	VBZ	O
there	RB	O
any	DT	O
way	NN	O
to	TO	O
attach	VB	O
an	DT	O
actual	JJ	O
method	NN	O

to	TO	O
a	DT	O
class	NN	O
?	.	O
Oh	UH	O
,	,	O
and	CC	O
Ryan	NNP	O
,	,	O
that	WDT	O
isn't	VBZ	O

exactly	RB	O
what	WP	O
I	PRP	O
was	VBD	O
looking	VBG	O
for	IN	O
(	(	O
it	PRP	O
isn't	VBZ	O
a	DT	O
builtin	JJ	O

functionality	NN	O
)	)	O
,	,	O
but	CC	O
it	PRP	O
is	VBZ	O
quite	RB	O
cool	JJ	O
nonetheless	RB	O
.	.	O
In	IN	O

Python	NNP	O
monkey	NN	O
patching	VBG	O
generally	RB	O
works	VBN	O
by	IN	O
overwriting	VBG	O
a	DT	O
class	NN	O
or	CC	O
functions	NNS	O

signature	VBP	O
with	IN	O
your	PRP$	O
own	JJ	O
.	.	O
Below	NNP	O
is	VBZ	O
an	DT	O
example	NN	O
from	IN	O
the	DT	O

Zope	NNP	O
Wiki	NNP	O
:	:	O
from	IN	O
SomeOtherProduct	NNP	O
.	.	O
SomeModule	NNP	O
import	NN	O
SomeClassdef	NNP	O
speak	NN	O
(	(	O

self	PRP	O
)	)	O
:	:	O
return	NN	O
"ook	NN	O
ook	NN	O
eee	NN	O
eee	NN	O
eee	NN	O
!	.	O
"SomeClass	NN	O

.	.	O
speak	JJ	O
=	JJ	O
speak	NN	O
That	DT	O
code	NN	O
will	MD	O
overwrite	VB	O
/create	VB	O
a	DT	O
method	NN	O

called	VBN	O
speak	NN	O
on	IN	O
the	DT	O
class	NN	O
.	.	O
In	IN	O
Jeff	NNP	O
Atwood's	NNP	O
recent	JJ	O
post	NN	O

on	IN	O
monkey	NN	O
patching	NN	O
.	.	O
He	PRP	O
shows	VBZ	O
an	DT	O
example	NN	O
in	IN	O
C	NNP	O
#	#	O

3	CD	O
.	.	O
0	CD	O
which	WDT	O
is	VBZ	O
the	DT	O
current	JJ	O
language	NN	O
I	PRP	O
use	VBP	O
for	IN	O

work	NN	O
.	.	O
That's	NNP	O
definitely	RB	O
a	DT	O
good	JJ	O
way	NN	O
to	TO	O
do	VB	O
it	PRP	O
.	.	O

But	CC	O
you	PRP	O
if	IN	O
you	PRP	O
happen	VBP	O
to	TO	O
be	VB	O
using	VBG	O
a	DT	O
database	NN	O
that	WDT	O

supports	VBZ	O
LINQ	NNP	O
to	TO	O
SQL	NNP	O
,	,	O
it	PRP	O
can	MD	O
be	VB	O
a	DT	O
lot	NN	O
more	JJR	O

fun	NN	O
.	.	O
It	PRP	O
can	MD	O
look	VB	O
something	NN	O
like	IN	O
this	DT	O
:	:	O
MyDB	NNP	O
db	VBZ	O

=	NNP	O
new	JJ	O
MyDB	NNP	O
(	(	O
"Data	NNP	O
Source	NNP	O
=	NN	O
...	:	O
"	NN	O
)	)	O
;var	VBZ	O

q	JJ	O
=	NN	O
from	IN	O
db	NN	O
.	.	O
MyTable	JJ	O
select	JJ	O
c	NN	O
;foreach	NN	B-API
(	(	B-API
var	JJ	I-API

c	NN	O
in	IN	O
q	NN	O
)	)	O
Console	NNP	O
.	.	O
WriteLine	NNP	O
(	(	O
c	NN	O
.	.	O
MyField	NNP	O

.	.	U-API
ToString	NNP	U-API
(	(	U-API
)	)	U-API
)	)	O
;	:	O
This	DT	O
was	VBD	O
caused	VBN	O
by	IN	O
a	DT	O

change	NN	O
in	IN	O
rails	NNS	O
2	CD	O
.	.	O
1	CD	O
which	WDT	O
prevents	NNS	O
rails	VBZ	O
from	IN	O
loading	VBG	O

views	NNS	O
from	IN	O
any	DT	O
arbitrary	JJ	O
path	NN	O
for	IN	O
security	NN	O
reasons	NNS	O
.	.	O
There	EX	O
is	VBZ	O

now	RB	O
an	DT	O
updated	JJ	O
version	NN	O
of	IN	O
the	DT	O
plugin	NN	O
on	IN	O
github	NN	O
,	,	O
so	IN	O

the	DT	O
solution	NN	O
is	VBZ	O
to	TO	O
use	VB	O
that	DT	O
.	.	O
The	DT	O
old	JJ	O
solution	NN	O
here	RB	O

for	IN	O
posterity	NN	O
To	TO	O
work	VB	O
around	IN	O
it	PRP	O
,	,	O
edit	VBZ	O
init	NN	O
.	.	O
rb	VB	O

under	IN	O
your	PRP$	O
vendor	NN	O
/plugins	VBZ	O
/exception_notification	NNP	O
directory	NN	O
,	,	O
and	CC	O
add	VB	O
the	DT	O
following	JJ	O

code	NN	O
to	TO	O
the	DT	O
end	NN	O
ActionController	NN	O
:	:	O
:Base	NN	O
.	.	O
class_eval	NN	O
do	VBP	O
append_view_path	RB	O

File	NNP	B-API
.	.	B-API
dirname	NN	B-API
(	(	B-API
__FILE__	NNP	I-API
)	)	L-API
+	NNP	O
'	POS	O
/lib	NN	O
/	NNP	O
..	NNP	O

/views	NNP	O
'	POS	O
end	NN	O
This	DT	O
adds	VBZ	O
the	DT	O
ExceptionNotifier	NNP	O
plugins	NNS	O
'	POS	O
views	NNS	O
folder	VBP	O

to	TO	O
the	DT	O
list	NN	O
,	,	O
so	IN	O
it	PRP	O
is	VBZ	O
allowed	VBN	O
to	TO	O
load	VB	O
them	PRP	O

.	.	O
While	IN	O
I	PRP	O
haven't	VBP	O
used	VBD	O
a	DT	O
flash	JJ	O
object	NN	O
inside	IN	O
a	DT	O
windows	JJ	O

form	NN	O
application	NN	O
myself	PRP	O
,	,	O
I	PRP	O
do	VBP	O
know	VB	O
that	IN	O
it's	JJ	O
possible	JJ	O
.	.	O

In	IN	O
Visual	JJ	O
studio	NN	O
on	IN	O
your	PRP$	O
toolbox	NN	O
,	,	O
choose	VB	O
to	TO	O
add	VB	O
a	DT	O

new	JJ	O
component	NN	O
.	.	O
Then	RB	O
in	IN	O
the	DT	O
new	JJ	O
window	NN	O
that	WDT	O
appears	VBZ	O
choose	VBP	O

the	DT	O
"COM	NN	O
Components	NNP	O
"	NNP	O
tab	NN	O
to	TO	O
get	VB	O
a	DT	O
list	NN	O
in	IN	O
which	WDT	O

you	PRP	O
can	MD	O
find	VB	O
the	DT	O
"Shockwave	NNP	O
Flash	NNP	O
Object	NNP	O
"	NNP	O
Once	NNP	O
added	VBD	O
to	TO	O

the	DT	O
toolbox	NN	O
,	,	O
simply	RB	O
use	VB	O
the	DT	O
control	NN	O
as	IN	O
you	PRP	O
would	MD	O
use	VB	O

any	DT	O
other	JJ	O
"standard	JJ	O
"	NNS	O
control	NN	O
from	IN	O
visual	JJ	O
studio	NN	O
.	.	O
three	CD	O
simple	JJ	O

commands	NNS	O
are	VBP	O
available	JJ	O
to	TO	O
interact	VB	O
with	IN	O
the	DT	O
control	NN	O
:	:	O
AxShockwaveFlash1	NNP	O
.	.	O

Stop	NNP	U-API
(	(	U-API
)	)	U-API
AxShockwaveFlash1	NNP	O
.	.	O
Movie	NNP	O
=	NNP	O
FilePath	NNP	O
&	CC	O
"	NNP	O
\FileName	NNP	O

.	.	O
swf	NN	O
"	JJ	O
AxShockwaveFlash1	NNP	U-API
.	.	U-API
Play	NNP	U-API
(	(	U-API
)	)	U-API
which	WDT	O
,	,	O
I	PRP	O

think	VBP	O
,	,	O
are	VBP	O
all	DT	O
self	JJ	O
explanatory	NN	O
.	.	O
It	PRP	O
would	MD	O
be	VB	O
great	JJ	O

to	TO	O
be	VB	O
able	JJ	O
to	TO	O
load	VB	O
the	DT	O
flash	NN	O
content	NN	O
from	IN	O
a	DT	O
stream	NN	O

of	IN	O
sorts	NNS	O
rather	RB	O
than	IN	O
a	DT	O
file	NN	O
on	IN	O
disk	NN	O
.	.	O
I	PRP	O
just	RB	O

saw	VBD	O
you	PRP	O
are	VBP	O
also	RB	O
looking	VBG	O
for	IN	O
a	DT	O
means	NNS	O
to	TO	O
load	VB	O
the	DT	O

content	NN	O
from	IN	O
a	DT	O
stream	NN	O
,	,	O
and	CC	O
because	RB	O
I'm	NNP	O
not	RB	O
really	RB	O
sure	JJ	O

that	WDT	O
is	VBZ	O
possible	JJ	O
with	IN	O
the	DT	O
shockwave	NN	O
flash	NN	O
object	NN	O
I	PRP	O
will	MD	O
give	VB	O

you	PRP	O
another	DT	O
option	NN	O
(	(	O
two	CD	O
actually	RB	O
)	)	O
.	.	O
the	DT	O
first	JJ	O
is	VBZ	O

the	DT	O
one	NN	O
I	PRP	O
would	MD	O
advise	VB	O
you	PRP	O
to	TO	O
use	VB	O
only	RB	O
when	WRB	O
necessary	JJ	O

,	,	O
as	IN	O
it	PRP	O
uses	VBZ	O
the	DT	O
full	JJ	O
blown	NN	O
"webbrowser	NNP	O
component	NN	O
"	NN	O
(	(	O

also	RB	O
available	JJ	O
as	IN	O
an	DT	O
extra	JJ	O
toolbox	NN	O
item	NN	O
)	)	O
,	,	O
which	WDT	O
is	VBZ	O

like	IN	O
trying	VBG	O
to	TO	O
shoot	VB	O
a	DT	O
fly	NN	O
with	IN	O
a	DT	O
bazooka	NN	O
.	.	O
of	IN	O

course	NN	O
it	PRP	O
will	MD	O
work	VB	O
,	,	O
as	IN	O
the	DT	O
control	NN	O
will	MD	O
act	VB	O
as	IN	O

a	DT	O
real	JJ	O
browser	NN	O
window	NN	O
(	(	O
actually	RB	O
the	DT	O
internet	JJ	O
explorer	NN	O
browser	NN	O
)	)	O

,	,	O
but	CC	O
its	PRP$	O
not	RB	O
really	RB	O
meant	VB	O
to	TO	O
be	VB	O
used	VBN	O
in	IN	O
the	DT	O

way	NN	O
you	PRP	O
need	VBP	O
it	PRP	O
.	.	O
the	DT	O
second	JJ	O
option	NN	O
is	VBZ	O
to	TO	O
use	VB	O

something	NN	O
I	PRP	O
just	RB	O
discovered	VBD	O
while	IN	O
looking	VBG	O
for	IN	O
more	JJR	O
information	NN	O
about	IN	O
playing	VBG	O

flash	JJ	O
content	NN	O
inside	IN	O
a	DT	O
windows	JJ	O
form	NN	O
.	.	O
F-IN-BOX	NNP	O
is	VBZ	O
a	DT	O
commercial	JJ	O

solution	NN	O
that	WDT	O
will	MD	O
also	RB	O
play	VB	O
content	NN	O
from	IN	O
a	DT	O
given	VBN	O
website	NN	O
URL	NNP	O

.	.	O
(	(	O
The	DT	O
link	NN	O
provided	VBD	O
will	MD	O
direct	VB	O
you	PRP	O
to	TO	O
the	DT	O
.	.	O

NET	JJ	O
code	NN	O
you	PRP	O
have	VBP	O
to	TO	O
use	VB	O
)	)	O
.	.	O
I'm	NNP	O
looking	VBG	O
for	IN	O

a	DT	O
way	NN	O
to	TO	O
delete	VB	O
a	DT	O
file	NN	O
which	WDT	O
is	VBZ	O
locked	VBN	O
by	IN	O
another	DT	O

process	NN	O
using	VBG	O
C	NNP	O
#	#	O
.	.	O
I	PRP	O
suspect	VBP	O
the	DT	O
method	NN	O
must	MD	O
be	VB	O

able	JJ	O
to	TO	O
find	VB	O
which	WDT	O
process	NN	O
is	VBZ	O
locking	VBG	O
the	DT	O
file	NN	O
(	(	O
perhaps	RB	O

by	IN	O
tracking	VBG	O
the	DT	O
handles	NNS	O
,	,	O
although	IN	O
I'm	NNP	O
not	RB	O
sure	JJ	O
how	WRB	O
to	TO	O

do	VB	O
this	DT	O
in	IN	O
C	NNP	O
#	#	O
)	)	O
then	RB	O
close	VB	O
that	IN	O
process	NN	O
before	IN	O

being	VBG	O
able	JJ	O
to	TO	O
complete	VB	O
the	DT	O
file	NN	O
delete	NN	O
using	VBG	O
File	NNP	O
.	.	O
Delete	NNP	O

(	(	U-API
)	)	U-API
.	.	O
For	IN	O
instance	NN	O
,	,	O
my	PRP$	O
query	NN	O
is	VBZ	O
like	IN	O
the	DT	O

following	VBG	O
using	VBG	O
SQL	NNP	O
Server	NNP	O
2005	CD	O
:	:	O
SELECT	NNP	O
*	NN	O
FROM	NNP	O
Table	NNP	O
WHERE	NNP	O

FREETEXT	NNP	B-API
(	(	B-API
SearchField	NNP	I-API
,	,	I-API
'	''	I-API
c	JJ	I-API
#	#	I-API
'	POS	I-API
)	)	L-API
I	PRP	O
have	VBP	O

a	DT	O
full	JJ	O
text	NN	O
index	NN	O
defined	VBD	O
to	TO	O
use	VB	O
the	DT	O
column	NN	O
SearchField	NNP	O
which	WDT	O

returns	VBZ	O
results	NNS	O
when	WRB	O
using	VBG	O
:	:	O
SELECT	JJ	O
*	NN	O
FROM	NNP	O
Table	NNP	O
WHERE	NNP	O
SearchField	NNP	O

LIKE	NNP	O
'	POS	O
%c	JJ	O
#	#	O
%	NN	O
'	''	O
I	PRP	O
believe	VBP	O
#	#	O
is	VBZ	O
a	DT	O

special	JJ	O
letter	NN	O
,	,	O
so	IN	O
how	WRB	O
do	VBP	O
I	PRP	O
allow	VB	O
FREETEXT	NNP	O
to	TO	O
work	VB	O

correctly	RB	O
for	IN	O
the	DT	O
query	NN	O
above	IN	O
?	.	O
If	IN	O
you	PRP	O
want	VBP	O
to	TO	O
do	VB	O

it	PRP	O
programatically	RB	O
.	.	O
I'm	NNP	O
not	RB	O
sure	JJ	O
...	:	O
and	CC	O
I'd	NNP	O
really	RB	O
recommend	VB	O

against	IN	O
it	PRP	O
.	.	O
If	IN	O
you're	JJ	O
just	RB	O
troubleshooting	VBG	O
stuff	NN	O
on	IN	O
your	PRP$	O
own	JJ	O

machine	NN	O
,	,	O
SysInternals	NNP	O
Process	NNP	O
Explorer	NNP	O
can	MD	O
help	VB	O
you	PRP	O
Run	VB	O
it	PRP	O
,	,	O

use	VB	O
the	DT	O
Find	NNP	O
Handle	NNP	O
command	NN	O
(	(	O
I	PRP	O
think	VBP	O
it's	JJ	O
either	CC	O
in	IN	O

the	DT	O
find	NN	O
or	CC	O
handle	VB	O
menu	NN	O
)	)	O
,	,	O
and	CC	O
search	NN	O
for	IN	O
the	DT	O

name	NN	O
of	IN	O
your	PRP$	O
file	NN	O
.	.	O
Once	IN	O
the	DT	O
handle	NN	O
(	(	O
s	NN	O
)	)	O

is	VBZ	O
found	VBN	O
,	,	O
you	PRP	O
can	MD	O
forcibly	RB	O
close	VB	O
them	PRP	O
.	.	O
You	PRP	O
can	MD	O

then	RB	O
delete	VB	O
the	DT	O
file	NN	O
and	CC	O
so	RB	O
on	IN	O
.	.	O
Beware	NNP	O
,	,	O
doing	VBG	O

this	DT	O
may	MD	O
cause	VB	O
the	DT	O
program	NN	O
which	WDT	O
owns	VBZ	O
the	DT	O
handles	NNS	O
to	TO	O
behave	VB	O

strangely	RB	O
,	,	O
as	IN	O
you've	NN	O
just	RB	O
pulled	VBD	O
the	DT	O
proverbial	JJ	O
rug	NN	O
out	IN	O
from	IN	O

under	IN	O
it	PRP	O
,	,	O
but	CC	O
it	PRP	O
works	VBZ	O
well	RB	O
when	WRB	O
you	PRP	O
are	VBP	O
debugging	VBG	O

your	PRP$	O
own	JJ	O
errant	JJ	O
code	NN	O
,	,	O
or	CC	O
when	WRB	O
visual	JJ	O
studio	NN	O
/	NN	O
windows	NNS	O

explorer	NN	O
is	VBZ	O
being	VBG	O
crap	NNS	O
and	CC	O
not	RB	O
releasing	VBG	O
file	NN	O
handles	NNS	O
even	RB	O
though	IN	O

you	PRP	O
told	VBD	O
them	PRP	O
to	TO	O
close	VB	O
the	DT	O
file	NN	O
ages	VBZ	O
ago	RB	O
...	:	O
sigh	NN	O

:	:	O
-	:	O
)	)	O
The	DT	O
typical	JJ	O
method	NN	O
is	VBZ	O
as	IN	O
follows	VBZ	O
.	.	O
You've	NNP	O

said	VBD	O
you	PRP	O
want	VBP	O
to	TO	O
do	VB	O
this	DT	O
in	IN	O
C	NNP	O
#	#	O
so	RB	O
here	RB	O

goes	VBZ	O
...	:	O
If	IN	O
you	PRP	O
don't	VBP	O
know	VB	O
which	WDT	O
process	NN	O
has	VBZ	O
the	DT	O
file	NN	O

locked	VBN	O
,	,	O
you'll	RB	O
need	MD	O
to	TO	O
examine	VB	O
each	DT	O
process's	NN	O
handle	JJ	O
list	NN	O
,	,	O

and	CC	O
query	RB	O
each	DT	O
handle	NN	O
to	TO	O
determine	VB	O
if	IN	O
it	PRP	O
identifies	VBZ	O
the	DT	O
locked	JJ	O

file	NN	O
.	.	O
Doing	VBG	O
this	DT	O
in	IN	O
C	NNP	O
#	#	O
will	MD	O
likely	RB	O
require	VB	O
P	NNP	O

/Invoke	NNP	O
or	CC	O
an	DT	O
intermediary	JJ	O
C	NNP	O
+	NNP	O
+	NNP	O
/CLI	NNP	O
to	TO	O
call	VB	O
the	DT	O

native	JJ	O
APIs	NNP	O
you'll	NN	O
need	NN	O
.	.	O
Once	RB	O
you've	RB	O
figured	VBN	O
out	RP	O
which	WDT	O
process	NN	O

(	(	O
es	NN	O
)	)	O
have	VBP	O
the	DT	O
file	NN	O
locked	VBN	O
,	,	O
you'll	RB	O
need	VB	O
to	TO	O

safely	RB	O
inject	VB	O
a	DT	O
small	JJ	O
native	JJ	O
DLL	NNP	O
into	IN	O
the	DT	O
process	NN	O
(	(	O
you	PRP	O

can	MD	O
also	RB	O
inject	VB	O
a	DT	O
managed	JJ	O
DLL	NNP	O
,	,	O
but	CC	O
this	DT	O
is	VBZ	O
messier	JJR	O

,	,	O
as	IN	O
you	PRP	O
then	RB	O
have	VBP	O
to	TO	O
start	VB	O
or	CC	O
attach	VB	O
to	TO	O
the	DT	O

.	.	O
NET	NNP	O
runtime	NN	O
)	)	O
.	.	O
That	DT	O
bootstrap	NN	O
DLL	NNP	O
then	RB	O
closes	VBZ	O
the	DT	O

handle	NN	O
using	VBG	O
CloseHandle	NNP	O
etc	NN	O
.	.	O
Essentially	RB	O
:	:	O
the	DT	O
way	NN	O
to	TO	O
unlock	VB	O

a	DT	O
"locked	JJ	O
"	NN	O
file	NN	O
is	VBZ	O
to	TO	O
inject	VB	O
a	DT	O
DLL	NNP	O
into	IN	O
the	DT	O

offending	VBG	O
process's	NN	O
address	NN	O
space	NN	O
and	CC	O
close	VB	O
it	PRP	O
yourself	PRP	O
.	.	O
You	PRP	O
can	MD	O

do	VB	O
this	DT	O
using	VBG	O
native	JJ	O
or	CC	O
managed	VBN	O
code	NN	O
.	.	O
No	DT	O
matter	NN	O
what	WP	O

,	,	O
you're	RB	O
going	VBG	O
to	TO	O
need	VB	O
a	DT	O
small	JJ	O
amount	NN	O
of	IN	O
native	JJ	O
code	NN	O

or	CC	O
at	IN	O
least	JJS	O
P	NNP	O
/Invoke	VBD	O
into	IN	O
the	DT	O
same	JJ	O
.	.	O
Helpful	JJ	O
links	NNS	O

:	:	O
http	NN	O
:	:	O
/	JJ	O
/www	NN	O
.	.	O
codeproject	NN	O
.	.	O
com	NN	O
/KB	JJ	O
/threads	NNP	O

/winspy	NNP	O
.	.	O
aspx	NN	O
http	NN	O
:	:	O
/	JJ	O
/damianblog	NN	O
.	.	O
com	NN	O
/2008	JJ	O
/07	NNP	O

/02	NNP	O
/net	NNP	O
-	:	O
code-injection	NN	O
/	NN	O
Good	NNP	O
luck	NN	O
!	.	O
Here's	VBZ	O
a	DT	O
short	JJ	O

list	NN	O
of	IN	O
implementations	NNS	O
and	CC	O
languages	NNS	O
I've	NNP	O
tried	VBD	O
.	.	O
It's	NNP	O
sorted	VBN	O
by	IN	O

closeness	NN	O
to	TO	O
zero	CD	O
:	:	O
Scheme	NN	O
:	:	O
(	(	O
+	VB	O
1	CD	O
(	(	O
make-polar	JJ	O

1	CD	O
(	(	O
atan	JJ	O
0	CD	O
-	:	O
1	CD	O
)	)	O
)	)	O
)	)	O
⇒	$	O
0	CD	O

.	.	O
0	CD	O
+1	NN	O
.	.	O
2246063538223773e-16i	JJ	O
(	(	O
Chez	NNP	O
Scheme	NNP	O
,	,	O
MIT	NNP	O
Scheme	NNP	O

)	)	O
⇒	VBD	O
0	CD	O
.	.	O
0	CD	O
+1	NN	O
.	.	O
22460635382238e-16i	JJ	O
(	(	O
Guile	NNP	O
)	)	O

⇒	VBD	O
0	CD	O
.	.	O
0	CD	O
+1	NN	O
.	.	O
22464679914735e-16i	JJ	O
(	(	O
Chicken	NNP	O
with	IN	O
numbers	NNS	O

egg	VBP	O
)	)	O
⇒	$	O
0	CD	O
.	.	O
0	CD	O
+1	NN	O
.	.	O
2246467991473532e-16i	JJ	O
(	(	O
MzScheme	NNP	O

,	,	I-API
SISC	NNP	I-API
,	,	I-API
Gauche	NNP	I-API
,	,	I-API
Gambit	NNP	I-API
)	)	L-API
⇒	VBD	O
0	CD	O
.	.	O
0	CD	O

+1	NN	O
.	.	O
2246467991473533e-16i	JJ	O
(	(	O
SCM	NNP	O
)	)	O
Common	NNP	O
Lisp	NNP	O
:	:	O
(	(	O
1	CD	O

+	NN	O
(	(	O
exp	JJ	O
(	(	O
complex	JJ	O
0	CD	O
pi	NN	O
)	)	O
)	)	O
)	)	O
⇒	FW	O

#C	NNP	O
(	(	O
0	CD	O
.	.	O
0L0	CD	O
-	:	O
5	CD	O
.	.	O
0165576136843360246L-20	NN	O
)	)	O
(	(	O

CLISP	NNP	O
)	)	O
⇒	VBP	O
#C	NNP	O
(	(	O
0	CD	O
.	.	O
0d0	CD	O
1	CD	O
.	.	O
2246063538223773d-16	JJ	O

)	)	U-API
(	(	O
CMUCL	NNP	O
)	)	O
⇒	VBP	O
#C	NNP	O
(	(	O
0	CD	O
.	.	O
0d0	CD	O
1	CD	O

.	.	O
2246467991473532d-16	JJ	O
)	)	O
(	(	O
SBCL	NNP	O
)	)	O
Perl	NN	O
:	:	O
use	NN	O
Math	NN	O
:	:	O

:Complex	NN	O
;	:	O
Math	NNP	O
:	:	O
:Complex	JJ	O
-	:	O
>emake	NN	O
(	(	O
1	CD	O
,	,	O
pi	NN	O

)	)	O
+	VBZ	O
1	CD	O
⇒	NN	O
1	CD	O
.	.	O
22464679914735e-16i	JJ	O
Python	NN	O
:	:	O
from	IN	O
cmath	NN	O

import	NN	O
exp	NN	O
,	,	O
pi	NN	O
;	:	O
exp	CC	O
(	(	O
complex	JJ	O
(	(	O
0	CD	O
,	,	O

pi	NN	O
)	)	O
)	)	O
+	$	O
1	CD	O
⇒	JJ	O
1	CD	O
.	.	O
2246467991473532e-16j	JJ	O
(	(	O
CPython	NNP	O

)	)	O
Ruby	NN	O
:	:	O
require	NN	O
'	''	O
complex	JJ	O
'	POS	O
;	:	O
Complex	NNP	O
:	:	O
:polar	NN	O

(	(	B-API
1	CD	I-API
,	,	I-API
Math	NN	I-API
:	:	I-API
:PI	NN	I-API
)	)	L-API
+	VBZ	O
1	CD	O
⇒	NN	O
Complex	NNP	O

(	(	B-API
0	CD	I-API
.	.	I-API
0	CD	I-API
,	,	I-API
1	CD	I-API
.	.	I-API
22464679914735e-16	JJ	I-API
)	)	L-API
(	(	O
MRI	NNP	O

)	)	O
⇒	NN	O
Complex	NNP	B-API
(	(	B-API
0	CD	I-API
.	.	I-API
0	CD	I-API
,	,	I-API
1	CD	I-API
.	.	I-API
2246467991473532e-16	JJ	I-API

)	)	U-API
(	(	O
JRuby	NNP	O
)	)	O
R	NN	O
:	:	O
complex	NN	O
(	(	O
argument	JJ	O
=	NNP	O
pi	NN	O

)	)	O
+	VBZ	O
1	CD	O
⇒	NN	O
0	CD	O
+1	NN	O
.	.	O
224606353822377e-16i	JJ	O

