You	PRP	O
can't	VBP	O
please	VB	O
everyone	NN	O
.	.	O
If	IN	O
I	PRP	O
enter	VBP	O
ten	RB	O
as	IN	O
10	CD	O

.	.	O
000	CD	O
,	,	O
and	CC	O
someone	NN	O
enters	NNS	O
ten	VBP	O
thousand	VBP	O
as	IN	O
10	CD	O
.	.	O

000	CD	O
,	,	O
you	PRP	O
cannot	VBP	O
handle	VB	O
that	DT	O
without	IN	O
some	DT	O
knowledge	NN	O
of	IN	O
the	DT	O

culture	NN	O
of	IN	O
the	DT	O
input	NN	O
.	.	O
Detect	VB	O
the	DT	O
culture	NN	O
somehow	NN	O
(	(	O
browser	NN	O

,	,	O
system	NN	O
setting	VBG	O
-	:	O
what	WP	O
is	VBZ	O
the	DT	O
use	NN	O
case	NN	O
?	.	O
ASP	NNP	O

?	.	O
Internal	NNP	O
app	NN	O
,	,	O
or	CC	O
open	VB	O
to	TO	O
the	DT	O
world	NN	O
?	.	O
)	)	O

,	,	O
or	CC	O
provide	VB	O
an	DT	O
example	NN	O
of	IN	O
the	DT	O
expected	JJ	O
formatting	NN	O
,	,	O
and	CC	O

use	VB	O
the	DT	O
most	RBS	O
lenient	JJ	O
parser	NN	O
you	PRP	O
can	MD	O
.	.	O
Probably	RB	O
something	NN	O
like	IN	O

:	:	O
double	JJ	O
d	NN	O
=	NNP	O
Double.Parse(	NNP	O
"5	NNP	O
,	,	O
000	CD	O
.	.	O
00	CD	O
"	NN	O

,	,	I-API
NumberStyles	NNP	I-API
.	.	I-API
Any	NNP	I-API
,	,	I-API
CultureInfo	NNP	I-API
.	.	I-API
InvariantCulture	NNP	I-API
)	)	L-API
;	:	O
I	PRP	O

have	VBP	O
the	DT	O
following	JJ	O
arrays	NNS	O
:	:	O
$artist	NN	O
=	NNP	O
array(	VBZ	O
"the	JJ	O
roots	NNS	O
"	VBP	O

,	,	O
"michael	NNP	B-API
jackson	NNP	I-API
"	NNP	I-API
,	,	I-API
"billy	RB	I-API
idol	JJ	I-API
"	NNP	I-API
,	,	I-API
"more	NNP	I-API
"	NNP	I-API

,	,	I-API
"and	NNP	I-API
more	RBR	I-API
"	JJ	I-API
,	,	I-API
"and_YET_MORE	NNP	I-API
"	NNP	I-API
)	)	L-API
;	:	O
$count	NNP	O
=	NNP	O

array(	VBD	O
5	CD	O
,	,	O
3	CD	O
,	,	O
9	CD	O
,	,	O
1	CD	O
,	,	O
1	CD	O
,	,	O

3	CD	I-API
)	)	L-API
;	:	O
I	PRP	O
want	VBP	O
to	TO	O
generate	VB	O
a	DT	O
tag	NN	O
cloud	NN	O
that	WDT	O

will	MD	O
have	VB	O
artists	NNS	O
with	IN	O
a	DT	O
higher	JJR	O
number	NN	O
in	IN	O
$count	NNP	O
enclosed	VBD	O
in	IN	O

h6	NN	O
tags	NNS	O
and	CC	O
the	DT	O
lowest	JJS	O
enclosed	JJ	O
h1	NN	O
tags	NNS	O
.	.	O
From	IN	O
what	WP	O

I've	NNP	O
seen	VBN	O
,	,	O
there	EX	O
are	VBP	O
a	DT	O
few	JJ	O
registry	NN	O
keys	NNS	O
that	WDT	O
set	VBD	O

the	DT	O
default	NN	O
mail	NN	O
client	NN	O
.	.	O
One	CD	O
of	IN	O
them	PRP	O
being	VBG	O
:	:	O
System	NN	O

Key	NNP	O
:	:	O
[HKEY_CLASSES_ROOT	NN	O
\mailto	NNP	O
\shell	NNP	O
\open	NNP	O
\command	NNP	O
]	NNP	O
Value	NNP	O
Name	NN	O
:	:	O

(	(	O
Default	NNP	O
)	)	O
Data	NNP	O
Type	NN	O
:	:	O
REG_SZ	NNP	O
(	(	O
String	NNP	O
Value	NNP	O
)	)	O

Value	NNP	O
Data	NNP	O
:	:	O
Mail	NN	O
program	NN	O
command-line	NN	O
.	.	O
I'm	NNP	O
not	RB	O
familar	JJ	O
with	IN	O

Delphi	NNP	O
7	CD	O
,	,	O
but	CC	O
I'm	NNP	O
sure	VBP	O
there	EX	O
are	VBP	O
some	DT	O
registry	NN	O
editing	VBG	O

libraries	NNS	O
in	IN	O
there	EX	O
that	IN	O
you	PRP	O
could	MD	O
use	VB	O
to	TO	O
modify	VB	O
this	DT	O
value	NN	O

.	.	O
Some	DT	O
places	NNS	O
list	VBD	O
more	JJR	O
than	IN	O
this	DT	O
key	NN	O
,	,	O
others	NNS	O
just	RB	O

this	DT	O
key	NN	O
,	,	O
so	IN	O
you	PRP	O
may	MD	O
need	VB	O
to	TO	O
test	VB	O
a	DT	O
little	JJ	O

bit	NN	O
to	TO	O
find	VB	O
the	DT	O
proper	JJ	O
one(	NN	B-API
s	NN	I-API
)	)	L-API
.	.	O
MySQL	NNP	O
has	VBZ	O

this	DT	O
incredibly	RB	O
useful	JJ	O
yet	RB	O
properitary	JJ	O
REPLACE	NNP	O
INTO	NNP	O
SQL	NNP	O
Command	NNP	O
.	.	O
I	PRP	O

wonder	VBP	O
:	:	O
Can	MD	O
this	DT	O
easily	RB	O
be	VB	O
emulated	VBN	O
in	IN	O
SQL	NNP	O
Server	NNP	O
2005	CD	O

?	.	O
Starting	VBG	O
a	DT	O
new	JJ	O
Transaction	NNP	O
,	,	O
doing	VBG	O
a	DT	O
Select()	NNP	O
and	CC	O
then	RB	O

either	DT	O
UPDATE	NNP	O
or	CC	O
INSERT	NNP	O
and	CC	O
COMMIT	NNP	O
is	VBZ	O
always	RB	O
a	DT	O
little	JJ	O
bit	NN	O

of	IN	O
a	DT	O
pain	NN	O
,	,	O
especially	RB	O
when	WRB	O
doing	VBG	O
it	PRP	O
in	IN	O
the	DT	O
application	NN	O

and	CC	O
therefore	NN	O
always	RB	O
keeping	VBG	O
2	CD	O
versions	NNS	O
of	IN	O
the	DT	O
statement	NN	O
.	.	O
I	PRP	O

wonder	VBP	O
if	IN	O
there	EX	O
is	VBZ	O
an	DT	O
easy	JJ	O
and	CC	O
universal	JJ	O
way	NN	O
to	TO	O
implement	VB	O

such	PDT	O
a	DT	U-API
function	NN	O
into	IN	O
SQL	NNP	O
Server	NNP	O
2005	CD	O
?	.	O
The	DT	O
default	NN	O
behaviour	NN	O

is	VBZ	O
for	IN	O
error_log()	NN	O
to	TO	O
output	NN	O
to	TO	O
the	DT	O
Apache	NNP	O
error	NN	O
log	NN	O
.	.	O

If	IN	O
this	DT	O
isn't	NN	O
happening	VBG	O
check	VB	O
your	PRP$	O
php	NN	O
.	.	O
ini	JJ	O
settings	NNS	O
for	IN	O

the	DT	O
error_log	NN	O
directive	JJ	O
-	:	O
leave	VBP	O
it	PRP	O
unset	JJ	O
to	TO	O
use	VB	O
the	DT	O
Apache	NNP	O

log	NN	O
file	NN	O
for	IN	O
the	DT	O
current	JJ	O
vhost	NN	O
.	.	O
Off	IN	O
the	DT	O
top	NN	O
of	IN	O

my	PRP$	O
head	NN	O
...	:	O
$artist	JJ	O
=	NNP	O
array(	NN	B-API
"the	NNP	I-API
roots	NNS	I-API
"	NNP	I-API
,	,	I-API
"michael	NNP	I-API

jackson	NNP	I-API
"	NNP	I-API
,	,	I-API
"billy	RB	I-API
idol	JJ	I-API
"	NNP	I-API
,	,	I-API
"more	NNP	I-API
"	NNP	I-API
,	,	I-API
"and	NNP	I-API

more	RBR	I-API
"	JJ	I-API
,	,	I-API
"and_YET_MORE	NNP	I-API
"	NNP	I-API
)	)	L-API
;	:	O
$count	NNP	O
=	NNP	O
array(	VBD	O
5	CD	O

,	,	O
3	CD	O
,	,	O
9	CD	O
,	,	O
1	CD	O
,	,	O
1	CD	O
,	,	O
3	CD	O
)	)	O

;	:	O
$highest	JJS	O
=	NN	O
max(	NN	B-API
$count	NN	I-API
)	)	L-API
;for	NN	O
(	(	O
int	JJ	O
$x	NNP	O
=	NNP	O

0	CD	O
;	:	O
x	NNP	O
<	NNP	O
count(	JJ	O
$artist	NN	O
)	)	O
;	:	O
$x	CC	O
+	NNP	O
+	NNP	O

)	)	L-API
{	(	O
$normalized	VBN	O
=	RB	O
$count	NNP	O
[	NNP	O
$x	NNP	O
]	NNP	O
/	NNP	O
$highest	NNP	O
;	:	O

$heading	VBG	O
=	NNP	O
ceil(	NN	O
$normalized	VBD	O
*	RB	O
6	CD	O
)	)	O
;	:	O
/	CC	O
/	$	O
6	CD	O

heading	VBG	O
types	NNS	O
echo	VBP	O
"	JJ	O
<h	NNP	O
"	NNP	O
.	.	O
$heading	VBG	O
.	.	O
"	JJ	O
>	JJ	O

"	NN	O
.	.	O
$artist	JJ	O
[	JJ	O
$x	NN	O
]	NNP	O
.	.	O
"	VB	O
<	JJ	O
/h	NNP	O
"	NNP	O

.	.	O
$heading	VBG	O
.	.	O
"	JJ	O
>	JJ	O
"	NN	O
;	:	O
}	)	O
I	PRP	O
have	VBP	O
a	DT	O

little	JJ	O
game	NN	O
written	VBN	O
in	IN	O
C	NNP	O
#	#	O
.	.	O
It	PRP	O
uses	VBZ	O
a	DT	O
database	NN	O

as	IN	O
back-end	NN	O
.	.	O
It's	VB	O
a	DT	O
trading	NN	O
card	NN	O
game	NN	O
,	,	O
and	CC	O
I	PRP	O

wanted	VBD	O
to	TO	O
implement	VB	O
the	DT	U-API
function	NN	O
of	IN	O
the	DT	O
cards	NNS	O
as	IN	O
a	DT	O
script	NN	O

.	.	O
What	WP	O
I	PRP	O
mean	VBP	O
is	VBZ	O
that	IN	O
I	PRP	O
essentially	RB	O
have	VBP	O
an	DT	O
interface	NN	O

,	,	O
ICard	NNP	O
,	,	O
which	WDT	O
a	DT	O
card	NN	O
class	NN	O
implements	NNS	O
(	(	O
public	JJ	O
class	NN	O

Card056	NNP	O
:	:	O
ICard	NNP	O
)	)	O
and	CC	O
which	WDT	O
contains	VBZ	U-API
function	NN	O
that	WDT	O
are	VBP	O
called	VBN	O

by	IN	O
the	DT	O
game	NN	O
.	.	O
Now	RB	O
,	,	O
to	TO	O
make	VB	O
the	DT	O
thing	NN	O
maintainable	JJ	O

/moddable	JJ	O
,	,	O
I	PRP	O
would	MD	O
like	VB	O
to	TO	O
have	VB	O
the	DT	O
class	NN	O
for	IN	O
each	DT	O

card	NN	O
as	IN	O
source	NN	O
code	NN	O
in	IN	O
the	DT	O
database	NN	O
and	CC	O
essentially	RB	O
compile	VB	O
it	PRP	O

on	IN	O
first	JJ	O
use	NN	O
.	.	O
So	IN	O
when	WRB	O
I	PRP	O
have	VBP	O
to	TO	O
add	VB	O
/change	VB	O

a	DT	O
card	NN	O
,	,	O
I'll	NNP	O
just	RB	O
add	VB	O
it	PRP	O
to	TO	O
the	DT	O
database	NN	O
and	CC	O

tell	VB	O
my	PRP$	O
application	NN	O
to	TO	O
refresh	VB	O
,	,	O
without	IN	O
needing	VBG	O
any	DT	O
assembly	NN	O
deployment	NN	O

(	(	O
especially	RB	O
since	IN	O
we	PRP	O
would	MD	O
be	VB	O
talking	VBG	O
about	IN	O
1	CD	O
assembly	NN	O
per	IN	O

card	NN	O
which	WDT	O
means	VBZ	O
hundreds	NNS	O
of	IN	O
assemblies	NNS	O
)	)	O
.	.	O
Is	VBZ	O
that	IN	O
possible	JJ	O

?	.	O
Register	NNP	O
a	DT	O
class	NN	O
from	IN	O
a	DT	O
source	NN	O
file	NN	O
and	CC	O
then	RB	O
instantiate	VB	O

it	PRP	O
,	,	O
etc	FW	O
.	.	O
ICard	NNP	O
Cards	NNP	O
[current	NNP	O
]	NNP	O
=	NNP	O
new	JJ	O
MyGame.CardLibrary.Card056()	NNP	O

;	:	O
Cards	NNP	O
[current	NNP	O
]	NNP	O
.	.	O
OnEnterPlay(	NNP	B-API
ref	JJ	I-API
currentGameState	NN	I-API
)	)	L-API
;	:	O
The	DT	O

language	NN	O
is	VBZ	O
C	NNP	O
#	#	O
,	,	O
but	CC	O
extra	JJ	O
bonus	NN	O
if	IN	O
it's	JJ	O
possible	JJ	O

to	TO	O
write	VB	O
the	DT	O
script	NN	O
in	IN	O
any	DT	O
.	.	O
NET	JJ	O
language	NN	O
.	.	O
I	PRP	O

have	VBP	O
been	VBN	O
trying	VBG	O
to	TO	O
implement	VB	O
Win32's	NNP	O
MessageBox	NNP	O
using	VBG	O
GTK	NNP	O
.	.	O
The	DT	O

app	NN	O
using	VBG	O
SDL	NNP	O
/OpenGL	NNP	O
,	,	O
so	IN	O
this	DT	O
isn't	NN	O
a	DT	O
GTK	NNP	O
app	NN	O

.	.	O
I	PRP	O
handle	VBP	O
the	DT	O
initialisation	NN	O
(	(	O
gtk_init	NN	O
)	)	O
sort	NN	O
of	IN	O
stuff	NN	O

inside	IN	O
the	DT	O
MessageBox	NNP	U-API
function	NN	O
as	IN	O
follows	VBZ	O
:	:	O
int	NN	O
MessageBox(	NNP	O
HWND	NNP	O
hwnd	NN	O

,	,	I-API
const	NN	I-API
char	NN	I-API
*	NNP	I-API
text	NN	I-API
,	,	I-API
const	NN	I-API
char	NN	I-API
*	NNP	I-API
caption	NN	I-API
,	,	I-API

UINT	NNP	B-API
type	NN	I-API
)	)	L-API
{	(	O
GtkWidget	NNP	O
*window	NNP	O
=	NNP	O
NULL	NNP	O
;	:	O
GtkWidget	NNP	O
*dialog	NNP	O

=	NNP	O
NULL	NNP	O
;	:	O
gtk_init(	NN	B-API
>kArgc	NN	I-API
,	,	I-API
>kArgv	NNP	I-API
)	)	L-API
;	:	O
window	CC	O
=	VB	O

gtk_window_new(	JJ	B-API
GTK_WINDOW_TOPLEVEL	NNP	I-API
)	)	L-API
;	:	O
g_signal_connect(	CC	B-API
G_OBJECT(	NNP	I-API
window	NN	I-API
)	)	L-API
,	,	O
"delete_event	JJ	O
"	NN	O

,	,	O
G_CALLBACK(	NNP	B-API
delete_event	NN	I-API
)	)	L-API
,	,	O
NULL	NNP	O
)	)	O
;	:	O
g_signal_connect(	CC	O
G_OBJECT(	NNP	O
window	NN	O

)	)	O
,	,	O
"destroy	NNP	O
"	NNP	O
,	,	O
G_CALLBACK(	NNP	B-API
destroy	NN	I-API
)	)	L-API
,	,	O
NULL	NNP	O
)	)	O

;	:	O
/	CC	O
/	VB	O
gcallback	NN	O
calls	VBZ	O
gtk_main_quit()	JJ	O
gtk_init_add(	NN	O
(	(	O
GtkFunction	NNP	O
)gcallback	NNP	O
,	,	O

NULL	NNP	I-API
)	)	L-API
;	:	O
if	IN	O
(	(	O
type	NN	O
&	CC	O
MB_YESNO	NNP	O
)	)	O
{	(	O
dialog	NN	O

=	NNP	O
gtk_message_dialog_new(	NN	B-API
GTK_WINDOW(	NNP	I-API
window	NN	I-API
)	)	L-API
,	,	O
GTK_DIALOG_DESTROY_WITH_PARENT	NNP	O
,	,	O
GTK_MESSAGE_QUESTION	NNP	O
,	,	O
GTK_BUTTONS_YES_NO	NNP	O

,	,	I-API
text	NN	I-API
)	)	L-API
;	:	O
}	)	O
else	RB	O
{	(	O
dialog	NN	O
=	NNP	O
gtk_message_dialog_new(	NN	B-API
GTK_WINDOW(	NNP	I-API

window	NN	I-API
)	)	L-API
,	,	O
GTK_DIALOG_DESTROY_WITH_PARENT	NNP	O
,	,	O
GTK_MESSAGE_INFO	NNP	O
,	,	O
GTK_BUTTONS_OK	NNP	O
,	,	O
text	NN	O
)	)	O

;	:	O
}	)	O
gtk_window_set_title(	VBP	O
GTK_WINDOW(	NNP	B-API
dialog	NN	I-API
)	)	L-API
,	,	O
caption	NN	O
)	)	O
;	:	O
gint	NN	O

result	NN	O
=	NNP	O
gtk_dialog_run(	NN	B-API
GTK_DIALOG(	NNP	I-API
dialog	NN	I-API
)	)	L-API
)	)	O
;	:	O
gtk_main()	NN	U-API
;	:	O
gtk_widget_destroy(	CC	O

dialog	NN	I-API
)	)	L-API
;	:	O
if	IN	O
(	(	O
type	NN	O
&	CC	O
MB_YESNO	NNP	O
)	)	O
{	(	O
switch	NN	O

(	(	O
result	NN	O
)	)	O
{	(	O
default	NN	O
:	:	O
case	NN	O
GTK_RESPONSE_DELETE_EVENT	NNP	O
:	:	O
case	NN	O
GTK_RESPONSE_NO	NNP	O

:	:	O
return	NN	O
IDNO	NNP	O
;	:	O
break	NN	U-API
;	:	O
case	NN	O
GTK_RESPONSE_YES	NNP	O
:	:	O
return	NN	O
IDYES	NNP	O

;	:	O
break	NN	U-API
;	:	O
}	)	O
}	)	O
return	VBP	O
IDOK	NNP	O
;	:	O
}	)	O
Now	RB	O
,	,	O

I	PRP	O
am	VBP	O
by	IN	O
no	DT	O
means	NNS	O
an	DT	O
experienced	JJ	O
GTK	NNP	O
programmer	NN	O
,	,	O
and	CC	O

I	PRP	O
realise	VBP	O
that	IN	O
I'm	NNP	O
probably	RB	O
doing	VBG	O
something(	JJ	B-API
s	NN	I-API
)	)	L-API
horribly	RB	O
wrong	JJ	O

.	.	O
However	RB	O
,	,	O
my	PRP$	O
problem	NN	O
is	VBZ	O
that	IN	O
the	DT	O
last	JJ	O
dialog	NN	O
popped	VBD	O

up	RP	O
with	IN	O
this	DT	U-API
function	NN	O
stays	VBZ	O
around	IN	O
until	IN	O
the	DT	O
process	NN	O
exits	NNS	O
.	.	O

Any	DT	O
ideas	NNS	O
?	.	O
@Ryan	JJ	O
That's	NNP	O
correct	NN	O
but	CC	O
it	PRP	O
actually	RB	O
makes	VBZ	O
the	DT	O

tags	NNS	O
with	IN	O
the	DT	O
least	JJS	O
number	NN	O
,	,	O
larger	JJR	O
.	.	O
This	DT	O
code	NN	O
has	VBZ	O

been	VBN	O
tested	VBN	O
:	:	O
$artist	JJ	O
=	NNP	O
array(	NN	B-API
"the	NNP	I-API
roots	NNS	I-API
"	NNP	I-API
,	,	I-API
"michael	NNP	I-API

jackson	NNP	I-API
"	NNP	I-API
,	,	I-API
"billy	RB	I-API
idol	JJ	I-API
"	NNP	I-API
,	,	I-API
"more	NNP	I-API
"	NNP	I-API
,	,	I-API
"and	NNP	I-API

more	RBR	I-API
"	JJ	I-API
,	,	I-API
"and_YET_MORE	NNP	I-API
"	NNP	I-API
)	)	L-API
;	:	O
$count	NNP	O
=	NNP	O
array(	VBD	O
5	CD	O

,	,	O
3	CD	O
,	,	O
9	CD	O
,	,	O
1	CD	O
,	,	O
1	CD	O
,	,	O
3	CD	O
)	)	O

;	:	O
$highest	JJS	O
=	NN	O
max(	NN	B-API
$count	NN	I-API
)	)	L-API
;for	NN	O
(	(	O
$x	JJ	O
=	VBZ	O
0	CD	O

;	:	O
$x	NNP	O
<	NNP	O
count(	VBP	O
$artist	NN	O
)	)	O
;	:	O
$x	CC	O
+	NNP	O
+	NNP	O
)	)	O

{	(	O
$normalized	VBN	O
=	NN	O
(	(	O
$highest	JJS	O
-	:	O
$count	NN	O
[	JJ	O
$x	NNP	O
]	NNP	O
+1	NNP	O

)	)	O
/	VBP	O
$highest	JJS	O
;	:	O
$heading	VBG	O
=	NNP	O
ceil(	NN	O
$normalized	VBD	O
*	RB	O
6	CD	O
)	)	O

;	:	O
/	CC	O
/	$	O
6	CD	O
heading	VBG	O
types	NNS	O
echo	VBP	O
"	JJ	O
<h	NNP	O
$heading	NNP	O
>	NNP	O

{	(	O
$artist	JJ	O
[	NNP	O
$x	NNP	O
]	NNP	O
}	)	O
<	NNP	O
/h	NNP	O
$heading	VBG	O
>	NNP	O
"	NNP	O

;	:	O
}	)	O
On	IN	O
a	DT	O
high	JJ	O
level	NN	O
,	,	O
you	PRP	O
have	VBP	O
no	DT	O
other	JJ	O

choice	NN	O
then	RB	O
to	TO	O
walk	VB	O
through	IN	O
the	DT	O
whole	JJ	O
Dictionary	NNP	O
and	CC	O
look	VB	O
at	IN	O

each	DT	O
value	NN	O
.	.	O
Maybe	RB	O
this	DT	O
helps	VBZ	O
:	:	O
http	NN	O
:	:	O
/	NN	O
/bytes	NNS	O

.	.	O
com	NN	O
/forum	NN	O
/thread563638	NNP	O
.	.	O
html	NN	O
Copy	NNP	O
/Pasting	VBG	O
from	IN	O
John	NNP	O
Timney	NNP	O

:	:	O
Dictionary	JJ	O
<string	NN	O
,	,	O
string	VBG	O
>	JJ	O
s	NNS	O
=	VBP	O
new	JJ	O
Dictionary	NNP	B-API
<string	NN	I-API

,	,	O
string	VBG	O
>	NNP	O
(	(	O
)	)	O
;	:	O
s.Add(	CC	O
"1	NNP	O
"	NNP	O
,	,	O
"a	NNP	O

Item	NNP	I-API
"	NNP	I-API
)	)	L-API
;	:	O
s.Add(	CC	O
"2	NNP	O
"	NNP	O
,	,	O
"c	NNP	O
Item	NNP	O
"	NNP	O

)	)	L-API
;	:	O
s.Add(	CC	B-API
"3	NNP	I-API
"	NNP	I-API
,	,	I-API
"b	NNP	I-API
Item	NNP	I-API
"	NNP	I-API
)	)	L-API
;	:	O

List	NNP	O
<KeyValuePair	NNP	O
<string	NNP	O
,	,	O
string	VBG	O
>	JJ	O
>	JJ	O
myList	NN	O
=	NNP	O
new	JJ	O
List	NNP	O

<KeyValuePair	NN	O
<string	VBG	O
,	,	O
string	VBG	O
>	JJ	O
>	NNP	O
(	(	O
s	NN	O
)	)	O
;	:	O
myList.Sort(	CC	O

delegate(	VB	O
KeyValuePair	NNP	O
<string	NNP	O
,	,	O
string	VBG	O
>	NNP	O
firstPair	NN	O
,	,	O
KeyValuePair	NNP	O
<string	NNP	O
,	,	O

string	VBG	I-API
>	NNP	I-API
nextPair	NN	I-API
)	)	L-API
{	(	O
return	NN	O
firstPair.Value.CompareTo(	RB	O
nextPair	RB	O
.	.	O
Value	NNP	O
)	)	O

;	:	O
}	)	O
)	)	O
;	:	O
using	VBG	O
System	NNP	O
.	.	O
Linq	NNP	O
.	.	O
Enumerable	JJ	O
;	:	O

...	:	O
List	NNP	O
<KeyValuePair	NNP	O
<string	NNP	O
,	,	O
string	VBG	O
>	JJ	O
>	JJ	O
myList	NN	O
=	NNP	O
aDictionary.ToList()	NN	O

;	:	O
myList.Sort(	CC	O
delegate(	VB	O
KeyValuePair	NNP	O
<string	NNP	O
,	,	O
string	VBG	O
>	JJ	O
pair1	NN	O
,	,	O
KeyValuePair	NNP	O

<string	NNP	I-API
,	,	I-API
string	VBG	I-API
>	NNP	I-API
pair2	NN	I-API
)	)	L-API
{	(	O
return	NN	O
pair1.Value.CompareTo(	NN	O
pair2	NN	O
.	.	O

Value	NNP	I-API
)	)	L-API
;	:	O
}	)	O
)	)	O
;	:	O
Since	IN	O
you're	NN	O
targeting	VBG	O
.	.	O
net	JJ	O

2	CD	O
.	.	O
0	CD	O
or	CC	O
above	RB	O
,	,	O
you	PRP	O
can	MD	O
simplify	VB	O
this	DT	O
into	IN	O

lambda	JJ	O
syntax	NN	O
--	:	O
it's	JJ	O
equivalent	JJ	O
but	CC	O
shorter	JJR	O
.	.	O
If	IN	O
you're	JJ	O
targeting	VBG	O

.	.	O
net	JJ	O
2	CD	O
.	.	O
0	CD	O
you	PRP	O
can	MD	O
only	RB	O
use	VB	O
this	DT	O
syntax	NN	O

if	IN	O
you're	JJ	O
using	VBG	O
the	DT	O
compiler	NN	O
from	IN	O
vs2008	NN	O
(	(	O
or	CC	O
above	RB	O
)	)	O

.	.	O
var	JJ	O
myList	NN	O
=	NNP	O
aDictionary.ToList()	NN	U-API
;	:	O
myList.Sort(	CC	O
(	(	O
pair1	NN	O
,	,	O
pair2	NN	O

)	)	O
=	VBZ	O
>	JJ	B-API
pair1.Value.CompareTo(	NN	I-API
pair2	NN	I-API
.	.	I-API
Value	NNP	I-API
)	)	L-API
)	)	O
;	:	O
I	PRP	O

am	VBP	O
working	VBG	O
on	IN	O
a	DT	O
collection	NN	O
of	IN	O
classes	NNS	O
used	VBN	O
for	IN	O
video	JJ	O
playback	NN	O

and	CC	O
recording	NN	O
.	.	O
I	PRP	O
have	VBP	O
one	CD	O
main	JJ	O
class	NN	O
which	WDT	O
acts	VBZ	O
like	IN	O

the	DT	O
public	JJ	O
interface	NN	O
,	,	O
with	IN	O
methods	NNS	O
like	IN	O
play()	NN	O
,	,	O
stop()	NN	O
,	,	O

pause()	NN	O
,	,	O
record()	NN	O
etc	NN	O
...	:	O
Then	RB	O
I	PRP	O
have	VBP	O
workhorse	VBN	O
classes	NNS	O
which	WDT	O

do	VBP	O
the	DT	O
video	NN	O
decoding	NN	O
and	CC	O
video	NN	O
encoding	NN	O
.	.	O
I	PRP	O
just	RB	O
learned	VBD	O

about	IN	O
the	DT	O
existence	NN	O
of	IN	O
nested	JJ	O
classes	NNS	O
in	IN	O
C	NNP	O
+	NNP	O
+	NNP	O
,	,	O

and	CC	O
I'm	NNP	O
curious	JJ	O
to	TO	O
know	VB	O
what	WP	O
programmers	NNS	O
think	VBP	O
about	IN	O
using	VBG	O
them	PRP	O

.	.	O
I	PRP	O
am	VBP	O
a	DT	O
little	JJ	O
wary	JJ	O
and	CC	O
not	RB	O
really	RB	O
sure	JJ	O
what	WP	O

the	DT	O
benefits	NNS	O
/drawbacks	NNS	O
are	VBP	O
,	,	O
but	CC	O
they	PRP	O
seem	VBP	O
(	(	O
according	VBG	O
to	TO	O

the	DT	O
book	NN	O
I'm	NNP	O
reading	NN	O
)	)	O
to	TO	O
be	VB	O
used	VBN	O
in	IN	O
cases	NNS	O
such	JJ	O

as	IN	O
mine	NN	O
.	.	O
The	DT	O
book	NN	O
suggests	VBZ	O
that	IN	O
in	IN	O
a	DT	O
scenario	NN	O
like	IN	O

mine	NN	O
,	,	O
a	DT	O
good	JJ	O
solution	NN	O
would	MD	O
be	VB	O
to	TO	O
nest	VB	O
the	DT	O
workhorse	NN	O

classes	VBZ	O
inside	IN	O
the	DT	O
interface	NN	O
class	NN	O
,	,	O
so	IN	O
there	EX	O
are	VBP	O
no	DT	O
separate	JJ	O

files	NNS	O
for	IN	O
classes	NNS	O
the	DT	O
client	NN	O
is	VBZ	O
not	RB	O
meant	VBN	O
to	TO	O
use	VB	O
,	,	O

and	CC	O
to	TO	O
avoid	VB	O
any	DT	O
possible	JJ	O
naming	NN	O
conflicts	NNS	O
?	.	O
I	PRP	O
don't	VBP	O
know	VB	O

about	IN	O
these	DT	O
justifications	NNS	O
.	.	O
Nested	VBN	O
classes	NNS	O
are	VBP	O
a	DT	O
new	JJ	O
concept	NN	O
to	TO	O

me	PRP	O
.	.	O
Just	NNP	O
want	VBP	O
to	TO	O
see	VB	O
what	WP	O
programmers	NNS	O
think	VBP	O
about	IN	O
the	DT	O

issue	NN	O
.	.	O
I	PRP	O
think	VBP	O
one	CD	O
of	IN	O
the	DT	O
major	JJ	O
problems	NNS	O
(	(	O
which	WDT	O

is	VBZ	O
being	VBG	O
addressed	VBN	O
in	IN	O
PHP	NNP	B-API
6	CD	I-API
)	)	L-API
is	VBZ	O
register_globals	NNS	O
.	.	O
Right	RB	O

now	RB	O
one	CD	O
of	IN	O
the	DT	O
standard	JJ	O
methods	NNS	O
used	VBN	O
to	TO	O
avoid	VB	O
register_globals	NNS	O
is	VBZ	O

to	TO	O
use	VB	O
the	DT	O
$_REQUEST	NN	O
,	,	O
$_GET	''	O
or	CC	O
$_POST	VB	O
arrays	NNS	O
.	.	O
The	DT	O

"correct	JJ	O
"	NNP	O
way	NN	O
to	TO	O
do	VB	O
it	PRP	O
(	(	O
as	IN	O
of	IN	O
5	CD	O
.	.	O

2	CD	O
,	,	O
although	IN	O
it's	NN	O
a	DT	O
little	JJ	O
buggy	NN	O
there	RB	O
,	,	O
but	CC	O
stable	JJ	O

as	IN	O
of	IN	O
6	CD	O
,	,	O
which	WDT	O
is	VBZ	O
coming	VBG	O
soon	RB	O
)	)	O
is	VBZ	O
through	IN	O

filters	NNS	O
.	.	O
So	RB	O
instead	RB	O
of	IN	O
:	:	O
$username	NN	O
=	VBZ	O
$_POST	JJ	B-API
[	NNP	I-API
"username	NNP	I-API

"	NNP	O
]	NNP	O
;	:	O
you	PRP	O
would	MD	O
do	VB	O
:	:	O
$username	VB	O
=	NNP	O
filter_input(	NN	B-API
INPUT_POST	NNP	I-API

,	,	I-API
'	''	I-API
username	JJ	I-API
'	POS	I-API
,	,	I-API
FILTER_SANITIZE_STRING	NNP	I-API
)	)	L-API
;	:	O
or	CC	O
even	RB	O
just	RB	O

:	:	O
$username	JJ	O
=	NNP	O
filter_input(	NN	B-API
INPUT_POST	NNP	I-API
,	,	I-API
'	''	I-API
username	JJ	I-API
'	POS	I-API
)	)	L-API
;	:	O

This	DT	O
is	VBZ	O
pretty	JJ	O
trivial	JJ	O
and	CC	O
obvious	JJ	O
,	,	O
but	CC	O
be	VB	O
sure	JJ	O
to	TO	O

session_destroy	VB	O
after	IN	O
every	DT	O
use	NN	O
.	.	O
This	DT	O
can	MD	O
be	VB	O
difficult	JJ	O
to	TO	O
implement	VB	O

if	IN	O
the	DT	O
user	NN	O
does	VBZ	O
not	RB	O
log	VB	O
out	RP	O
explicitly	RB	O
,	,	O
so	IN	O
a	DT	O

timer	NN	O
can	MD	O
be	VB	O
set	VBN	O
to	TO	O
do	VB	O
this	DT	O
.	.	O
Here	RB	O
is	VBZ	O
a	DT	O

good	JJ	O
tutorial	NN	O
on	IN	O
setTimer()	NN	O
and	CC	O
clearTimer()	NN	O
.	.	O
When	WRB	O
is	VBZ	O
it	PRP	O
appropriate	JJ	O

to	TO	O
use	VB	O
an	DT	O
unsigned	JJ	O
variable	NN	O
over	IN	O
a	DT	O
signed	JJ	O
one	CD	O
?	.	O
What	WP	O

about	IN	O
in	IN	O
a	DT	O
for	IN	O
loop	NN	O
?	.	O
I	PRP	O
hear	VBP	O
a	DT	O
lot	NN	O
of	IN	O

opinions	NNS	O
about	IN	O
this	DT	O
and	CC	O
I	PRP	O
wanted	VBD	O
to	TO	O
see	VB	O
if	IN	O
there	EX	O
was	VBD	O

anything	NN	O
resembling	VBG	O
a	DT	O
consensus	NN	O
.	.	O
for	IN	O
(	(	O
unsigned	JJ	O
int	NN	O
i	NN	O
=	VBP	O

0	CD	O
;	:	O
i	JJ	O
<	VBP	O
someThing.length()	NN	O
;	:	O
i	CC	O
+	VBP	O
+	NNP	O
)	)	O
{	(	O

SomeThing	VBG	O
var	JJ	O
=	JJ	O
someThing.at(	NN	B-API
i	NN	I-API
)	)	L-API
;	:	O
/	CC	O
/	VB	O
You	PRP	O
get	VBP	O

the	DT	O
idea	NN	O
.	.	O
}	)	O
I	PRP	O
know	VBP	O
Java	NNP	O
doesn't	NNS	O
have	VBP	O
unsigned	VBN	O
values	NNS	O

,	,	O
and	CC	O
that	DT	O
must	MD	O
have	VB	O
been	VBN	O
a	DT	O
concious	JJ	O
decision	NN	O
on	IN	O
Sun	NNP	O

Microsystems	NNPS	O
'	POS	O
part	NN	O
.	.	O
Personally	RB	O
,	,	O
I've	NNP	O
played	VBN	O
with	IN	O
several	JJ	O
of	IN	O

the	DT	O
built-in	NN	O
options	NNS	O
on	IN	O
an	DT	O
XML-heavy	JJ	O
project	NN	O
and	CC	O
have	VBP	O
settled	VBN	O
on	IN	O

pulldom	NN	O
as	IN	O
the	DT	O
best	JJS	O
choice	NN	O
for	IN	O
less	JJR	O
complex	JJ	O
documents	NNS	O
.	.	O
Especially	RB	O

for	IN	O
small	JJ	O
simple	JJ	O
stuff	NN	O
,	,	O
I	PRP	O
like	VBP	O
the	DT	O
event-driven	JJ	O
theory	NN	O
of	IN	O

parsing	VBG	O
rather	RB	O
than	IN	O
setting	VBG	O
up	RP	O
a	DT	O
whole	JJ	O
slew	NN	O
of	IN	O
callbacks	NNS	O
for	IN	O

a	DT	O
relatively	RB	O
simple	JJ	O
structure	NN	O
.	.	O
Here	RB	O
is	VBZ	O
a	DT	O
good	JJ	O
quick	JJ	O
discussion	NN	O

of	IN	O
how	WRB	O
to	TO	O
use	VB	O
the	DT	O
API	NNP	O
.	.	O
What	WP	O
I	PRP	O
like	VBP	O
:	:	O

you	PRP	O
can	MD	O
handle	VB	O
the	DT	O
parsing	NN	O
in	IN	O
a	DT	O
for	IN	O
loop	NN	O
rather	RB	O
than	IN	O

using	VBG	O
callbacks	NNS	O
.	.	O
You	PRP	O
also	RB	O
delay	VBP	O
full	JJ	O
parsing	NN	O
(	(	O
the	DT	O
"pull	NN	O

"	NNP	I-API
part	NN	I-API
)	)	L-API
and	CC	O
only	RB	O
get	VB	O
additional	JJ	O
detail	NN	O
when	WRB	O
you	PRP	O
call	VBP	O

expandNode()	RB	O
.	.	O
This	DT	O
satisfies	VBZ	O
my	PRP$	O
general	JJ	O
requirement	NN	O
for	IN	O
"responsible	JJ	O
"	JJ	O
efficiency	NN	O

without	IN	O
sacrificing	VBG	O
ease	NN	O
of	IN	O
use	NN	O
and	CC	O
simplicity	NN	O
.	.	O
Take	VB	O
a	DT	O
look	NN	O

at	IN	O
the	DT	O
CHECKSUM	NNP	O
command	NN	O
:	:	O
SELECT	NNP	O
CHECKSUM_AGG(	NNP	B-API
BINARY_CHECKSUM(	NNP	I-API
*	NNP	I-API
)	)	L-API
)	)	O

FROM	NNP	O
sample_table	JJ	O
WITH	NNP	O
(	(	O
NOLOCK	NNP	O
)	)	O
;	:	O
That	WDT	O
will	MD	O
return	VB	O
the	DT	O

same	JJ	O
number	NN	O
each	DT	O
time	NN	O
it's	JJ	O
run	NN	O
as	RB	O
long	RB	O
as	IN	O
the	DT	O
table	NN	O

contents	NNS	O
haven't	RB	O
changed	VBD	O
.	.	O
See	VB	O
my	PRP$	O
post	NN	O
on	IN	O
this	DT	O
for	IN	O
more	JJR	O

information	NN	O
:	:	O
CHECKSUM	NNP	O
Here's	NNP	O
how	WRB	O
I	PRP	O
used	VBD	O
it	PRP	O
to	TO	O
rebuild	VB	O
cache	NN	O

dependencies	NNS	O
when	WRB	O
tables	NNS	O
changed	VBD	O
:	:	O
ASP	NNP	O
.	.	O
NET	JJ	O
1	CD	O
.	.	O
1	CD	O

database	NN	O
cache	NN	O
dependency	NN	O
(	(	O
without	IN	O
triggers	NNS	O
)	)	O
timezone	NN	O
.	.	O
js	NN	O
:	:	O

function	NN	O
ajaxpage()	IN	O
{	(	O
var	JJ	O
url	JJ	O
=	NNP	O
"timezone	NN	O
.	.	O
php	JJ	O
"	NN	O
;	:	O

var	CC	O
visitortime	VB	O
=	JJ	O
new	JJ	O
Date()	NNP	U-API
;	:	O
var	JJ	O
time	NN	O
=	NNP	O
visitortime.getTimezoneOffset()	NN	O
/60	NN	O

;	:	O
var	CC	O
page_request	JJS	O
=	JJ	O
false	RB	O
;	:	O
if	IN	O
(	(	O
window	NN	O
.	.	O
XMLHttpRequest	JJS	O

)	)	L-API
{	(	O
page_request	JJS	O
=	RB	O
new	JJ	O
XMLHttpRequest()	NNP	U-API
;	:	O
}	)	O
else	RB	O
if	IN	O
(	(	O

window	NN	O
.	.	O
ActiveXObject	NNP	O
)	)	O
{	(	O
try	VB	O
{	(	O
page_request	VB	O
=	CD	O
new	JJ	O
ActiveXObject(	NNP	O

"Msxml2	NNP	I-API
.	.	I-API
XMLHTTP	NNP	I-API
"	NNP	I-API
)	)	L-API
;	:	O
}	)	O
catch	NN	O
(	(	O
e	NN	O
)	)	O

{	(	O
try	VB	O
{	(	O
page_request	VB	O
=	CD	O
new	JJ	O
ActiveXObject(	NNP	B-API
"Microsoft	NNP	I-API
.	.	I-API
XMLHTTP	NNP	I-API
"	NNP	I-API

)	)	L-API
;	:	O
}	)	O
catch	NN	O
(	(	O
e	NN	O
)	)	O
{	(	O
}	)	O
}	)	O
}	)	O

else	RB	O
{	(	O
return	NN	O
false	RB	O
;	:	O
}	)	O
page_request	JJS	O
.	.	O
onreadystatechange	NN	O
=	NNP	O
function()	NN	O

{	(	O
loadpage(	JJ	B-API
page_request	NN	I-API
,	,	I-API
containerid	NN	I-API
)	)	L-API
;	:	O
}	)	O
if	IN	O
(	(	O
bustcachevar	NN	O

)	)	L-API
{	(	O
bustcacheparameter	NN	O
=	NNP	O
(	(	O
url.indexOf(	JJ	O
"	NN	O
?	.	O
"	NN	O
)	)	O
!	.	O

=	SYM	O
-	:	O
1	CD	O
)	)	O
?	.	O
"	NNP	O
&	CC	O
"	NNP	O
+new	NNP	O
Date()	NNP	O
.	.	O

getTime()	NN	O
:	:	O
"	NN	O
?	.	O
"	JJ	O
+new	NNP	O
Date()	NNP	O
.	.	O
getTime()	NN	O
;	:	O
}	)	O

page_request.open(	NN	O
'	''	O
GET	NNP	O
'	POS	O
,	,	O
url	JJ	O
+bustcacheparameter	NN	O
+	NNP	O
"	NNP	O
&time	NNP	O
=	NNP	O

"	NNP	I-API
+time	NNP	I-API
,	,	I-API
true	JJ	I-API
)	)	L-API
;	:	O
page_request.send(	CC	B-API
null	NN	I-API
)	)	L-API
;	:	O
}	)	O

function	NN	O
loadpage(	JJ	B-API
page_request	NN	I-API
,	,	I-API
containerid	NN	I-API
)	)	L-API
{	(	O
if	IN	O
(	(	O
page_request	JJS	O
.	.	O

readyState	VB	O
=	JJ	O
=	NNP	O
4	CD	O
&	CC	O
&	CC	O
(	(	O
page_request	JJS	O
.	.	O
status	NN	O
=	JJ	O

=200	NNP	O
|	NNP	O
|	NNP	O
window.location.href.indexOf(	VBD	O
"http	NNP	O
"	NNP	O
)	)	O
=	VBP	O
=	SYM	O
-	:	O
1	CD	O

)	)	L-API
)	)	O
{	(	O
document.write(	NN	O
'	''	O
<meta	JJ	O
http-equiv	JJ	O
=	NN	O
"refresh	NNP	O
"	NNP	O
content	NN	O

=	NNP	O
"0	NNP	O
;url	NNP	O
=http	NN	O
:	:	O
/	JJ	O
/example	NN	O
.	.	O
com	NN	O
/	JJ	O
"	NNP	O

/	NNP	I-API
>	NNP	I-API
'	POS	I-API
)	)	L-API
;	:	O
}	)	O
}	)	O
timezone	NN	O
.	.	O
php	NN	O
:	:	O

<	JJ	O
?php	NNP	O
session_start()	NN	O
;	:	O
$_SESSION	CC	B-API
[	VB	I-API
'	''	I-API
time	NN	I-API
'	''	I-API
]	JJ	I-API
=	NNP	I-API

$_GET	NNP	O
[	NNP	O
'	POS	O
time	NN	O
'	''	O
]	NNS	O
;	:	O
?	.	O
>	VB	O
When	WRB	O
you	PRP	O

want	VBP	O
to	TO	O
use	VB	O
it	PRP	O
add	VB	O
onLoad	JJ	O
=	JJ	O
"ajaxpage	NN	O
(	(	O
)	)	O
;	:	O

to	TO	O
the	DT	O
body	NN	O
tag	NN	O
and	CC	O
it	PRP	O
should	MD	O
cause	VB	O
the	DT	O
timezone	NN	O
to	TO	O

be	VB	O
stored	VBN	O
in	IN	O
the	DT	O
PHP	NNP	O
session	NN	O
variable	JJ	O
$_SESSION	NN	O
[	NNP	O
'	POS	O
time	NN	O

'	''	O
]	JJ	O
Edit	NN	O
:	:	O
P	NNP	O
.	.	O
S	NNP	O
.	.	O
This	DT	O
is	VBZ	O
untested	JJ	O

.	.	O
There	EX	O
are	VBP	O
several	JJ	O
ways	NNS	O
to	TO	O
do	VB	O
this	DT	O
.	.	O
Common	NNP	O
methods	NNS	O

use	VBP	O
recursion	NN	O
,	,	O
memoization	NN	O
,	,	O
or	CC	O
dynamic	JJ	O
programming	NN	O
.	.	O
The	DT	O
basic	JJ	O

idea	NN	O
is	VBZ	O
that	IN	O
you	PRP	O
produce	VBP	O
a	DT	O
list	NN	O
of	IN	O
all	DT	O
strings	NNS	O
of	IN	O

length	NN	O
1	CD	O
,	,	O
then	RB	O
in	IN	O
each	DT	O
iteration	NN	O
,	,	O
for	IN	O
all	DT	O
strings	NNS	O

produced	VBN	O
in	IN	O
the	DT	O
last	JJ	O
iteration	NN	O
,	,	O
add	VBP	O
that	IN	O
string	VBG	O
concatenated	VBN	O
with	IN	O

each	DT	O
character	NN	O
in	IN	O
the	DT	O
string	NN	O
individually	RB	O
.	.	O
(	(	O
the	DT	O
variable	NN	O
index	NN	O

in	IN	O
the	DT	O
code	NN	O
below	IN	O
keeps	NNS	O
track	NN	O
of	IN	O
the	DT	O
start	NN	O
of	IN	O
the	DT	O

last	JJ	O
and	CC	O
the	DT	O
next	JJ	O
iteration	NN	O
)	)	O
Some	DT	O
pseudocode	NN	O
:	:	O
list	NN	O
=	IN	O

originalString.split(	NN	O
'	''	O
'	POS	O
)	)	O
index	NN	O
=	NNP	O
(	(	O
0	CD	O
,	,	O
0	CD	O
)	)	O

list	NN	O
=	NNP	O
[	NNP	O
"	NNP	O
"	NNP	O
]	NNP	O
for	IN	O
iteration	NN	O
n	NN	O
in	IN	O
1	CD	O

to	TO	O
y	VB	O
:	:	O
index	NN	O
=	NNP	O
(	(	O
index	NN	O
[1	NNP	O
]	NNP	O
,	,	O
len(	JJ	O

list	NN	I-API
)	)	L-API
)	)	O
for	IN	O
string	VBG	O
s	NN	O
in	IN	O
list.subset(	JJ	O
index	NN	O
[0	VBD	O
]	NNP	O

to	TO	O
end	VB	O
)	)	O
:	:	O
for	IN	O
character	NN	O
c	NN	O
in	IN	O
originalString	VBG	O
:	:	O
list.add(	NN	O

s	NN	O
+	NNP	O
c	NN	O
)	)	O
you'd	NN	O
then	RB	O
need	VB	O
to	TO	O
remove	VB	O
all	DT	O
strings	NNS	O

less	JJR	O
than	IN	O
x	NN	O
in	IN	O
length	NN	O
,	,	O
they'll	RB	O
be	VB	O
the	DT	O
first	JJ	O
(	(	O

x-1	JJ	I-API
)	)	L-API
*	FW	O
len(	FW	O
originalString	VBG	O
)	)	O
entries	NNS	O
in	IN	O
the	DT	O
list	NN	O
.	.	O

I	PRP	O
just	RB	O
whipped	VBD	O
this	DT	O
up	RP	O
quick	NN	O
in	IN	O
Ruby	NNP	O
:	:	O
def	NN	O
perms(	NN	O

x	NNP	I-API
,	,	I-API
y	NN	I-API
,	,	I-API
possible_characters	NNS	I-API
)	)	L-API
all	DT	O
=	VBP	O
[	JJ	O
"	NNP	O
"	NNP	O

]	NNP	O
current_array	NN	O
=	NNP	O
all	DT	O
.	.	O
clone	NN	B-API
1.upto(	CD	I-API
y	NN	I-API
)	)	L-API
{	(	O
|iteration	NN	O

|	NNP	O
next_array	NN	O
=	NNP	O
[	NNP	O
]	NNP	O
current_array	NN	O
.	.	O
each	DT	O
{	(	O
|string	VBG	O
|	JJ	O

possible_characters	NNS	O
.	.	O
each	DT	O
{	(	O
|c	JJ	O
|	NNP	O
value	NN	O
=	NNP	O
string	VBG	O
+	NNP	O
c	JJ	O

next_array	NN	O
.	.	O
insert	JJ	O
next_array	NN	O
.	.	O
length	NN	O
,	,	O
value	NN	O
all	DT	O
.	.	O
insert	VB	O

all	DT	O
.	.	O
length	NN	O
,	,	O
value	NN	O
}	)	O
}	)	O
current_array	JJ	O
=	JJ	O
next_array	NN	O
}	)	O

all	DT	O
.	.	O
delete_if	VB	O
{	(	O
|string	VBG	O
|	NN	O
string	NN	O
.	.	O
length	NN	O
<	JJ	O
x	NNP	O

}end	NNP	O
You	PRP	O
might	MD	O
look	VB	O
into	IN	O
language	NN	O
API	NNP	O
for	IN	O
built	VBN	O
in	IN	O
permutation	NN	O

type	NN	O
functions	NNS	O
,	,	O
and	CC	O
you	PRP	O
might	MD	O
be	VB	O
able	JJ	O
to	TO	O
write	VB	O
more	JJR	O

optimized	JJ	O
code	NN	O
,	,	O
but	CC	O
if	IN	O
the	DT	O
numbers	NNS	O
are	VBP	O
all	PDT	O
that	DT	O
high	JJ	O

,	,	O
I'm	NNP	O
not	RB	O
sure	JJ	O
there	EX	O
is	VBZ	O
much	RB	O
of	IN	O
a	DT	O
way	NN	O
around	IN	O

having	VBG	O
a	DT	O
lot	NN	O
of	IN	O
results	NNS	O
.	.	O
Anyways	NNP	O
,	,	O
the	DT	O
idea	NN	O
behind	IN	O

the	DT	O
code	NN	O
is	VBZ	O
start	JJ	O
with	IN	O
string	NN	O
of	IN	O
length	NN	O
0	CD	O
,	,	O
then	RB	O

keep	VB	O
track	NN	O
of	IN	O
all	PDT	O
the	DT	O
strings	NNS	O
of	IN	O
length	NN	O
Z	NNP	O
where	WRB	O
Z	NNP	O

is	VBZ	O
the	DT	O
current	JJ	O
size	NN	O
in	IN	O
the	DT	O
iteration	NN	O
.	.	O
Then	RB	O
,	,	O
go	VBP	O

through	IN	O
each	DT	O
string	NN	O
and	CC	O
append	VB	O
each	DT	O
character	NN	O
onto	IN	O
each	DT	O
string	NN	O
.	.	O

Finally	RB	O
at	IN	O
the	DT	O
end	NN	O
,	,	O
remove	VB	O
any	DT	O
that	WDT	O
were	VBD	O
below	IN	O
the	DT	O

x	NNP	O
threshold	NN	O
and	CC	O
return	VB	O
the	DT	O
result	NN	O
.	.	O
I	PRP	O
didn't	VBP	O
test	VB	O
it	PRP	O

with	IN	O
potentially	RB	O
meaningless	JJ	O
input	NN	O
(	(	O
null	JJ	O
character	NN	O
list	NN	O
,	,	O
weird	JJ	O
values	NNS	O

of	IN	O
x	NN	O
and	CC	O
y	NN	O
,	,	O
etc	NN	O
)	)	O
.	.	O

