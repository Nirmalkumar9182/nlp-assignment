This	DT
is	VBZ
pretty	JJ
trivial	JJ
and	CC
obvious	JJ
,	,
but	CC
be	VB
sure	JJ
to	TO
session_destroy	VB
after	IN
every	DT
use	NN
.	.
This	DT
can	MD
be	VB
difficult	JJ
to	TO
implement	VB
if	IN
the	DT
user	NN
does	VBZ
not	RB
log	VB
out	RP
explicitly	RB
,	,
so	IN
a	DT
timer	NN
can	MD
be	VB
set	VBN
to	TO
do	VB
this	DT
.	.
Here	RB
is	VBZ
a	DT
good	JJ
tutorial	NN
on	IN
setTimer()	NN
and	CC
clearTimer()	NN
.	.
		
When	WRB
is	VBZ
it	PRP
appropriate	JJ
to	TO
use	VB
an	DT
unsigned	JJ
variable	NN
over	IN
a	DT
signed	JJ
one	CD
?	.
What	WP
about	IN
in	IN
a	DT
for	IN
loop	NN
?	.
I	PRP
hear	VBP
a	DT
lot	NN
of	IN
opinions	NNS
about	IN
this	DT
and	CC
I	PRP
wanted	VBD
to	TO
see	VB
if	IN
there	EX
was	VBD
anything	NN
resembling	VBG
a	DT
consensus	NN
.	.
for	IN
(	(
unsigned	JJ
int	NN
i	NN
=	VBP
0	CD
;	:
i	JJ
<	VBP
someThing.length()	NN
;	:
i	CC
+	VBP
+	NNP
)	)
{	(
SomeThing	VBG
var	JJ
=	JJ
someThing.at(	NN
i	NN
)	)
;	:
/	CC
/	VB
You	PRP
get	VBP
the	DT
idea	NN
.	.
}	)
I	PRP
know	VBP
Java	NNP
doesn't	NNS
have	VBP
unsigned	VBN
values	NNS
,	,
and	CC
that	DT
must	MD
have	VB
been	VBN
a	DT
concious	JJ
decision	NN
on	IN
Sun	NNP
Microsystems	NNPS
'	POS
part	NN
.	.
		
Personally	RB
,	,
I've	NNP
played	VBN
with	IN
several	JJ
of	IN
the	DT
built-in	NN
options	NNS
on	IN
an	DT
XML-heavy	JJ
project	NN
and	CC
have	VBP
settled	VBN
on	IN
pulldom	NN
as	IN
the	DT
best	JJS
choice	NN
for	IN
less	JJR
complex	JJ
documents	NNS
.	.
Especially	RB
for	IN
small	JJ
simple	JJ
stuff	NN
,	,
I	PRP
like	VBP
the	DT
event-driven	JJ
theory	NN
of	IN
parsing	VBG
rather	RB
than	IN
setting	VBG
up	RP
a	DT
whole	JJ
slew	NN
of	IN
callbacks	NNS
for	IN
a	DT
relatively	RB
simple	JJ
structure	NN
.	.
Here	RB
is	VBZ
a	DT
good	JJ
quick	JJ
discussion	NN
of	IN
how	WRB
to	TO
use	VB
the	DT
API	NNP
.	.
What	WP
I	PRP
like	VBP
:	:
you	PRP
can	MD
handle	VB
the	DT
parsing	NN
in	IN
a	DT
for	IN
loop	NN
rather	RB
than	IN
using	VBG
callbacks	NNS
.	.
You	PRP
also	RB
delay	VBP
full	JJ
parsing	NN
(	(
the	DT
"pull	NN
"	NNP
part	NN
)	)
and	CC
only	RB
get	VB
additional	JJ
detail	NN
when	WRB
you	PRP
call	VBP
expandNode()	RB
.	.
This	DT
satisfies	VBZ
my	PRP$
general	JJ
requirement	NN
for	IN
"responsible	JJ
"	JJ
efficiency	NN
without	IN
sacrificing	VBG
ease	NN
of	IN
use	NN
and	CC
simplicity	NN
.	.
		
Take	VBP
a	DT
look	NN
at	IN
the	DT
CHECKSUM	NNP
command	NN
:	:
SELECT	NNP
CHECKSUM_AGG(	NNP
BINARY_CHECKSUM(	NNP
*	NNP
)	)
)	)
FROM	NNP
sample_table	JJ
WITH	NNP
(	(
NOLOCK	NNP
)	)
;	:
That	WDT
will	MD
return	VB
the	DT
same	JJ
number	NN
each	DT
time	NN
it's	JJ
run	NN
as	RB
long	RB
as	IN
the	DT
table	NN
contents	NNS
haven't	RB
changed	VBD
.	.
See	VB
my	PRP$
post	NN
on	IN
this	DT
for	IN
more	JJR
information	NN
:	:
CHECKSUM	NNP
Here's	NNP
how	WRB
I	PRP
used	VBD
it	PRP
to	TO
rebuild	VB
cache	NN
dependencies	NNS
when	WRB
tables	NNS
changed	VBD
:	:
ASP	NNP
.	.
NET	JJ
1	CD
.	.
1	CD
database	NN
cache	NN
dependency	NN
(	(
without	IN
triggers	NNS
)	)
		
timezone	NN
.	.
js	NN
:	:
function	NN
ajaxpage()	IN
{	(
var	JJ
url	JJ
=	NNP
"timezone	NN
.	.
php	JJ
"	NN
;	:
var	CC
visitortime	VB
=	JJ
new	JJ
Date()	NNP
;	:
var	JJ
time	NN
=	NNP
visitortime.getTimezoneOffset()	NN
/60	NN
;	:
var	CC
page_request	JJS
=	JJ
false	RB
;	:
if	IN
(	(
window	NN
.	.
XMLHttpRequest	JJS
)	)
{	(
page_request	JJS
=	RB
new	JJ
XMLHttpRequest()	NNP
;	:
}	)
else	RB
if	IN
(	(
window	NN
.	.
ActiveXObject	NNP
)	)
{	(
try	VB
{	(
page_request	VB
=	CD
new	JJ
ActiveXObject(	NNP
"Msxml2	NNP
.	.
XMLHTTP	NNP
"	NNP
)	)
;	:
}	)
catch	NN
(	(
e	NN
)	)
{	(
try	VB
{	(
page_request	VB
=	CD
new	JJ
ActiveXObject(	NNP
"Microsoft	NNP
.	.
XMLHTTP	NNP
"	NNP
)	)
;	:
}	)
catch	NN
(	(
e	NN
)	)
{	(
}	)
}	)
}	)
else	RB
{	(
return	NN
false	RB
;	:
}	)
page_request	JJS
.	.
onreadystatechange	NN
=	NNP
function()	NN
{	(
loadpage(	JJ
page_request	NN
,	,
containerid	NN
)	)
;	:
}	)
if	IN
(	(
bustcachevar	NN
)	)
{	(
bustcacheparameter	NN
=	NNP
(	(
url.indexOf(	JJ
"	NN
?	.
"	NN
)	)
!	.
=	SYM
-	:
1	CD
)	)
?	.
"	NNP
&	CC
"	NNP
+new	NNP
Date()	NNP
.	.
getTime()	NN
:	:
"	NN
?	.
"	JJ
+new	NNP
Date()	NNP
.	.
getTime()	NN
;	:
}	)
page_request.open(	NN
'	''
GET	NNP
'	POS
,	,
url	JJ
+bustcacheparameter	NN
+	NNP
"	NNP
&time	NNP
=	NNP
"	NNP
+time	NNP
,	,
true	JJ
)	)
;	:
page_request.send(	CC
null	NN
)	)
;	:
}	)
function	NN
loadpage(	JJ
page_request	NN
,	,
containerid	NN
)	)
{	(
if	IN
(	(
page_request	JJS
.	.
readyState	VB
=	JJ
=	NNP
4	CD
&	CC
&	CC
(	(
page_request	JJS
.	.
status	NN
=	JJ
=200	NNP
|	NNP
|	NNP
window.location.href.indexOf(	VBD
"http	NNP
"	NNP
)	)
=	VBP
=	SYM
-	:
1	CD
)	)
)	)
{	(
document.write(	NN
'	''
<meta	JJ
http-equiv	JJ
=	NN
"refresh	NNP
"	NNP
content	NN
=	NNP
"0	NNP
;url	NNP
=http	NN
:	:
/	JJ
/example	NN
.	.
com	NN
/	JJ
"	NNP
/	NNP
>	NNP
'	POS
)	)
;	:
}	)
}	)
timezone	NN
.	.
php	NN
:	:
<	JJ
?php	NNP
session_start()	NN
;	:
$_SESSION	CC
[	VB
'	''
time	NN
'	''
]	JJ
=	NNP
$_GET	NNP
[	NNP
'	POS
time	NN
'	''
]	NNS
;	:
?	.
>	VB
When	WRB
you	PRP
want	VBP
to	TO
use	VB
it	PRP
add	VB
onLoad	JJ
=	JJ
"ajaxpage	NN
(	(
)	)
;	:
to	TO
the	DT
body	NN
tag	NN
and	CC
it	PRP
should	MD
cause	VB
the	DT
timezone	NN
to	TO
be	VB
stored	VBN
in	IN
the	DT
PHP	NNP
session	NN
variable	JJ
$_SESSION	NN
[	NNP
'	POS
time	NN
'	''
]	JJ
Edit	NN
:	:
P	NNP
.	.
S	NNP
.	.
This	DT
is	VBZ
untested	JJ
.	.
		
There	EX
are	VBP
several	JJ
ways	NNS
to	TO
do	VB
this	DT
.	.
Common	NNP
methods	NNS
use	VBP
recursion	NN
,	,
memoization	NN
,	,
or	CC
dynamic	JJ
programming	NN
.	.
The	DT
basic	JJ
idea	NN
is	VBZ
that	IN
you	PRP
produce	VBP
a	DT
list	NN
of	IN
all	DT
strings	NNS
of	IN
length	NN
1	CD
,	,
then	RB
in	IN
each	DT
iteration	NN
,	,
for	IN
all	DT
strings	NNS
produced	VBN
in	IN
the	DT
last	JJ
iteration	NN
,	,
add	VBP
that	IN
string	VBG
concatenated	VBN
with	IN
each	DT
character	NN
in	IN
the	DT
string	NN
individually	RB
.	.
(	(
the	DT
variable	NN
index	NN
in	IN
the	DT
code	NN
below	IN
keeps	NNS
track	NN
of	IN
the	DT
start	NN
of	IN
the	DT
last	JJ
and	CC
the	DT
next	JJ
iteration	NN
)	)
Some	DT
pseudocode	NN
:	:
list	NN
=	IN
originalString.split(	NN
'	''
'	POS
)	)
index	NN
=	NNP
(	(
0	CD
,	,
0	CD
)	)
list	NN
=	NNP
[	NNP
"	NNP
"	NNP
]	NNP
for	IN
iteration	NN
n	NN
in	IN
1	CD
to	TO
y	VB
:	:
index	NN
=	NNP
(	(
index	NN
[1	NNP
]	NNP
,	,
len(	JJ
list	NN
)	)
)	)
for	IN
string	VBG
s	NN
in	IN
list.subset(	JJ
index	NN
[0	VBD
]	NNP
to	TO
end	VB
)	)
:	:
for	IN
character	NN
c	NN
in	IN
originalString	VBG
:	:
list.add(	NN
s	NN
+	NNP
c	NN
)	)
you'd	NN
then	RB
need	VB
to	TO
remove	VB
all	DT
strings	NNS
less	JJR
than	IN
x	NN
in	IN
length	NN
,	,
they'll	RB
be	VB
the	DT
first	JJ
(	(
x-1	JJ
)	)
*	FW
len(	FW
originalString	VBG
)	)
entries	NNS
in	IN
the	DT
list	NN
.	.
		
I	PRP
just	RB
whipped	VBD
this	DT
up	RP
quick	NN
in	IN
Ruby	NNP
:	:
def	NN
perms(	NN
x	NNP
,	,
y	NN
,	,
possible_characters	NNS
)	)
all	DT
=	VBP
[	JJ
"	NNP
"	NNP
]	NNP
current_array	NN
=	NNP
all	DT
.	.
clone	NN
1.upto(	CD
y	NN
)	)
{	(
|iteration	NN
|	NNP
next_array	NN
=	NNP
[	NNP
]	NNP
current_array	NN
.	.
each	DT
{	(
|string	VBG
|	JJ
possible_characters	NNS
.	.
each	DT
{	(
|c	JJ
|	NNP
value	NN
=	NNP
string	VBG
+	NNP
c	JJ
next_array	NN
.	.
insert	JJ
next_array	NN
.	.
length	NN
,	,
value	NN
all	DT
.	.
insert	VB
all	DT
.	.
length	NN
,	,
value	NN
}	)
}	)
current_array	JJ
=	JJ
next_array	NN
}	)
all	DT
.	.
delete_if	VB
{	(
|string	VBG
|	NN
string	NN
.	.
length	NN
<	JJ
x	NNP
}end	NNP
You	PRP
might	MD
look	VB
into	IN
language	NN
API	NNP
for	IN
built	VBN
in	IN
permutation	NN
type	NN
functions	NNS
,	,
and	CC
you	PRP
might	MD
be	VB
able	JJ
to	TO
write	VB
more	JJR
optimized	JJ
code	NN
,	,
but	CC
if	IN
the	DT
numbers	NNS
are	VBP
all	PDT
that	DT
high	JJ
,	,
I'm	NNP
not	RB
sure	JJ
there	EX
is	VBZ
much	RB
of	IN
a	DT
way	NN
around	IN
having	VBG
a	DT
lot	NN
of	IN
results	NNS
.	.
Anyways	NNP
,	,
the	DT
idea	NN
behind	IN
the	DT
code	NN
is	VBZ
start	JJ
with	IN
string	NN
of	IN
length	NN
0	CD
,	,
then	RB
keep	VB
track	NN
of	IN
all	PDT
the	DT
strings	NNS
of	IN
length	NN
Z	NNP
where	WRB
Z	NNP
is	VBZ
the	DT
current	JJ
size	NN
in	IN
the	DT
iteration	NN
.	.
Then	RB
,	,
go	VBP
through	IN
each	DT
string	NN
and	CC
append	VB
each	DT
character	NN
onto	IN
each	DT
string	NN
.	.
Finally	RB
at	IN
the	DT
end	NN
,	,
remove	VB
any	DT
that	WDT
were	VBD
below	IN
the	DT
x	NNP
threshold	NN
and	CC
return	VB
the	DT
result	NN
.	.
I	PRP
didn't	VBP
test	VB
it	PRP
with	IN
potentially	RB
meaningless	JJ
input	NN
(	(
null	JJ
character	NN
list	NN
,	,
weird	JJ
values	NNS
of	IN
x	NN
and	CC
y	NN
,	,
etc	NN
)	)
.	.
		
High	NNP
Resolution	NNP
,	,
Low	NNP
Overhead	NNP
Timing	NNP
for	IN
Intel	NNP
Processors	NNPS
If	IN
you're	VBN
on	IN
Intel	NNP
hardware	NN
,	,
here's	VB
how	WRB
to	TO
read	VB
the	DT
CPU	NNP
real-time	JJ
instruction	NN
counter	NN
.	.
It	PRP
will	MD
tell	VB
you	PRP
the	DT
number	NN
of	IN
CPU	NNP
cycles	NNS
executed	VBD
since	IN
the	DT
processor	NN
was	VBD
booted	VBN
.	.
This	DT
is	VBZ
probably	RB
the	DT
finest-grained	JJ
counter	NN
you	PRP
can	MD
get	VB
for	IN
performance	NN
measurement	NN
.	.
Note	NN
that	IN
this	DT
is	VBZ
the	DT
number	NN
of	IN
CPU	NNP
cycles	NNS
.	.
On	IN
linux	IN
you	PRP
can	MD
get	VB
the	DT
CPU	NNP
speed	NN
from	IN
/proc	NNP
/cpuinfo	NNP
and	CC
divide	VB
to	TO
get	VB
the	DT
number	NN
of	IN
seconds	NNS
.	.
Converting	VBG
this	DT
to	TO
a	DT
double	NN
is	VBZ
quite	RB
handy	JJ
.	.
When	WRB
I	PRP
run	VBP
this	DT
on	IN
my	PRP$
box	NN
,	,
I	PRP
get	VBP
11867927879484732	CD
11867927879692217	CD
it	PRP
took	VBD
this	DT
long	JJ
to	TO
call	VB
printf	NN
:	:
207485	CD
Here's	NNP
the	DT
Intel	NNP
developer's	NN
guide	NN
that	WDT
gives	VBZ
tons	NNS
of	IN
detail	NN
.	.
#include	JJ
<stdio	NN
.	.
h	NN
>	JJ
#include	NNP
<stdint	NNP
.	.
h	NN
>	JJ
inline	NN
uint64_t	JJ
rdtsc()	NN
{	(
uint32_t	JJ
lo	NN
,	,
hi	NN
;	:
__asm__	CC
__volatile__	NNP
(	(
"xorl	CD
%	NN
%eax	NNP
,	,
%	NN
%eax	NNP
\n	NNP
"	NNP
"cpuid	NNP
\n	NNP
"	NNP
"rdtsc	NNP
\n	NNP
"	NN
:	:
"	JJ
=a	NN
"	NNP
(	(
lo	NN
)	)
,	,
"	JJ
=d	NN
"	NNP
(	(
hi	NN
)	)
:	:
:	:
"	NN
%ebx	NNP
"	NNP
,	,
"	NNP
%ecx	NNP
"	NNP
)	)
;	:
return	NN
(	(
uint64_t	JJ
)hi	NNP
<	NNP
<	VBD
32	CD
|	NNP
lo	NN
;	:
}	)
main()	FW
{	(
unsigned	JJ
long	RB
long	RB
x	RB
;	:
unsigned	JJ
long	RB
long	RB
y	RB
;	:
x	NNP
=	NNP
rdtsc()	NN
;	:
printf(	CC
"	VB
%lld	JJ
\n	NNP
"	NNP
,	,
x	NNP
)	)
;	:
y	CC
=	NNP
rdtsc()	VBP
;	:
printf(	CC
"	VB
%lld	JJ
\n	NNP
"	NNP
,	,
y	NN
)	)
;	:
printf(	CC
"it	VB
took	VBD
this	DT
long	JJ
to	TO
call	VB
printf	NN
:	:
%lld	JJ
\n	NNP
"	NNP
,	,
y-x	NN
)	)
;	:
}	)
		
Personally	RB
I	PRP
would	MD
do	VB
something	NN
like	IN
this	DT
:	:
<	NN
?php	NNP
$data	NNP
=	NNP
array(	IN
$rating	VBG
[0	JJ
]	NNP
=	NNP
>	NNP
array(	NN
'	''
word0	NN
'	''
,	,
'	''
word1	NN
'	''
,	,
'	''
word2	NN
'	''
)	)
,	,
$rating	VBG
[1	JJ
]	NNP
=	NNP
>	NNP
array(	NN
'	''
word3	NN
'	''
,	,
'	''
word4	NN
'	''
,	,
'	''
word8	NN
'	''
,	,
...	:
)	)
)	)
;	:
/	CC
/assums	NNS
that	IN
$rating	VBG
is	VBZ
an	DT
array	NN
with	IN
the	DT
weight	NN
of	IN
each	DT
word	NN
so	IN
the	DT
more	JJR
popular	JJ
words	NNS
would	MD
have	VB
a	DT
higher	JJR
value	NN
in	IN
rating	NN
usort(	JJ
$data	NNP
)	)
;	:
/	CC
/sort	VB
the	DT
$data	NNP
variable	NN
,	,
this	DT
should	MD
give	VB
us	PRP
the	DT
most	RBS
popular	JJ
words	NNS
first	RB
$size	VB
=	NNP
'	POS
1	CD
'	POS
;	:
foreach(	NNS
$data	VBP
as	IN
$rank	NN
)	)
{	(
$i	JJ
=0	NN
;	:
while(	CC
$i	VB
<	JJ
$count	NNP
(	(
$rank	NNP
)	)
)	)
{	(
echo	JJ
"	NN
<h	NNP
"	NNP
.	.
$size	VB
.	.
"	VB
>	JJ
"	NNP
.	.
$rank	NN
[	JJ
$i	NNP
]	NNP
.	.
"	VB
<	JJ
/h	NNP
"	NNP
.	.
$size	VB
.	.
"	VB
>	JJ
"	NNP
;	:
$i	NNP
+	NNP
+	NNP
;	:
}	)
$size	VB
+	JJ
+	NN
;	:
}	)
?	.
>	JJ
Assuming	NNP
I'm	NNP
not	RB
a	DT
complete	JJ
idiot	NN
this	DT
should	MD
work	VB
.	.
But	CC
it	PRP
is	VBZ
untested	JJ
.	.
		
What	WP
is	VBZ
the	DT
meaning	NN
of	IN
the	DT
Java	NNP
warning	NN
?	.
Type	NNP
safety	NN
:	:
The	DT
cast	NN
from	IN
Object	NNP
to	TO
List	NNP
is	VBZ
actually	RB
checking	VBG
against	IN
the	DT
erased	JJ
type	NN
List	NN
I	PRP
get	VBP
this	DT
warning	NN
when	WRB
I	PRP
try	VBP
to	TO
cast	VB
an	DT
Object	NNP
to	TO
a	DT
type	NN
with	IN
generic	JJ
information	NN
,	,
such	JJ
as	IN
in	IN
the	DT
following	JJ
code	NN
:	:
Object	JJ
object	NN
=	NNP
getMyList()	NN
;	:
List	NNP
<Integer	NNP
>	NNP
list	NN
=	NNP
(	(
List	NNP
<Integer	NNP
>	NNP
)	)
object	VBP
;	:
		
I'm	NNP
not	RB
sure	JJ
why	WRB
you	PRP
would	MD
want	VB
to	TO
do	VB
this	DT
in	IN
the	DT
first	JJ
place	NN
.	.
The	DT
resulting	VBG
set	NN
for	IN
any	DT
moderately	RB
large	JJ
values	NNS
of	IN
x	NN
and	CC
y	NN
will	MD
be	VB
huge	JJ
,	,
and	CC
will	MD
grow	VB
exponentially	RB
as	IN
x	NN
and	CC
/or	NNP
y	NNP
get	VB
bigger	JJR
.	.
Lets	NNS
say	VBP
your	PRP$
set	NN
of	IN
possible	JJ
characters	NNS
is	VBZ
the	DT
26	CD
lowercase	NN
letters	NNS
of	IN
the	DT
alphabet	NN
,	,
and	CC
you	PRP
ask	VBP
your	PRP$
application	NN
to	TO
generate	VB
all	DT
permutations	NNS
where	WRB
length	NN
=	VBZ
5	CD
.	.
Assuming	VBG
you	PRP
don't	VBP
run	VB
out	IN
of	IN
memory	NN
you'll	NN
get	VB
11	CD
,	,
881	CD
,	,
376	CD
(	(
i	NN
.	.
e	NN
.	.
26	CD
to	TO
the	DT
power	NN
of	IN
5	CD
)	)
strings	NNS
back	RB
.	.
Bump	NN
that	WDT
length	VBZ
up	IN
to	TO
6	CD
,	,
and	CC
you'll	RB
get	VB
308	CD
,	,
915	CD
,	,
776	CD
strings	NNS
back	RB
.	.
These	DT
numbers	NNS
get	VBP
painfully	RB
large	JJ
,	,
very	RB
quickly	RB
.	.
Here's	VB
a	DT
solution	NN
I	PRP
put	VBP
together	RB
in	IN
Java	NNP
.	.
You'll	NNP
need	VBP
to	TO
provide	VB
two	CD
runtime	JJ
arguments	NNS
(	(
corresponding	VBG
to	TO
x	VB
and	CC
y	VB
)	)
.	.
Have	VBP
fun	VBN
.	.
public	JJ
class	NN
GeneratePermutations	NNP
{	(
public	JJ
static	JJ
void	NN
main(	NN
String	NNP
[	NNP
]	NNP
args	NN
)	)
{	(
int	NN
lower	RBR
=	NNP
Integer.parseInt(	NNP
args	VBZ
[0	NNP
]	NNP
)	)
;	:
int	JJ
upper	JJ
=	NN
Integer.parseInt(	NNP
args	VBZ
[1	NNP
]	NNP
)	)
;	:
if	IN
(	(
upper	JJ
<	NNP
lower	JJR
|	NNP
|	NNP
upper	JJ
=	NNP
=	NNP
0	CD
|	NNP
|	NNP
lower	JJR
=	NNP
=	NNP
0	CD
)	)
{	(
System.exit(	NNP
0	CD
)	)
;	:
}	)
for	IN
(	(
int	JJ
length	NN
=	NNP
lower	JJR
;	:
length	NN
<	NNP
=	NNP
upper	IN
;	:
length	CC
+	NNP
+	NNP
)	)
{	(
generate(	JJ
length	NN
,	,
"	NNP
"	NNP
)	)
;	:
}	)
}	)
private	JJ
static	JJ
void	NN
generate(	NN
int	NN
length	NN
,	,
String	NNP
partial	NN
)	)
{	(
if	IN
(	(
length	FW
<	NNP
=	NNP
0	CD
)	)
{	(
System.out.println(	NNP
partial	JJ
)	)
;	:
}	)
else	RB
{	(
for	IN
(	(
char	JJ
c	NN
=	NNP
'	POS
a	DT
'	POS
;	:
c	NNS
<	VBP
=	NNP
'	POS
z	NN
'	''
;	:
c	VB
+	NNP
+	NNP
)	)
{	(
generate(	JJ
length	NN
-	:
1	CD
,	,
partial	JJ
+	NNP
c	NN
)	)
;	:
}	)
}	)
}	)
}	)
		
The	DT
scoring	NN
contains	VBZ
the	DT
Inverse	NNP
Document	NNP
Frequency(	NNP
IDF	NNP
)	)
.	.
If	IN
the	DT
term	NN
"John	NNP
Smith	NNP
"	NNP
is	VBZ
in	IN
one	CD
partition	NN
,	,
0	CD
,	,
100	CD
times	NNS
and	CC
in	IN
partition	NN
1	CD
,	,
once	RB
.	.
The	DT
score	NN
for	IN
searching	VBG
for	IN
John	NNP
Smith	NNP
would	MD
be	VB
higher	JJR
search	NN
in	IN
partition	NN
1	CD
as	IN
the	DT
term	NN
is	VBZ
more	RBR
scarce	JJ
.	.
To	TO
get	VB
round	VB
this	DT
you	PRP
would	MD
wither	RB
have	VB
to	TO
have	VB
your	PRP$
index	NN
being	VBG
over	IN
all	DT
partitions	NNS
,	,
or	CC
you	PRP
would	MD
need	VB
to	TO
override	VB
the	DT
IDF	NNP
.	.
		
Part	NNP
of	IN
my	PRP$
everyday	JJ
work	NN
is	VBZ
maintaining	VBG
and	CC
extending	VBG
legacy	NN
VB6	NNP
applications	NNS
.	.
A	DT
common	JJ
engine	NN
is	VBZ
written	VBN
in	IN
C	NNP
/C	NNP
+	NNP
+	NNP
and	CC
VB6	NNP
uses	VBZ
these	DT
functions	NNS
in	IN
order	NN
to	TO
improve	VB
performance	NN
.	.
When	WRB
it	PRP
comes	VBZ
to	TO
asynchronous	JJ
programming	NN
,	,
a	DT
C	NNP
interface	NN
is	VBZ
not	RB
enough	JJ
and	CC
we	PRP
rely	VBP
on	IN
COM	NNP
controls	VBZ
to	TO
fire	VB
events	NNS
to	TO
VB6	NNP
.	.
My	PRP$
problem	NN
is	VBZ
that	IN
when	WRB
I	PRP
register	VBP
the	DT
control	NN
in	IN
VB6	NNP
,	,
VB	NNP
loads	VBZ
this	DT
control	NN
in	IN
memory	NN
and	CC
does	VBZ
not	RB
unload	VB
it	PRP
until	IN
I	PRP
quit	VBP
the	DT
VB6	NNP
IDE	NNP
.	.
As	IN
the	DT
control	NN
is	VBZ
loaded	VBN
the	DT
whole	JJ
time	NN
,	,
I	PRP
am	VBP
unable	JJ
to	TO
recompile	VB
it	PRP
in	IN
VC6	NNP
,	,
because	IN
the	DT
DLL	NNP
file	NN
is	VBZ
locked	VBN
.	.
A	DT
solution	NN
I	PRP
found	VBD
is	VBZ
not	RB
to	TO
enable	VB
the	DT
control	NN
in	IN
VB	NNP
but	CC
use	VBP
the	DT
CreateObject()	NNP
with	IN
the	DT
full	JJ
name	NN
of	IN
my	PRP$
control	NN
.	.
The	DT
problem	NN
then	RB
is	VBZ
that	IN
I	PRP
must	MD
declare	VB
my	PRP$
control	NN
as	IN
an	DT
Object	NNP
because	IN
VB6	NNP
knows	VBZ
nothing	NN
of	IN
the	DT
interface	NN
I	PRP
am	VBP
using	VBG
and	CC
I	PRP
do	VBP
not	RB
have	VB
access	NN
to	TO
IntelliSense	NNP
,	,
which	WDT
is	VBZ
a	DT
pain	NN
.	.
Any	DT
idea	NN
how	WRB
I	PRP
can	MD
tell	VB
VB6	NNP
to	TO
unload	VB
controls	NNS
after	IN
quitting	VBG
the	DT
application	NN
?	.
Or	CC
directly	RB
in	IN
the	DT
IDE	NNP
?	.
		
Ok	NNP
,	,
I'm	NNP
a	DT
web	NN
developer	NN
,	,
but	CC
I	PRP
find	VBP
myself	PRP
dabbling	VBG
in	IN
windows	NNS
forms	NNS
projects	NNS
every	DT
now	RB
and	CC
then	RB
.	.
One	CD
thing	NN
that	WDT
confounds	VBZ
me	PRP
to	TO
this	DT
day	NN
is	VBZ
the	DT
following	VBG
.	.
Assume	NNP
you	PRP
are	VBP
doing	VBG
something	NN
like	IN
the	DT
following	JJ
List	NN
<string	VBG
>	JJ
myitems	NNS
=	VBP
new	JJ
List	NNP
<string	NNP
>	NNP
{	(
"Item	NN
1	CD
"	NN
,	,
"Item	VBP
2	CD
"	NN
,	,
"Item	VBP
3	CD
"	JJ
}	)
;	:
ComboBox	NNP
box	NN
=	NNP
new	JJ
ComboBox()	NNP
;	:
box	NN
.	.
DataSource	NNP
=	JJ
myitems	NNS
;	:
ComboBox	NNP
box2	VBZ
=	NNP
new	JJ
ComboBox()	NNP
;	:
box2	NN
.	.
DataSource	NNP
=	JJ
myitems	NNS
So	RB
now	RB
we	PRP
have	VBP
2	CD
combo	JJ
boxes	NNS
bound	VBD
to	TO
that	DT
array	NN
,	,
and	CC
everything	NN
works	NNS
fine	VBP
.	.
But	CC
when	WRB
you	PRP
change	VBP
the	DT
value	NN
of	IN
one	CD
combo	NN
box	NN
,	,
it	PRP
changes	VBZ
BOTH	NNP
combo	NN
boxes	NNS
to	TO
the	DT
one	CD
you	PRP
just	RB
selected	VBN
.	.
Now	RB
,	,
I	PRP
know	VBP
that	DT
Arrays	NNS
are	VBP
always	RB
passed	VBN
by	IN
reference	NN
(	(
learned	VBN
that	IN
when	WRB
i	NN
learned	VBD
C	NNP
:D	NNP
)	)
,	,
but	CC
why	WRB
on	IN
earth	NN
would	MD
the	DT
combo	JJ
boxes	NNS
change	VBP
together	RB
?	.
I	PRP
don't	VBP
believe	VB
the	DT
combo	NN
box	NN
control	NN
is	VBZ
modifying	VBG
the	DT
collection	NN
at	IN
all	DT
.	.
As	IN
a	DT
work	NN
around	RB
,	,
don't	NN
this	DT
would	MD
achieve	VB
the	DT
funcionality	NN
that	WDT
is	VBZ
expected	VBN
/	RB
desired	VBN
ComboBox	NNP
box	NN
=	NNP
new	JJ
ComboBox()	NNP
;	:
box	NN
.	.
DataSource	NNP
=	NNP
myitems.ToArray()	NN
;	:
		
So	IN
it	PRP
says	VBZ
microseconds	VBZ
explicitly	RB
,	,
but	CC
says	VBZ
the	DT
resolution	NN
of	IN
the	DT
system	NN
clock	NN
is	VBZ
unspecified	JJ
.	.
I	PRP
suppose	VBP
resolution	NN
in	IN
this	DT
context	NN
means	VBZ
how	WRB
the	DT
smallest	JJS
amount	NN
it	PRP
will	MD
ever	RB
be	VB
incremented	VBN
?	.
The	DT
data	NN
structure	NN
is	VBZ
defined	VBN
as	IN
having	VBG
microseconds	NNS
as	IN
a	DT
unit	NN
of	IN
measurement	NN
,	,
but	CC
that	IN
doesn't	JJ
mean	VB
that	IN
the	DT
clock	NN
or	CC
operating	NN
system	NN
is	VBZ
actually	RB
capable	JJ
of	IN
measuring	VBG
that	DT
finely	RB
.	.
Like	IN
other	JJ
people	NNS
have	VBP
suggested	VBN
,	,
gettimeofday()	NN
is	VBZ
bad	JJ
because	IN
setting	VBG
the	DT
time	NN
can	MD
cause	VB
clock	NN
skew	NN
and	CC
throw	VB
off	RP
your	PRP$
calculation	NN
.	.
clock_gettime(	VB
CLOCK_MONOTONIC	NNP
)	)
is	VBZ
what	WP
you	PRP
want	VBP
,	,
and	CC
clock_getres()	NN
will	MD
tell	VB
you	PRP
the	DT
precision	NN
of	IN
your	PRP$
clock	NN
.	.
		
The	DT
Monte	NNP
Carlo	NNP
method	NN
,	,
as	IN
mentioned	VBN
,	,
applies	VBZ
some	DT
great	JJ
concepts	NNS
but	CC
it	PRP
is	VBZ
,	,
clearly	RB
,	,
not	RB
the	DT
fastest	JJS
--	:
not	RB
by	IN
a	DT
long	JJ
shot	NN
,	,
not	RB
by	IN
any	DT
reasonable	JJ
usefulness	NN
.	.
Also	RB
,	,
it	PRP
all	DT
depends	VBZ
on	IN
what	WP
kind	NN
of	IN
accuracy	NN
you	PRP
are	VBP
looking	VBG
for	IN
.	.
The	DT
fastest	JJS
pi	NN
I	PRP
know	VBP
of	IN
is	VBZ
the	DT
digits	NNS
hard	RB
coded	VBD
.	.
Looking	VBG
at	IN
Pi	NNP
and	CC
Pi	NNP
[PDF	NNP
]	NNP
,	,
there	EX
are	VBP
a	DT
lot	NN
of	IN
formulas	NNS
.	.
Here	RB
is	VBZ
a	DT
method	NN
that	WDT
converges	VBZ
quickly	RB
(	(
~14digits	NNS
per	IN
iteration	NN
)	)
.	.
The	DT
current	JJ
fastest	JJS
application	NN
,	,
PiFast	NNP
,	,
uses	VBZ
this	DT
formula	NN
with	IN
the	DT
FFT	NNP
.	.
I'll	NNP
just	RB
write	VB
the	DT
formula	NN
,	,
since	IN
the	DT
code	NN
is	VBZ
straight	JJ
forward	RB
.	.
This	DT
formula	NN
was	VBD
almost	RB
found	VBN
by	IN
Ramanujan	NNP
and	CC
discovered	VBN
by	IN
Chudnovsky	NNP
.	.
It	PRP
is	VBZ
actually	RB
how	WRB
he	PRP
calculated	VBD
several	JJ
billion	CD
digits	NNS
of	IN
the	DT
number	NN
--	:
so	IN
it	PRP
isn't	VBZ
a	DT
method	NN
to	TO
disregard	VB
.	.
The	DT
formula	NN
will	MD
overflow	VB
quickly	RB
since	IN
we	PRP
are	VBP
dividing	VBG
factorials	NNS
,	,
it	PRP
would	MD
be	VB
advantageous	JJ
then	RB
to	TO
delay	VB
such	JJ
calculating	VBG
to	TO
remove	VB
terms	NNS
.	.
where	WRB
,	,
Below	NNP
is	VBZ
the	DT
Brent	NNP
–Salamin	NNP
algorithm	NN
.	.
Wikipedia	NNP
mentions	NNS
that	WDT
when	WRB
a	DT
and	CC
b	NN
are	VBP
'	POS
close	JJ
enough	NNS
'	POS
then	RB
(	(
a	DT
+b	NN
)	)
^2	NN
/4t	NN
will	MD
be	VB
an	DT
approximation	NN
of	IN
pi	NN
.	.
I'm	NNP
not	RB
sure	JJ
what	WP
'	''
close	RB
enough	IN
'	''
means	NNS
,	,
but	CC
from	IN
my	PRP$
tests	NNS
,	,
one	CD
iteration	NN
got	VBD
2digits	CD
,	,
two	CD
got	VBD
7	CD
,	,
and	CC
three	CD
had	VBD
15	CD
,	,
of	IN
course	NN
this	DT
is	VBZ
with	IN
doubles	NNS
,	,
so	IN
it	PRP
might	MD
have	VB
error	NN
based	VBN
on	IN
its	PRP$
representation	NN
and	CC
the	DT
'	''
true	JJ
'	POS
calculation	NN
could	MD
be	VB
more	JJR
accurate	JJ
.	.
let	VB
pi_2	JJ
iters	NNS
=	VBP
let	VB
rec	VB
loop_	VB
a	DT
b	NN
t	NN
p	NN
i	NN
=	VBP
if	IN
i	JJ
=	VBP
0	CD
then	RB
a	DT
,	,
b	NN
,	,
t	NN
,	,
p	NN
else	RB
let	VB
a_n	JJ
=	NNP
(	(
a	DT
+	NN
.	.
b	NN
)	)
/	NN
.	.
2	CD
.	.
0	CD
and	CC
b_n	VB
=	NNP
sqrt	NN
(	(
a	DT
*	NN
.	.
b	NN
)	)
and	CC
p_n	JJ
=	NN
2	CD
.	.
0	CD
*	NN
.	.
p	NN
in	IN
let	NN
t_n	NN
=	NNP
t	NN
-.	NNP
(	(
p	JJ
*	NN
.	.
(	(
a	DT
-.	NNP
a_n	NN
)	)
*	NN
.	.
(	(
a	DT
-.	NNP
a_n	NN
)	)
)	)
in	IN
loop_	NN
a_n	NN
b_n	NN
t_n	NN
p_n	NN
(	(
i	JJ
-	:
1	CD
)	)
in	IN
let	NN
a	DT
,	,
b	NN
,	,
t	NN
,	,
p	NN
=	NNP
loop_	NN
(	(
1	CD
.	.
0	CD
)	)
(	(
1	CD
.	.
0	CD
/	NN
.	.
(	(
sqrt	JJ
2	CD
.	.
0	CD
)	)
)	)
(	(
1	CD
.	.
0	CD
/	NN
.	.
4	CD
.	.
0	CD
)	)
(	(
1	CD
.	.
0	CD
)	)
iters	NNS
in	IN
(	(
a	DT
+	NN
.	.
b	NN
)	)
*	NN
.	.
(	(
a	DT
+	NN
.	.
b	NN
)	)
/	NN
.	.
(	(
4	CD
.	.
0	CD
*	NN
.	.
t	NN
)	)
Lastly	RB
,	,
how	WRB
about	IN
some	DT
pi	JJ
golf	NN
(	(
800	CD
digits	NNS
)	)
?	.
160	CD
characters	NNS
!	.
int	NN
a	DT
=10000	NN
,	,
b	NN
,	,
c	NN
=2800	NN
,	,
d	NN
,	,
e	NN
,	,
f	JJ
[2801	NNP
]	NNP
,	,
g	NN
;main	NNP
(	(
)	)
{for	FW
(	(
;b	SYM
-	:
c	NN
;	:
)f	CC
[b	VB
+	JJ
+	NNP
]	NNP
=a	NNP
/5	NNP
;for	NNP
(	(
;d	NNP
=0	NNP
,	,
g	NN
=c	NNP
*2	NNP
;c	NNP
-	:
=14	NN
,	,
printf(	VB
"	CD
%	NN
.	.
4d	CD
"	NN
,	,
e	FW
+d	NNP
/a	NNP
)	)
,	,
e	JJ
=d	NNP
%a	NNP
)for	NNP
(	(
b	SYM
=c	NNP
;d	NNP
+	NNP
=f	NNP
[b	NNP
]	NNP
*a	NNP
,	,
f	JJ
[b	NNP
]	NNP
=d	NNP
%	NN
--	:
g	NN
,	,
d	NN
/	NNP
=g	NNP
--	:
,	,
--	:
b	SYM
;d	JJ
*	NNP
=b	NNP
)	)
;	:
}	)
		
A	DT
few	JJ
things	NNS
:	:
You	PRP
are	VBP
creating	VBG
(	(
and	CC
not	RB
using	VBG
)	)
an	DT
unnecessary	JJ
toplevel	NN
window	NN
,	,
named	VBN
window	NN
.	.
You	PRP
can	MD
just	RB
delete	VB
these	DT
lines	NNS
:	:
window	NN
=	NN
gtk_window_new(	VBP
GTK_WINDOW_TOPLEVEL	NNP
)	)
;g_signal_connect	VBP
(	(
G_OBJECT(	NNP
window	NN
)	)
,	,
"delete_event	JJ
"	NN
,	,
G_CALLBACK(	NNP
delete_event	NN
)	)
,	,
NULL	NNP
)	)
;g_signal_connect	VBP
(	(
G_OBJECT(	NNP
window	NN
)	)
,	,
"destroy	NNP
"	NNP
,	,
G_CALLBACK(	NNP
destroy	NN
)	)
,	,
NULL	NNP
)	)
;	:
Also	RB
,	,
the	DT
flow	NN
doesn't	NN
seem	VBP
quite	RB
right	RB
.	.
gtk_main()	NN
starts	VBZ
the	DT
GTK	NNP
main	JJ
loop	NN
,	,
which	WDT
blocks	VBZ
until	IN
something	NN
exits	NNS
it	PRP
.	.
gtk_dialog_run()	NN
also	RB
starts	VBZ
a	DT
main	JJ
loop	NN
,	,
but	CC
it	PRP
exits	VBZ
as	RB
soon	RB
as	IN
one	CD
of	IN
the	DT
buttons	NNS
is	VBZ
clicked	VBN
.	.
I	PRP
think	VBP
it	PRP
might	MD
be	VB
enough	RB
for	IN
you	PRP
to	TO
remove	VB
the	DT
gtk_init_add()	NN
and	CC
gtk_main()	NN
calls	NNS
,	,
and	CC
simply	RB
deal	VB
with	IN
the	DT
return	NN
value	NN
.	.
Also	RB
the	DT
gtk_widget_destroy()	NN
call	NN
is	VBZ
unnecessary	JJ
,	,
as	IN
the	DT
dialog	NN
window	NN
is	VBZ
automatically	RB
destroyed	VBN
when	WRB
gtk_dialog_run()	JJ
returns	NNS
.	.
		
You	PRP
may	MD
also	RB
be	VB
interested	JJ
in	IN
the	DT
output	NN
of	IN
the	DT
explain()	NN
method	NN
,	,
and	CC
the	DT
resulting	JJ
Explanation	NNP
object	NN
,	,
which	WDT
will	MD
give	VB
you	PRP
an	DT
idea	NN
of	IN
how	WRB
things	NNS
are	VBP
scored	VBN
the	DT
way	NN
they	PRP
are	VBP
.	.
		
Well	NNP
,	,
in	IN
Java	NNP
an	DT
int	NN
is	VBZ
a	DT
primitive	JJ
while	IN
an	DT
Integer	NNP
is	VBZ
an	DT
Object	NNP
.	.
Meaning	NNP
,	,
if	IN
you	PRP
made	VBD
a	DT
new	JJ
Integer	NN
:	:
Integer	NN
i	VB
=	VBP
new	JJ
Integer(	NNP
6	CD
)	)
;	:
You	PRP
could	MD
call	VB
some	DT
method	NN
on	IN
i	NN
:	:
String	NN
s	NN
=	NNP
i.toString()	NN
;	:
/	CC
/sets	NNS
s	VBP
the	DT
string	NN
representation	NN
of	IN
i	JJ
Whereas	NNP
with	IN
an	DT
int	NN
:	:
int	NN
i	NN
=	VBP
6	CD
;	:
You	PRP
cannot	VBP
call	VB
any	DT
methods	NNS
on	IN
it	PRP
,	,
because	IN
it	PRP
is	VBZ
simply	RB
a	DT
primitive	NN
.	.
So	RB
:	:
String	VBG
s	NN
=	NNP
i.toString()	NN
;	:
/	NNP
/will	NNP
not	RB
work	NN
!	.
!	.
!	.
would	MD
produce	VB
an	DT
error	NN
,	,
because	IN
int	NN
is	VBZ
not	RB
an	DT
object	NN
.	.
int	NN
is	VBZ
one	CD
of	IN
the	DT
few	JJ
primitives	NNS
in	IN
Java	NNP
(	(
along	IN
with	IN
char	NN
and	CC
some	DT
others	NNS
)	)
.	.
I'm	NNP
not	RB
100	CD
%	NN
sure	JJ
,	,
but	CC
I'm	NNP
thinking	NN
that	IN
the	DT
Integer	NNP
object	VB
more	RBR
or	CC
less	RBR
just	RB
has	VBZ
an	DT
int	NN
property	NN
and	CC
a	DT
whole	JJ
bunch	NN
of	IN
methods	NNS
to	TO
interact	VB
with	IN
that	DT
property	NN
(	(
like	IN
the	DT
toString()	NN
method	NN
for	IN
example	NN
)	)
.	.
So	RB
Integer	NNP
is	VBZ
a	DT
fancy	JJ
way	NN
to	TO
work	VB
with	IN
an	DT
int	NN
(	(
Just	NNP
as	IN
perhaps	RB
String	NNP
is	VBZ
a	DT
fancy	JJ
way	NN
to	TO
work	VB
with	IN
a	DT
group	NN
of	IN
chars	NNS
)	)
.	.
I	PRP
know	VBP
that	IN
Java	NNP
isn't	NN
C	NNP
,	,
but	CC
since	IN
I've	NNP
never	RB
programmed	VBD
in	IN
C	NNP
this	DT
is	VBZ
the	DT
closest	JJS
I	PRP
could	MD
come	VB
to	TO
the	DT
answer	NN
.	.
Hope	VBP
this	DT
helps	NN
!	.
Integer	NNP
object	JJ
javadoc	NN
Integer	NNP
Ojbect	NNP
vs	NN
.	.
int	NN
primitive	JJ
comparison	NN
		
Interesting	NNP
question	NN
!	.
I	PRP
would	MD
do	VB
this	DT
by	IN
picking	VBG
combinations	NNS
,	,
something	NN
like	IN
the	DT
following	VBG
in	IN
python	NN
.	.
The	DT
hardest	JJS
part	NN
is	VBZ
probably	RB
first	JJ
pass	NN
verification	NN
,	,
i	NN
.	.
e	NN
.	.
if	IN
f(	JJ
1	CD
,	,
2	CD
,	,
3	CD
)	)
returns	NNS
true	JJ
,	,
is	VBZ
that	IN
a	DT
correct	JJ
result	NN
?	.
Once	RB
you	PRP
have	VBP
verified	VBN
that	IN
,	,
then	RB
this	DT
is	VBZ
a	DT
good	JJ
basis	NN
for	IN
regression	NN
testing	NN
.	.
Probably	RB
it's	VBZ
a	DT
good	JJ
idea	NN
to	TO
make	VB
a	DT
set	NN
of	IN
test	NN
cases	NNS
that	IN
you	PRP
know	VBP
will	MD
be	VB
all	DT
true	JJ
(	(
e	NN
.	.
g	NN
.	.
3	CD
,	,
4	CD
,	,
5	CD
for	IN
this	DT
triangle	JJ
case	NN
)	)
,	,
and	CC
a	DT
set	NN
of	IN
test	NN
cases	NNS
that	IN
you	PRP
know	VBP
will	MD
be	VB
all	DT
false	JJ
(	(
e	NN
.	.
g	NN
.	.
0	CD
,	,
1	CD
,	,
inf	NN
)	)
.	.
Then	RB
you	PRP
can	MD
more	VB
easily	RB
verify	VB
the	DT
tests	NNS
are	VBP
correct	JJ
.	.
#	#
xpermutations	NNS
from	IN
http	NN
:	:
/	JJ
/code	NN
.	.
activestate	NN
.	.
com	NN
/recipes	VBZ
/190465	CD
from	IN
xpermutations	NNS
import	VBP
*	JJ
lengths	NNS
=	VBP
[	SYM
-	:
1	CD
,	,
0	CD
,	,
1	CD
,	,
5	CD
,	,
10	CD
,	,
0	CD
,	,
1000	CD
,	,
'	''
inf	NN
'	POS
]	NN
for	IN
c	NN
in	IN
xselections(	JJ
lengths	NNS
,	,
3	CD
)	)
:	:
#	#
or	CC
xuniqueselections	NNS
print	VBP
c	JJ
(-	JJ
1	CD
,	,
-	:
1	CD
,	,
-	:
1	CD
)	)
;	:
(-	JJ
1	CD
,	,
-	:
1	CD
,	,
0	CD
)	)
;	:
(-	JJ
1	CD
,	,
-	:
1	CD
,	,
1	CD
)	)
;	:
(-	JJ
1	CD
,	,
-	:
1	CD
,	,
5	CD
)	)
;	:
(-	JJ
1	CD
,	,
-	:
1	CD
,	,
10	CD
)	)
;	:
(-	JJ
1	CD
,	,
-	:
1	CD
,	,
0	CD
)	)
;	:
(-	JJ
1	CD
,	,
-	:
1	CD
,	,
1000	CD
)	)
;	:
(-	JJ
1	CD
,	,
-	:
1	CD
,	,
inf	NN
)	)
;	:
(-	JJ
1	CD
,	,
0	CD
,	,
-	:
1	CD
)	)
;	:
(-	JJ
1	CD
,	,
0	CD
,	,
0	CD
)	)
;	:
...	:
		
There	EX
are	VBP
three	CD
ways	NNS
to	TO
iterate	VB
over	IN
a	DT
result	NN
set	VBN
.	.
The	DT
best	JJS
way	NN
in	IN
terms	NNS
of	IN
both	DT
readability	NN
and	CC
performance	NN
is	VBZ
usually	RB
to	TO
use	VB
the	DT
built-in	NN
cursor	NN
iterator	NN
.	.
curs.execute(	NN
'	''
select	JJ
*	NN
from	IN
people	NNS
'	POS
)	)
for	IN
row	NN
in	IN
curs	NNS
:	:
print	NN
row	NN
You	PRP
can	MD
fetch	VB
all	PDT
the	DT
rows	NNS
into	IN
a	DT
list	NN
,	,
but	CC
this	DT
can	MD
have	VB
some	DT
bad	JJ
side	NN
effects	NNS
if	IN
the	DT
result	NN
set	VBN
is	VBZ
large	JJ
.	.
You	PRP
have	VBP
to	TO
wait	VB
for	IN
the	DT
entire	JJ
result	NN
set	VBN
to	TO
be	VB
returned	VBN
to	TO
your	PRP$
client	NN
process	NN
.	.
You	PRP
may	MD
eat	VB
up	RP
a	DT
lot	NN
of	IN
memory	NN
in	IN
your	PRP$
client	NN
to	TO
hold	VB
the	DT
built-up	JJ
list	NN
.	.
It	PRP
may	MD
take	VB
a	DT
while	NN
for	IN
Python	NNP
to	TO
construct	VB
and	CC
deconstruct	VB
the	DT
list	NN
which	WDT
you	PRP
are	VBP
going	VBG
to	TO
immediately	RB
discard	VB
anyways	NNS
.	.
for	IN
row	NN
in	IN
curs.fetchall()	NN
:	:
print	NN
row	NN
Finally	RB
,	,
you	PRP
can	MD
loop	VB
over	IN
the	DT
result	NN
set	VBN
fetching	VBG
one	CD
row	NN
at	IN
a	DT
time	NN
.	.
In	IN
general	JJ
,	,
there's	JJ
no	DT
particular	JJ
advantage	NN
in	IN
doing	VBG
this	DT
over	IN
using	VBG
the	DT
iterator	NN
.	.
If	IN
there	EX
is	VBZ
something	NN
in	IN
your	PRP$
programming	NN
logic	NN
that	WDT
seems	VBZ
to	TO
indicate	VB
there	EX
is	VBZ
an	DT
advantage	NN
in	IN
doing	VBG
this	DT
,	,
perhaps	RB
you	PRP
should	MD
reconsider	VB
your	PRP$
programming	VBG
logic	NN
.	.
row	VB
=	JJ
curs.fetchone()	NN
while	IN
row	NN
:	:
print	NN
row	NN
row	NN
=	NNP
curs.fetchone()	NN
		
I'm	NNP
looking	VBG
for	IN
a	DT
performant	NN
,	,
reasonably	RB
robust	JJ
RNG	NNP
using	VBG
no	DT
special	JJ
hardware	NN
.	.
It	PRP
can	MD
use	VB
mathematical	JJ
methods	NNS
(	(
Mersenne	NNP
Twister	NNP
,	,
etc	NN
)	)
,	,
it	PRP
can	MD
"collect	VB
entropy	JJ
"	NN
from	IN
the	DT
machine	NN
,	,
whatever	WDT
.	.
On	IN
Linux	NNP
/etc	NNP
we	PRP
have	VBP
a	DT
drand48()	NN
which	WDT
generates	VBZ
48	CD
random	NN
bits	NNS
.	.
I'd	NNP
like	IN
a	DT
similar	JJ
function	NN
/class	NN
for	IN
C	NNP
+	NNP
+	NNP
or	CC
C	NNP
#	#
which	WDT
can	MD
generate	VB
more	JJR
than	IN
32	CD
bits	NNS
of	IN
randomness	NN
and	CC
which	WDT
low-order	NN
bits	NNS
are	VBP
equally	RB
as	RB
random	JJ
as	IN
high-order	NN
bits	NNS
.	.
It	PRP
doesn't	VBZ
have	VB
to	TO
be	VB
cryptographically	RB
secure	JJ
but	CC
it	PRP
must	MD
not	RB
use	VB
or	CC
be	VB
based	VBN
on	IN
the	DT
C-language	JJ
rand()	NN
or	CC
.	.
NET	JJ
System	NN
.	.
Random	NNP
.	.
Any	NNP
source	NN
code	NN
,	,
links	VBZ
to	TO
source	NN
,	,
etc	FW
.	.
would	MD
be	VB
appreciated	VBN
!	.
Failing	VBG
that	IN
,	,
what	WP
TYPE	NNP
of	IN
RNG	NNP
should	MD
I	PRP
be	VB
looking	VBG
for	IN
?	.
		
Hmm	NNP
,	,
ok	NN
.	.
I'd	NNP
suggest	VBP
code	NN
like	IN
this	DT
,	,
then	RB
:	:
typedef	VB
struct	NN
{	(
int	JJ
type	NN
;	:
int	JJ
result	NN
;	:
}	)
DialogData	NNP
;static	JJ
gbooleandisplay_dialog(	NN
gpointer	NN
user_data	NN
)	)
{	(
DialogData	NNP
*dialog_data	NNP
=	NNP
user_data	NN
;	:
GtkWidget	NNP
*dialog	NNP
;	:
if	IN
(	(
dialog_data	SYM
-	:
>type	NN
&	CC
MB_YESNO	NNP
)	)
dialog	NN
=	JJ
gtk_message_dialog_new(	NN
...	:
)	)
;	:
else	RB
dialog	NN
=	JJ
gtk_message_dialog_new(	NN
...	:
)	)
;	:
/	CC
/	VB
Set	NNP
title	NN
,	,
etc	FW
.	.
dialog_data	SYM
-	:
>result	NN
=	JJ
gtk_dialog_run(	NN
...	:
)	)
;	:
gtk_main_quit()	NN
;	:
/	CC
/	VB
Quits	VBZ
the	DT
main	JJ
loop	NN
run	NN
in	IN
MessageBox()	NNP
return	NN
FALSE	NNP
;	:
}int	NN
MessageBox(	NNP
...	:
)	)
{	(
DialogData	NNP
dialog_data	NN
;	:
dialog_data	NNS
.	.
type	NN
=	NN
type	NN
;	:
gtk_idle_add(	CC
display_dialog	NN
,	,
&dialog_data	NNP
)	)
;	:
gtk_main()	NN
;	:
/	CC
/	VB
Do	NNP
stuff	VB
based	VBN
on	IN
dialog_data	NN
.	.
result	NN
}	)
The	DT
struct	NN
is	VBZ
because	IN
you	PRP
need	VBP
to	TO
pass	VB
around	RP
a	DT
couple	NN
pieces	NNS
of	IN
data	NNS
.	.
The	DT
gtk_idle_add()	NN
call	NN
adds	VBZ
a	DT
method	NN
to	TO
be	VB
run	VBN
when	WRB
the	DT
main	JJ
loop	NN
is	VBZ
running	VBG
and	CC
idle	JJ
,	,
and	CC
the	DT
FALSE	NNP
return	NN
value	NN
from	IN
the	DT
display_dialog()	NN
call	NN
means	VBZ
that	IN
it's	VBG
only	RB
run	VB
once	RB
.	.
After	IN
we	PRP
get	VBP
the	DT
result	NN
from	IN
the	DT
dialog	NN
,	,
we	PRP
quit	VBP
the	DT
main	JJ
loop	NN
.	.
That'll	NNP
cause	VBP
the	DT
gtk_main()	NN
in	IN
your	PRP$
main	JJ
MessageBox()	NNP
method	NN
to	TO
return	VB
,	,
and	CC
you'll	RB
be	VB
able	JJ
to	TO
access	NN
the	DT
result	NN
from	IN
there	RB
.	.
Hope	VB
this	DT
helps	NN
!	.
		
I'll	NNP
add	NN
to	TO
the	DT
excellent	JJ
answers	NNS
given	VBN
above	IN
,	,
and	CC
talk	VB
about	IN
boxing	NN
and	CC
unboxing	NN
,	,
and	CC
how	WRB
this	DT
applies	VBZ
to	TO
Java	NNP
(	(
although	IN
C	NNP
#	#
has	VBZ
it	PRP
too	RB
)	)
.	.
I'll	NNP
use	NN
just	RB
Java	NNP
terminology	NN
,	,
because	IN
I	PRP
am	VBP
more	RBR
au	JJ
fait	NN
with	IN
that	DT
.	.
As	IN
the	DT
answers	NNS
mentioned	VBD
,	,
int	NN
is	VBZ
just	RB
a	DT
number	NN
(	(
called	VBN
the	DT
unboxed	JJ
type	NN
)	)
,	,
whereas	JJ
Integer	NNP
is	VBZ
an	DT
object	NN
(	(
which	WDT
contains	VBZ
the	DT
number	NN
,	,
hence	RB
a	DT
boxed	JJ
type	NN
)	)
.	.
In	IN
Java	NNP
terms	NNS
,	,
that	DT
means	VBZ
(	(
apart	RB
from	IN
not	RB
being	VBG
able	JJ
to	TO
call	VB
methods	NNS
on	IN
int	NN
)	)
,	,
you	PRP
cannot	VBP
store	VB
int	NN
or	CC
other	JJ
non-object	JJ
types	NNS
in	IN
collections	NNS
(	(
List	NNP
,	,
Map	NNP
,	,
etc	FW
.	.
)	)
.	.
In	IN
order	NN
to	TO
store	VB
them	PRP
,	,
you	PRP
must	MD
first	VB
box	VB
them	PRP
up	RP
in	IN
its	PRP$
corresponding	NN
boxed	JJ
type	NN
.	.
Java	NNP
5	CD
onwards	NNS
have	VBP
something	NN
called	VBN
auto-boxing	JJ
and	CC
auto-unboxing	JJ
which	WDT
allow	VBP
the	DT
boxing	NN
/unboxing	VBG
to	TO
be	VB
done	VBN
behind	IN
the	DT
scenes	NNS
.	.
Compare	NNP
and	CC
contrast	NN
:	:
Java	NNP
5	CD
version	NN
:	:
Deque	NNP
<Integer	NNP
>	NNP
queue	NN
;void	NNP
add(	NN
int	NN
n	NN
)	)
{	(
queue.add(	JJ
n	NN
)	)
;	:
}int	CC
remove()	VB
{	(
return	VB
queue.remove()	NN
;	:
}	)
Java	NNP
1	CD
.	.
4	CD
or	CC
earlier	JJR
(	(
no	DT
generics	NNS
either	CC
)	)
:	:
Deque	NNP
queue	VBZ
;void	JJ
add(	NN
int	NN
n	NN
)	)
{	(
queue.add(	JJ
Integer.valueOf(	NNP
n	NN
)	)
)	)
;	:
}int	CC
remove()	VB
{	(
return	VB
((	NNP
Integer	NNP
)	)
queue.remove()	NN
)	)
.	.
intValue()	NN
;	:
}	)
It	PRP
must	MD
be	VB
noted	VBN
that	IN
despite	IN
the	DT
brevity	NN
in	IN
the	DT
Java	NNP
5	CD
version	NN
,	,
both	DT
versions	NNS
generate	VBP
identical	JJ
bytecode	NN
.	.
Thus	RB
,	,
although	IN
auto-boxing	JJ
and	CC
auto-unboxing	JJ
is	VBZ
very	RB
convenient	JJ
because	IN
you	PRP
write	VBP
less	JJR
code	NN
,	,
these	DT
operations	NNS
do	VBP
happen	VB
behind	IN
the	DT
scenes	NNS
,	,
with	IN
the	DT
same	JJ
runtime	NN
costs	NNS
,	,
so	IN
you	PRP
still	RB
have	VBP
to	TO
be	VB
aware	JJ
of	IN
their	PRP$
existence	NN
.	.
Hope	VBP
this	DT
helps	NN
!	.
		
I'm	NNP
not	RB
a	DT
PHP	NNP
dev	NN
but	CC
Google	NNP
says	VBZ
that	IN
PHP	NNP
5	CD
+	NN
can	MD
instantiate	VB
COM	NNP
components	NNS
.	.
If	IN
you	PRP
can	MD
install	VB
Outlook	NNP
on	IN
a	DT
box	NN
you	PRP
could	MD
write	VB
a	DT
PHP	NNP
web	NN
service	NN
around	IN
the	DT
COM	NNP
component	NN
to	TO
handle	VB
the	DT
requests	NNS
you	PRP
need	VBP
.	.
$outlook	VB
=	JJ
COM(	NNP
"Outlook	NNP
.	.
Application	NNP
"	NNP
)	)
Outlook	NNP
API	NNP
referance	NN
		
I	PRP
found	VBD
this	DT
page	NN
which	WDT
shows	VBZ
what	WP
the	DT
difference	NN
between	IN
Proc	NNP
.	.
new	JJ
and	CC
lambda	JJ
are	VBP
.	.
According	VBG
to	TO
the	DT
page	NN
,	,
the	DT
only	JJ
difference	NN
is	VBZ
that	IN
a	DT
lambda	NN
is	VBZ
strict	JJ
about	IN
the	DT
number	NN
of	IN
arguments	NNS
it	PRP
accepts	VBZ
,	,
whereas	JJ
Proc	NNP
.	.
new	JJ
converts	NNS
missing	VBG
arguments	NNS
to	TO
nil	VB
.	.
Here	RB
is	VBZ
an	DT
example	NN
IRB	NNP
session	NN
illustrating	VBG
the	DT
difference	NN
:	:
irb(	NN
main	JJ
)	)
:001	FW
:0	FW
>	FW
l	NN
=	NNP
lambda	VBZ
{	(
|x	NN
,	,
y	CC
|	NNP
x	NNP
+	NNP
y	NN
}	)
=	NNP
>	NNP
#	#
<Proc	NNP
:0x00007fc605ec0748	NNP
@	NNP
(	(
irb	NN
)	)
:1	VBZ
>	JJ
irb(	NN
main	JJ
)	)
:002	FW
:0	FW
>	FW
p	FW
=	FW
Proc	NNP
.	.
new	JJ
{	(
|x	JJ
,	,
y	JJ
|	NNP
x	NNP
+	NNP
y	NN
}	)
=	NNP
>	NNP
#	#
<Proc	NNP
:0x00007fc605ea8698	NNP
@	NNP
(	(
irb	NN
)	)
:2	VBZ
>	JJ
irb(	NN
main	JJ
)	)
:003	FW
:0	FW
>	FW
l	NN
.	.
call	VB
"hello	JJ
"	NN
,	,
"world	NNP
"	NNP
=	NNP
>	NNP
"helloworld	NNP
"	NNP
irb(	NN
main	JJ
)	)
:004	FW
:0	FW
>	FW
p	NN
.	.
call	VB
"hello	JJ
"	NN
,	,
"world	NNP
"	NNP
=	NNP
>	NNP
"helloworld	NNP
"	NNP
irb(	NN
main	JJ
)	)
:005	FW
:0	FW
>	FW
l	NN
.	.
call	VB
"hello	JJ
"	JJ
ArgumentError	NN
:	:
wrong	JJ
number	NN
of	IN
arguments	NNS
(	(
1	CD
for	IN
2	CD
)	)
from	IN
(	(
irb	NN
)	)
:1	NN
from	IN
(	(
irb	NN
)	)
:5	VBZ
:in	JJ
`call	NN
'	''
from	IN
(	(
irb	NN
)	)
:5	NN
from	IN
:0	NNP
irb(	NN
main	JJ
)	)
:006	FW
:0	FW
>	FW
p	NN
.	.
call	VB
"hello	JJ
"	JJ
TypeError	NN
:	:
can't	NN
convert	VB
nil	NN
into	IN
String	VBG
from	IN
(	(
irb	NN
)	)
:2	VBZ
:in	JJ
`	``
+	NNS
'	''
from	IN
(	(
irb	NN
)	)
:2	NN
from	IN
(	(
irb	NN
)	)
:6	VBZ
:in	JJ
`call	NN
'	''
from	IN
(	(
irb	NN
)	)
:6	NN
from	IN
:0	VBG
The	DT
page	NN
also	RB
recommends	VBZ
using	VBG
lambda	JJ
unless	IN
you	PRP
specifically	RB
want	VBP
the	DT
error	NN
tolerant	JJ
behavior	NN
.	.
I	PRP
agree	VBP
with	IN
this	DT
sentiment	NN
.	.
Using	VBG
a	DT
lambda	NN
seems	VBZ
a	DT
tad	RB
more	RBR
concise	NN
,	,
and	CC
with	IN
such	JJ
an	DT
insignificant	JJ
difference	NN
,	,
it	PRP
seems	VBZ
the	DT
better	JJR
choice	NN
in	IN
the	DT
average	JJ
situation	NN
.	.
As	IN
for	IN
Ruby	NNP
1	CD
.	.
9	CD
,	,
sorry	NN
,	,
I	PRP
haven't	VBP
looked	VBD
into	IN
1	CD
.	.
9	CD
yet	RB
,	,
but	CC
I	PRP
don't	VBP
imagine	JJ
they	PRP
would	MD
change	VB
it	PRP
all	PDT
that	RB
much	JJ
(	(
don't	JJ
take	VB
my	PRP$
word	NN
for	IN
it	PRP
though	IN
,	,
it	PRP
seems	VBZ
you	PRP
have	VBP
heard	VBN
of	IN
some	DT
changes	NNS
,	,
so	IN
I	PRP
am	VBP
probably	RB
wrong	JJ
there	RB
)	)
.	.
		
With	IN
the	DT
"Built	NN
in	IN
"	NNP
stuff	NN
,	,
you	PRP
can't	VBP
,	,
as	IN
using	VBG
1	CD
.	.
0	CD
.	.
*	NN
or	CC
1	CD
.	.
0	CD
.	.
0	CD
.	.
*	NN
will	MD
replace	VB
the	DT
revision	NN
and	CC
build	JJ
numbers	NNS
with	IN
a	DT
coded	JJ
date	NN
/timestamp	NN
,	,
which	WDT
is	VBZ
usually	RB
also	RB
a	DT
good	JJ
way	NN
.	.
For	IN
more	JJR
info	NN
,	,
see	VBP
the	DT
Assembly	NNP
Linker	NNP
Documentation	NNP
in	IN
the	DT
/v	NNP
tag	NN
.	.
As	IN
for	IN
automatically	RB
incrementing	VBG
numbers	NNS
,	,
use	VBP
the	DT
AssemblyInfo	NNP
Task	NNP
:	:
AssemblyInfo	NNP
Task	NNP
This	DT
can	MD
be	VB
configured	VBN
to	TO
automatically	RB
increment	VB
the	DT
build	JJ
number	NN
.	.
There	EX
are	VBP
2	CD
Gotchas	NNP
:	:
Each	DT
of	IN
the	DT
4	CD
numbers	NNS
in	IN
the	DT
Version	NNP
string	NN
is	VBZ
limited	VBN
to	TO
65535	CD
.	.
This	DT
is	VBZ
a	DT
Windows	NNP
Limitation	NNP
and	CC
unlikely	RB
to	TO
get	VB
fixed	VBN
.	.
Why	WRB
are	VBP
build	JJ
numbers	NNS
limited	VBD
to	TO
65535	CD
?	.
Using	VBG
with	IN
with	IN
Subversion	NNP
requires	VBZ
a	DT
small	JJ
change	NN
:	:
Using	NN
MSBuild	NNP
to	TO
generate	VB
assembly	NN
version	NN
info	NN
at	IN
build	JJ
time	NN
(	(
including	VBG
SubVersion	NNP
fix	NN
)	)
Retrieving	VBG
the	DT
Version	NNP
number	NN
is	VBZ
then	RB
quite	RB
easy	JJ
:	:
Version	NN
v	NN
=	NNP
Assembly.GetExecutingAssembly()	NNP
.	.
GetName()	NNP
.	.
Version	NNP
;	:
string	VBG
About	IN
=	NNP
string.Format(	NN
CultureInfo	NNP
.	.
InvariantCulture	NN
,	,
@	NNP
"YourApp	NNP
Version	NNP
{0	NNP
}	)
.	.
{1	JJ
}	)
.	.
{2	JJ
}	)
(	(
r	JJ
{3	NNP
}	)
)	)
"	NN
,	,
v	NN
.	.
Major	NNP
,	,
v	NN
.	.
Minor	NNP
,	,
v	NN
.	.
Build	NNP
,	,
v	NN
.	.
Revision	NNP
)	)
;	:
And	CC
,	,
to	TO
clarify	VB
:	:
In	IN
.	.
net	NN
or	CC
at	IN
least	JJS
in	IN
C	NNP
#	#
,	,
the	DT
build	NN
is	VBZ
actually	RB
the	DT
THIRD	NNP
number	NN
,	,
not	RB
the	DT
fourth	JJ
one	CD
as	IN
some	DT
people	NNS
(	(
for	IN
example	NN
Delphi	NNP
Developers	NNP
who	WP
are	VBP
used	VBN
to	TO
Major	NNP
.	.
Minor	NNP
.	.
Release	NNP
.	.
Build	NNP
)	)
might	MD
expect	VB
.	.
In	IN
.	.
net	NN
,	,
it's	NN
Major	NNP
.	.
Minor	NNP
.	.
Build	NNP
.	.
Revision	NNP
.	.
		
I	PRP
would	MD
use	VB
Javascript	NNP
to	TO
submit	VB
the	DT
form	NN
.	.
The	DT
function	NN
would	MD
be	VB
triggered	VBN
by	IN
the	DT
OnKeyPress	NNP
event	NN
of	IN
the	DT
form	NN
element	NN
,	,
and	CC
would	MD
detect	VB
whether	IN
the	DT
Enter	NNP
key	NN
was	VBD
selected	VBN
.	.
If	IN
this	DT
is	VBZ
the	DT
case	NN
,	,
it	PRP
will	MD
submit	VB
the	DT
form	NN
.	.
Here	RB
are	VBP
two	CD
pages	NNS
that	WDT
give	VBP
techniques	NNS
on	IN
how	WRB
to	TO
do	VB
this	DT
:	:
1	CD
,	,
2	CD
.	.
Based	VBN
on	IN
these	DT
,	,
here	RB
is	VBZ
an	DT
example	NN
of	IN
usage	NN
(	(
based	VBN
on	IN
here	RB
)	)
:	:
<SCRIPT	JJ
TYPE	NNP
=	NNP
"text	NNP
/javascript	NNP
"	NNP
>	NNP
<	NN
!	.
--	:
function	NN
submitenter(	JJ
myfield	NN
,	,
e	NN
)	)
{	(
var	JJ
keycode	NN
;	:
if	IN
(	(
window	NN
.	.
event	NN
)	)
{	(
keycode	NN
=	NN
window	NN
.	.
event	NN
.	.
keyCode	NN
;	:
}	)
else	RB
if	IN
(	(
e	NN
)	)
{	(
keycode	VB
=	NNP
e	NN
.	.
which	WDT
;	:
}	)
else	RB
{	(
return	NN
true	JJ
;	:
}	)
if	IN
(	(
keycode	FW
=	NNP
=	NNP
13	CD
)	)
{	(
myfield.form.submit()	NN
;	:
return	NN
false	JJ
;	:
}	)
else	RB
{	(
return	NN
true	JJ
;	:
}	)
}	)
/	JJ
/	NNP
--	:
>	JJ
<	JJ
/SCRIPT	NN
>	NNP
<INPUT	NNP
NAME	NNP
=	NNP
"MyText	NNP
"	NNP
TYPE	NNP
=	NNP
"Text	NNP
"	NNP
onKeyPress	NN
=	NNP
"return	NNP
submitenter(	NN
this	DT
,	,
event	NN
)	)
"	NN
/	NNP
>	NNP
		
How	NNP
often	RB
do	VBP
you	PRP
need	VB
to	TO
check	VB
for	IN
changes	NNS
and	CC
how	WRB
large	JJ
(	(
in	IN
terms	NNS
of	IN
row	NN
size	NN
)	)
are	VBP
the	DT
tables	NNS
in	IN
the	DT
database	NN
?	.
If	IN
you	PRP
use	VBP
the	DT
CHECKSUM_AGG(	NNP
BINARY_CHECKSUM(	NNP
*	NNP
)	)
)	)
method	NN
suggested	VBN
by	IN
John	NNP
,	,
it	PRP
will	MD
scan	VB
every	DT
row	NN
of	IN
the	DT
specified	VBN
table	NN
.	.
The	DT
NOLOCK	NNP
hint	NN
helps	VBZ
,	,
but	CC
on	IN
a	DT
large	JJ
database	NN
,	,
you	PRP
are	VBP
still	RB
hitting	VBG
every	DT
row	NN
.	.
You	PRP
will	MD
also	RB
need	VB
to	TO
store	VB
the	DT
checksum	NN
for	IN
every	DT
row	NN
so	IN
that	IN
you	PRP
tell	VBP
one	CD
has	VBZ
changed	VBN
.	.
Have	VBP
you	PRP
considered	VBN
going	VBG
at	IN
this	DT
from	IN
a	DT
different	JJ
angle	NN
?	.
If	IN
you	PRP
do	VBP
not	RB
want	VB
to	TO
modify	VB
the	DT
schema	NN
to	TO
add	VB
triggers	NNS
,	,
(	(
which	WDT
makes	VBZ
a	DT
sense	NN
,	,
it's	VBZ
not	RB
your	PRP$
database	NN
)	)
,	,
have	VBP
you	PRP
considered	VBN
working	VBG
with	IN
the	DT
application	NN
vendor	NN
that	WDT
does	VBZ
make	VB
the	DT
database	NN
?	.
They	PRP
could	MD
implement	VB
an	DT
API	NNP
that	WDT
provides	VBZ
a	DT
mechanism	NN
for	IN
notifying	VBG
accessory	JJ
apps	NN
that	WDT
data	NN
has	VBZ
changed	VBN
.	.
It	PRP
could	MD
be	VB
as	RB
simple	JJ
as	IN
writing	VBG
to	TO
a	DT
notification	NN
table	NN
that	WDT
lists	VBZ
what	WP
table	NN
and	CC
which	WDT
row	VBP
were	VBD
modified	VBN
.	.
That	DT
could	MD
be	VB
implemented	VBN
through	IN
triggers	NNS
or	CC
application	NN
code	NN
.	.
From	IN
your	PRP$
side	NN
,	,
ti	VBP
wouldn't	JJ
matter	NN
,	,
your	PRP$
only	JJ
concern	NN
would	MD
be	VB
scanning	VBG
the	DT
notification	NN
table	NN
on	IN
a	DT
periodic	JJ
basis	NN
.	.
The	DT
performance	NN
hit	VBD
on	IN
the	DT
database	NN
would	MD
be	VB
far	RB
less	JJR
than	IN
scanning	VBG
every	DT
row	NN
for	IN
changes	NNS
.	.
The	DT
hard	JJ
part	NN
would	MD
be	VB
convincing	VBG
the	DT
application	NN
vendor	NN
to	TO
implement	VB
this	DT
feature	NN
.	.
Since	IN
this	DT
can	MD
be	VB
handles	NNS
entirely	RB
through	IN
SQL	NNP
via	IN
triggers	NNS
,	,
you	PRP
could	MD
do	VB
the	DT
bulk	NN
of	IN
the	DT
work	NN
for	IN
them	PRP
by	IN
writing	VBG
and	CC
testing	VBG
the	DT
triggers	NNS
and	CC
then	RB
bringing	VBG
the	DT
code	NN
to	TO
the	DT
application	NN
vendor	NN
.	.
By	IN
having	VBG
the	DT
vendor	NN
support	NN
the	DT
triggers	NNS
,	,
it	PRP
prevent	VBD
the	DT
situation	NN
where	WRB
your	PRP$
adding	VBG
a	DT
trigger	NN
inadvertently	RB
replaces	VBZ
a	DT
trigger	NN
supplied	VBN
by	IN
the	DT
vendor	NN
.	.
		
No	NNP
,	,
you	PRP
were	VBD
not	RB
dreaming	VBG
.	.
Python	NNP
has	VBZ
a	DT
pretty	RB
excellent	JJ
list	NN
comprehension	NN
system	NN
that	WDT
lets	VBZ
you	PRP
manipulate	VBP
lists	NNS
pretty	RB
elegantly	RB
,	,
and	CC
depending	VBG
on	IN
exactly	RB
what	WP
you	PRP
want	VBP
to	TO
accomplish	VB
,	,
this	DT
can	MD
be	VB
done	VBN
a	DT
couple	NN
of	IN
ways	NNS
.	.
In	IN
essence	NN
,	,
what	WP
you're	NN
doing	VBG
is	VBZ
saying	VBG
"For	JJ
item	NN
in	IN
list	NN
if	IN
criteria	NNS
.	.
matches	NNS
"	VBP
,	,
and	CC
from	IN
that	IN
you	PRP
can	MD
just	RB
iterate	VB
through	IN
the	DT
results	NNS
or	CC
dump	VB
the	DT
results	NNS
into	IN
a	DT
new	JJ
list	NN
.	.
I'm	NNP
going	VBG
to	TO
crib	VB
an	DT
example	NN
from	IN
Dive	NNP
Into	NNP
Python	NNP
here	RB
,	,
because	IN
it's	JJ
pretty	JJ
elegant	JJ
and	CC
they're	JJ
smarter	NN
than	IN
I	PRP
am	VBP
.	.
Here	RB
they're	VBZ
getting	VBG
a	DT
list	NN
of	IN
files	NNS
in	IN
a	DT
directory	NN
,	,
then	RB
filtering	VBG
the	DT
list	NN
for	IN
all	DT
files	NNS
that	WDT
match	VBP
a	DT
regular	JJ
expression	NN
criteria	NNS
.	.
files	NNS
=	VBP
os.listdir(	JJ
path	NN
)	)
test	NN
=	NN
re.compile(	NN
"test	NNP
\	NNP
.	.
py	VB
$	$
"	CD
,	,
re	NN
.	.
IGNORECASE	NNP
)	)
files	VBZ
=	JJ
[f	NN
for	IN
f	NN
in	IN
files	NNS
if	IN
test.search(	JJ
f	NN
)	)
]	NN
You	PRP
could	MD
do	VB
this	DT
without	IN
regular	JJ
expressions	NNS
,	,
for	IN
your	PRP$
example	NN
,	,
for	IN
anything	NN
where	WRB
your	PRP$
expression	NN
at	IN
the	DT
end	NN
returns	VBZ
true	JJ
for	IN
a	DT
match	NN
.	.
There	EX
are	VBP
other	JJ
options	NNS
like	IN
using	VBG
the	DT
filter()	NN
function	NN
,	,
but	CC
if	IN
I	PRP
were	VBD
going	VBG
to	TO
choose	VB
,	,
I'd	NNP
go	VBP
with	IN
this	DT
.	.
Eric	JJ
Sipple	NNP
		
I	PRP
think	VBP
:	:
#	#
!	.
/bin	JJ
/pythonbar	NN
in	IN
dict(	JJ
Foo	NNP
)	)
Is	VBZ
what	WP
you	PRP
are	VBP
thinking	VBG
of	IN
.	.
When	WRB
trying	VBG
to	TO
see	VB
if	IN
a	DT
certain	JJ
key	JJ
exists	NNS
within	IN
a	DT
dictionary	JJ
in	IN
python	NN
(	(
python's	JJ
version	NN
of	IN
a	DT
hash	NN
table	NN
)	)
there	EX
are	VBP
two	CD
ways	NNS
to	TO
check	VB
.	.
First	NNP
is	VBZ
the	DT
has_key()	NN
method	NN
attached	VBN
to	TO
the	DT
dictionary	JJ
and	CC
second	JJ
is	VBZ
the	DT
example	NN
given	VBN
above	IN
.	.
It	PRP
will	MD
return	VB
a	DT
boolean	JJ
value	NN
.	.
That	DT
should	MD
answer	VB
your	PRP$
question	NN
.	.
And	CC
now	RB
a	DT
little	JJ
off	RP
topic	NN
to	TO
tie	VB
this	DT
in	IN
to	TO
the	DT
list	NN
comprehension	NN
answer	VBZ
previously	RB
given	VBN
(	(
for	IN
a	DT
bit	NN
more	JJR
clarity	NN
)	)
.	.
List	JJ
Comprehensions	NNP
construct	NN
a	DT
list	NN
from	IN
a	DT
basic	JJ
for	IN
loop	NN
with	IN
modifiers	NNS
.	.
As	IN
an	DT
example	NN
(	(
to	TO
clarify	VB
slightly	RB
)	)
,	,
a	DT
way	NN
to	TO
use	VB
the	DT
in	IN
dict	JJ
language	NN
construct	NN
in	IN
a	DT
_list	JJ
comprehension_	NN
:	:
Say	NNP
you	PRP
have	VBP
a	DT
two	CD
dimensional	JJ
dictionary	JJ
foo	NN
and	CC
you	PRP
only	RB
want	VBP
the	DT
second	JJ
dimension	NN
dictionaries	NNS
which	WDT
contain	VBP
the	DT
key	JJ
bar	NN
.	.
A	DT
relatively	RB
straightforward	JJ
way	NN
to	TO
do	VB
so	RB
would	MD
be	VB
to	TO
use	VB
a	DT
list	NN
comprehension	NN
with	IN
a	DT
conditional	JJ
as	IN
follows	VBZ
:	:
#	#
!	.
/bin	NN
/pythonbaz	NNP
=	NNP
dict(	NN
[	NNP
(	(
key	JJ
,	,
value	NN
)	)
for	IN
key	NN
,	,
value	NN
in	IN
foo	NN
if	IN
bar	NN
in	IN
value	NN
]	NN
)	)
Note	VBP
the	DT
if	IN
bar	NN
in	IN
value	NN
at	IN
the	DT
end	NN
of	IN
the	DT
statement	NN
,	,
this	DT
is	VBZ
a	DT
modifying	NN
clause	NN
which	WDT
tells	VBZ
the	DT
list	NN
comprehension	NN
to	TO
only	RB
keep	VB
those	DT
key-value	JJ
pairs	NNS
which	WDT
meet	VBP
the	DT
conditional	NN
.	.
In	IN
this	DT
case	NN
baz	NN
is	VBZ
a	DT
new	JJ
dictionary	NN
which	WDT
contains	VBZ
only	RB
the	DT
dictionaries	NNS
from	IN
foo	NN
which	WDT
contain	VBP
bar	NN
(	(
Hopefully	NNP
I	PRP
didn't	VBP
miss	JJ
anything	NN
in	IN
that	DT
code	NN
example	NN
...	:
you	PRP
may	MD
have	VB
to	TO
take	VB
a	DT
look	NN
at	IN
the	DT
list	NN
comprehension	NN
documentation	NN
found	VBD
in	IN
docs	NN
.	.
python	NN
.	.
org	JJ
tutorials	NNS
and	CC
at	IN
secnetix	NN
.	.
de	NN
,	,
both	DT
sites	NNS
are	VBP
good	JJ
references	NNS
if	IN
you	PRP
have	VBP
questions	NNS
in	IN
the	DT
future	NN
.	.
)	)
.	.
		
Are	NNP
you	PRP
looking	VBG
to	TO
get	VB
a	DT
list	NN
of	IN
objects	NNS
that	WDT
have	VBP
a	DT
certain	JJ
attribute	NN
?	.
If	IN
so	RB
,	,
a	DT
list	NN
comprehension	NN
is	VBZ
the	DT
right	JJ
way	NN
to	TO
do	VB
this	DT
.	.
result	NN
=	JJ
[obj	NN
for	IN
obj	NN
in	IN
listOfObjs	NN
if	IN
hasattr(	JJ
obj	NN
,	,
'	''
attributeName	NN
'	''
)	)
]	FW
		
Here	RB
is	VBZ
a	DT
simple	JJ
static	JJ
method	NN
to	TO
do	VB
this	DT
in	IN
C	NNP
#	#
:	:
public	JJ
static	JJ
string	NN
ToTitleCaseInvariant(	NNP
string	VBG
targetString	VBG
)	)
{	(
return	NN
System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(	NNP
targetString	NN
)	)
;	:
}	)
		
In	IN
what	WP
language	NN
?	.
In	IN
PHP	NNP
it	PRP
is	VBZ
:	:
ucwords()	JJ
example	NN
:	:
$HelloWorld	NN
=	VBZ
ucwords(	JJ
'	''
hello	JJ
world	NN
'	''
)	)
;	:
		
What	WP
I	PRP
was	VBD
thinking	VBG
of	IN
can	MD
be	VB
achieved	VBN
using	VBG
list	NN
comprehensions	NNS
,	,
but	CC
I	PRP
thought	VBD
that	IN
there	EX
was	VBD
a	DT
function	NN
that	WDT
did	VBD
this	DT
in	IN
a	DT
slightly	RB
neater	JJ
way	NN
.	.
i	NN
.	.
e	NN
.	.
'	''
bar	NN
'	''
is	VBZ
a	DT
list	NN
of	IN
objects	NNS
,	,
all	DT
of	IN
which	WDT
have	VBP
the	DT
attribute	NN
'	POS
id	NN
'	''
The	DT
mythical	JJ
functional	JJ
way	NN
:	:
foo	NN
=	VBZ
12foo	CD
in	IN
iter_attr(	JJ
bar	NN
,	,
'	''
id	NN
'	''
)	)
The	DT
list	NN
comprehension	NN
way	NN
:	:
foo	NN
=	VBZ
12foo	CD
in	IN
[obj	NN
.	.
id	NN
for	IN
obj	NN
in	IN
bar	NN
]	NN
In	IN
retrospect	NN
the	DT
list	NN
comprehension	NN
way	NN
is	VBZ
pretty	JJ
neat	JJ
anyway	RB
.	.
		
One	CD
implementation	NN
of	IN
this	DT
problem	NN
is	VBZ
to	TO
attempt	VB
to	TO
call	VB
the	DT
parameter-less	JJ
constructor	NN
of	IN
the	DT
Type	NN
:	:
public	JJ
static	JJ
object	NN
GetNewObject(	NNP
Type	NNP
t	NN
)	)
{	(
try	VB
{	(
return	VB
t.GetConstructor(	RP
new	JJ
Type	NNP
[	NNP
]	NNP
{	(
}	)
)	)
.	.
Invoke(	NNP
new	JJ
object	JJ
[	NNP
]	NNP
{	(
}	)
)	)
;	:
}	)
catch	VB
{	(
return	VB
null	NN
;	:
}	)
}	)
Here	RB
is	VBZ
the	DT
same	JJ
approach	NN
,	,
contained	VBN
in	IN
a	DT
generic	JJ
method	NN
:	:
public	JJ
static	JJ
T	NNP
GetNewObject	NNP
<T	NNP
>	NNP
(	(
)	)
{	(
try	VB
{	(
return	NN
(	(
T	NNP
)typeof	NNP
(	(
T	NNP
)	)
.	.
GetConstructor(	NNP
new	JJ
Type	NNP
[	NNP
]	NNP
{	(
}	)
)	)
.	.
Invoke(	NNP
new	JJ
object	JJ
[	NNP
]	NNP
{	(
}	)
)	)
;	:
}	)
catch	VB
{	(
return	VB
default(	JJ
T	NNP
)	)
;	:
}	)
}	)
		
The	DT
Activator	NNP
class	NN
within	IN
the	DT
root	NN
System	NNP
namespace	NN
is	VBZ
pretty	RB
powerful	JJ
.	.
There	EX
are	VBP
a	DT
lot	NN
of	IN
overloads	NNS
for	IN
passing	VBG
parameters	NNS
to	TO
the	DT
constructor	NN
and	CC
such	JJ
.	.
Check	VB
out	IN
the	DT
documentation	NN
at	IN
:	:
http	NN
:	:
/	JJ
/msdn	NN
.	.
microsoft	NN
.	.
com	NN
/en	SYM
-	:
us	PRP
/library	JJ
/system	NN
.	.
activator	NN
.	.
createinstance	NN
.	.
aspx	NN
Here	RB
are	VBP
some	DT
simple	JJ
examples	NNS
:	:
ObjectType	NNP
instance	NN
=	NNP
(	(
ObjectType	NNP
)Activator	NNP
.	.
CreateInstance(	NNP
objectType	NN
)	)
;	:
ObjectType	NNP
instance	NN
=	NNP
(	(
ObjectType	NNP
)Activator	NNP
.	.
CreateInstance(	NNP
"MyAssembly	RB
"	NNP
,	,
"MyNamespace	NNP
.	.
ObjectType	NNP
"	NNP
)	)
;	:
		
Here	RB
is	VBZ
my	PRP$
current	JJ
method	NN
.	.
Any	DT
suggestions	NNS
?	.
Regex	NNP
singleMToDoubleRegex	VBD
=	NNP
new	JJ
Regex(	NNP
"	NNP
(	(
?	.
<	''
!m	JJ
)m	NN
(	(
?	.
!m	NN
)	)
"	NN
)	)
;Regex	VBZ
singleDToDoubleRegex	JJ
=	NNP
new	JJ
Regex(	NNP
"	NNP
(	(
?	.
<	''
!d	JJ
)d	NN
(	(
?	.
!d	NN
)	)
"	NN
)	)
;CultureInfo	VBZ
currentCulture	NN
=	NNP
CultureInfo	NNP
.	.
CurrentUICulture	NN
;	:
/	CC
/	VB
If	IN
the	DT
culture	NN
is	VBZ
netural	JJ
there	EX
is	VBZ
no	DT
date	NN
pattern	NN
to	TO
use	VB
,	,
so	RB
use	IN
the	DT
default	NN
.	.
if	IN
(	(
currentCulture	NN
.	.
IsNeutralCulture	NN
)	)
{	(
currentCulture	NN
=	VBZ
CultureInfo	NNP
.	.
InvariantCulture	NN
;	:
}	)
/	FW
/	JJ
Massage	NNP
the	DT
format	NN
into	IN
a	DT
more	RBR
general	JJ
user	NN
friendly	JJ
form	NN
.	.
string	VBG
shortDatePattern	JJ
=	NNP
CultureInfo.CurrentUICulture.DateTimeFormat.ShortDatePattern.ToLower()	NNP
;shortDatePattern	NNP
=	NNP
singleMToDoubleRegex.Replace(	NN
shortDatePattern	NN
,	,
"mm	NNP
"	NNP
)	)
;shortDatePattern	VBP
=	JJ
singleDToDoubleRegex.Replace(	NN
shortDatePattern	NN
,	,
"dd	NNP
"	NNP
)	)
;	:
		
You	PRP
can	MD
print	VB
from	IN
the	DT
command	NN
line	NN
using	VBG
the	DT
following	NN
:	:
rundll32	NN
.	.
exe	VB
%WINDIR	CD
%	NN
\System32	JJ
\mshtml	NNP
.	.
dll	NN
,	,
PrintHTML	NNP
"	NNP
%1	NNP
"	NNP
Where	NNP
%1	NNP
is	VBZ
the	DT
file	JJ
path	NN
of	IN
the	DT
html	NN
file	NN
to	TO
be	VB
printed	VBN
.	.
If	IN
you	PRP
don't	VBP
need	VB
to	TO
print	VB
from	IN
memory	NN
(	(
or	CC
can	MD
afford	VB
to	TO
write	VB
to	TO
the	DT
disk	NN
in	IN
a	DT
temp	NN
file	NN
)	)
you	PRP
can	MD
use	VB
:	:
using	VBG
(	(
Process	NNP
printProcess	RB
=	VBD
new	JJ
Process()	NNP
)	)
{	(
string	VBG
systemPath	NN
=	NNP
Environment.GetFolderPath(	NNP
Environment	NNP
.	.
SpecialFolder	NNP
.	.
System	NNP
)	)
;	:
printProcess	NN
.	.
StartInfo	NNP
.	.
FileName	NNP
=	NNP
systemPath	NN
+	NNP
@	NNP
"	NNP
\rundll32	NNP
.	.
exe	NN
"	NN
;	:
printProcess	NN
.	.
StartInfo	NNP
.	.
Arguments	NNS
=	JJ
systemPath	NN
+	NNP
@	NNP
"	NNP
\mshtml	NNP
.	.
dll	NN
,	,
PrintHTML	NNP
"	NNP
"	NNP
"	NNP
+	NNP
fileToPrint	NN
+	NNP
@	NNP
"	NNP
"	NNP
"	NNP
"	NNP
;	:
printProcess.Start()	NN
;	:
}	)
N	NNP
.	.
B	NNP
.	.
This	DT
only	JJ
works	VBZ
on	IN
Windows	NNP
2000	CD
and	CC
above	IN
I	PRP
think	VBP
.	.
		
Here's	NNP
a	DT
Perl	NNP
solution	NN
http	NN
:	:
/	NN
/daringfireball	NN
.	.
net	JJ
/2008	NN
/05	NNP
/title_case	NNP
Here's	NNP
a	DT
Ruby	NNP
solution	NN
http	NN
:	:
/	JJ
/frankschmitt	NN
.	.
org	JJ
/projects	NNS
/title	SYM
-	:
case	NN
Here's	NNP
a	DT
Ruby	NNP
one-liner	JJ
solution	NN
:	:
http	NN
:	:
/	JJ
/snippets	NNS
.	.
dzone	NN
.	.
com	NN
/posts	VBZ
/show	VBP
/4702	NNP
'	POS
some	DT
string	NN
here	RB
'	POS
.	.
gsub(	NN
/	JJ
\b	NNP
\w	NNP
/	NNP
)	)
{	(
$	$
&	CC
.	.
upcase	NN
}	)
What	WP
the	DT
one-liner	NN
is	VBZ
doing	VBG
is	VBZ
using	VBG
a	DT
regular	JJ
expression	NN
substitution	NN
of	IN
the	DT
first	JJ
character	NN
of	IN
each	DT
word	NN
with	IN
the	DT
uppercase	JJ
version	NN
of	IN
it	PRP
.	.
		
I	PRP
haven't	VBP
been	VBN
able	JJ
to	TO
find	VB
an	DT
understandable	JJ
explanation	NN
of	IN
how	WRB
to	TO
actually	RB
use	VB
Python's	NNP
itertools.groupby()	JJ
function	NN
.	.
What	WP
I'm	NNP
trying	VBG
to	TO
do	VB
is	VBZ
this	DT
:	:
Take	VB
a	DT
list	NN
-	:
in	IN
this	DT
case	NN
,	,
the	DT
children	NNS
of	IN
an	DT
objectified	JJ
lxml	NN
element	NN
Divide	NNP
it	PRP
into	IN
groups	NNS
based	VBN
on	IN
some	DT
criteria	NNS
Then	RB
later	RB
iterate	VB
over	IN
each	DT
of	IN
these	DT
groups	NNS
separately	RB
.	.
I've	NNP
reviewed	VBD
the	DT
documentation	NN
,	,
and	CC
the	DT
examples	NNS
,	,
but	CC
I've	NNP
had	VBD
trouble	NN
trying	VBG
to	TO
apply	VB
them	PRP
beyond	IN
a	DT
simple	JJ
list	NN
of	IN
numbers	NNS
.	.
So	RB
,	,
how	WRB
do	VBP
I	PRP
use	NN
of	IN
itertools.groupby()	NN
?	.
Is	VBZ
there	RB
another	DT
technique	NN
I	PRP
should	MD
be	VB
using	VBG
?	.
Pointers	NNS
to	TO
good	JJ
"prerequisite	NNP
"	NN
reading	NN
would	MD
also	RB
be	VB
appreciated	VBN
.	.
		
I	PRP
don't	VBP
have	VB
any	DT
experience	NN
with	IN
http	NN
:	:
/	JJ
/www	NN
.	.
SiteGround	NNP
.	.
com	NN
as	IN
a	DT
web	NN
host	NN
personally	RB
.	.
This	DT
is	VBZ
just	RB
a	DT
guess	NN
,	,
but	CC
it's	JJ
common	JJ
for	IN
a	DT
shared	VBN
host	NN
to	TO
support	VB
Python	NNP
and	CC
MySQL	NNP
with	IN
the	DT
MySQLdb	NNP
module	NN
(	(
e	NN
.	.
g	NN
.	.
,	,
GoDaddy	NNP
does	VBZ
this	DT
)	)
.	.
Try	VB
the	DT
following	JJ
CGI	NNP
script	NN
to	TO
see	VB
if	IN
MySQLdb	NNP
is	VBZ
installed	VBN
.	.
#	#
!	.
/usr	JJ
/bin	JJ
/pythonmodule_name	NN
=	NNP
'	POS
MySQLdb'head	NNP
=	NNP
'	POS
'	''
'	POS
Content-Type	JJ
:	:
text	NN
/html	NN
%s	NNP
is	VBZ
'	POS
'	''
'	POS
%	NN
module_nametry	NN
:	:
__import__(	JJ
module_name	NN
)	)
print	NN
head	NN
+	NNP
'	POS
installed'except	JJ
ImportError	NN
:	:
print	NN
head	NN
+	NNP
'	''
not	RB
installed	VBN
'	''
		
Can	MD
you	PRP
show	VB
us	PRP
your	PRP$
code	NN
?	.
The	DT
example	NN
on	IN
the	DT
Python	NNP
docs	NN
is	VBZ
quite	RB
straightforward	JJ
:	:
groups	NNS
=	VBP
[	JJ
]	NNP
uniquekeys	NNS
=	VBP
[	JJ
]	NN
for	IN
k	NN
,	,
g	NN
in	IN
groupby(	NN
data	NNS
,	,
keyfunc	NN
)	)
:	:
groups.append(	NN
list(	VBZ
g	NN
)	)
)	)
#	#
Store	NNP
group	NN
iterator	NN
as	IN
a	DT
list	NN
uniquekeys.append(	JJ
k	NN
)	)
So	RB
in	IN
your	PRP$
case	NN
,	,
data	NN
is	VBZ
a	DT
list	NN
of	IN
nodes	NNS
,	,
keyfunc	NN
is	VBZ
where	WRB
the	DT
logic	NN
of	IN
your	PRP$
criteria	NNS
function	NN
goes	VBZ
and	CC
then	RB
groupby()	VB
groups	NNS
the	DT
data	NNS
.	.
You	PRP
must	MD
be	VB
careful	JJ
to	TO
sort	VB
the	DT
data	NN
by	IN
the	DT
criteria	NNS
before	IN
you	PRP
call	VBP
groupby	NNS
or	CC
it	PRP
won't	JJ
work	NN
.	.
groupby	VB
method	JJ
actually	RB
just	RB
iterates	VBZ
through	IN
a	DT
list	NN
and	CC
whenever	VB
the	DT
key	NN
changes	VBZ
it	PRP
creates	VBZ
a	DT
new	JJ
group	NN
.	.
		
Absolutely	RB
,	,
especially	RB
dealing	VBG
with	IN
lots	NNS
of	IN
these	DT
permutations	NNS
/combinations	NNS
I	PRP
can	MD
definitely	RB
see	VB
that	IN
the	DT
first	JJ
pass	NN
would	MD
be	VB
an	DT
issue	NN
.	.
Interesting	VBG
implementation	NN
in	IN
python	NN
,	,
though	IN
I	PRP
wrote	VBD
a	DT
nice	JJ
one	CD
in	IN
C	NNP
and	CC
Ocaml	NNP
based	VBN
on	IN
"Algorithm	JJ
515	CD
"	NN
(	(
see	VB
below	IN
)	)
.	.
He	PRP
wrote	VBD
his	PRP$
in	IN
Fortran	NNP
as	IN
it	PRP
was	VBD
common	JJ
back	RB
then	RB
for	IN
all	PDT
the	DT
"Algorithm	NNP
XX	NNP
"	NNP
papers	NNS
,	,
well	RB
,	,
that	DT
assembly	NN
or	CC
c	NN
.	.
I	PRP
had	VBD
to	TO
re-write	VB
it	PRP
and	CC
make	VB
some	DT
small	JJ
improvements	NNS
to	TO
work	VB
with	IN
arrays	NNS
not	RB
ranges	NNS
of	IN
numbers	NNS
.	.
This	DT
one	NN
does	VBZ
random	VB
access	NN
,	,
I'm	NNP
still	RB
working	VBG
on	IN
getting	VBG
some	DT
nice	JJ
implementations	NNS
of	IN
the	DT
ones	NNS
mentioned	VBN
in	IN
Knuth	NNP
4th	CD
volume	NN
fascicle	NN
2	CD
.	.
I'll	NNP
an	DT
explanation	NN
of	IN
how	WRB
this	DT
works	VBZ
to	TO
the	DT
reader	NN
.	.
Though	IN
if	IN
someone	NN
is	VBZ
curious	JJ
,	,
I	PRP
wouldn't	VBP
object	JJ
to	TO
writing	VBG
something	NN
up	RB
.	.
/	VB
*	JJ
*	NNP
[combination	NNP
c	VBZ
n	JJ
p	NN
x	NNP
]	NNP
*	NNP
get	VB
the	DT
[x	NNP
]th	NNP
lexicographically	RB
ordered	VBD
set	NN
of	IN
[p	NNP
]	NNP
elements	NNS
in	IN
[n	NNP
]	NNP
*	NNP
output	NN
is	VBZ
in	IN
[c	NNP
]	NNP
,	,
and	CC
should	MD
be	VB
sizeof(	JJ
int	NN
)	)
*	VBZ
[p	JJ
]	NNP
*	NNP
/void	NNP
combination(	NN
int	NN
*	NNP
c	NN
,	,
int	NN
n	NN
,	,
int	NN
p	NN
,	,
int	NN
x	NN
)	)
{	(
int	NN
i	NN
,	,
r	NN
,	,
k	VB
=	NNP
0	CD
;	:
for(	NN
i	NN
=0	VBP
;i	NN
<p	NNP
-	:
1	CD
;i	JJ
+	NNP
+	NNP
)	)
{	(
c	JJ
[i	NNP
]	NNP
=	NNP
(	(
i	NN
!	.
=	$
0	CD
)	)
?	.
c	JJ
[i	NNP
-	:
1	CD
]	NN
:	:
0	CD
;	:
do	VB
{	(
c	VB
[i	NNP
]	NNP
+	NNP
+	NNP
;	:
r	NN
=	VBZ
choose(	JJ
n-c	JJ
[i	NN
]	NN
,	,
p	JJ
-(	NN
i	NN
+1	NNP
)	)
)	)
;	:
k	CC
=	NNP
k	NNP
+	NNP
r	NN
;	:
}	)
while(	VBP
k	JJ
<	NNP
x	NNP
)	)
;	:
k	CC
=	NNP
k	NNP
-	:
r	NN
;	:
}	)
c	VBP
[p	JJ
-	:
1	CD
]	JJ
=	NNP
c	NN
[p	NNP
-	:
2	CD
]	JJ
+	NNP
x	NNP
-	:
k	NN
;	:
}	)
~	VBP
"Algorithm	JJ
515	CD
:	:
Generation	NN
of	IN
a	DT
Vector	NN
from	IN
the	DT
Lexicographical	NNP
Index	NNP
"	NNP
;	:
Buckles	NNP
,	,
B	NNP
.	.
P	NNP
.	.
,	,
and	CC
Lybanon	NNP
,	,
M	NNP
.	.
ACM	NNP
Transactions	NNPS
on	IN
Mathematical	NNP
Software	NNP
,	,
Vol	NNP
.	.
3	CD
,	,
No	NNP
.	.
2	CD
,	,
June	NNP
1977	CD
.	.
		
I	PRP
uploaded	VBD
it	PRP
and	CC
got	VBD
an	DT
internal	JJ
error	NN
Premature	NNP
end	NN
of	IN
script	NN
headers	NNS
After	IN
much	JJ
playing	NN
around	IN
,	,
I	PRP
found	VBD
that	IN
if	IN
I	PRP
had	VBD
import	NN
cgiimport	NN
cgitb	NN
;	:
cgitb.enable()	CC
import	NN
MySQLdb	NNP
It	PRP
would	MD
give	VB
me	PRP
a	DT
much	RB
more	RBR
useful	JJ
answer	NN
and	CC
say	VBP
that	IN
it	PRP
was	VBD
not	RB
installed	VBN
,	,
you	PRP
can	MD
see	VB
it	PRP
yourself	PRP
-	:
>	NN
http	NN
:	:
/	JJ
/woarl	NNP
.	.
com	NN
/db	NN
.	.
py	NN
Oddly	RB
enough	RB
,	,
this	DT
would	MD
produce	VB
an	DT
error	NN
import	NN
MySQLdbimport	NNP
cgiimport	NN
cgitb	NN
;	:
cgitb.enable()	NN
I	PRP
looked	VBD
at	IN
some	DT
of	IN
the	DT
other	JJ
files	NNS
I	PRP
had	VBD
up	RP
there	RB
and	CC
it	PRP
seems	VBZ
that	IN
library	NN
was	VBD
one	CD
of	IN
the	DT
ones	NNS
I	PRP
had	VBD
already	RB
tried	VBN
.	.
		
The	DT
magic	NN
all	DT
seems	VBZ
to	TO
be	VB
in	IN
visitortime.getTimezoneOffset()	JJ
That's	NNP
cool	NN
,	,
I	PRP
didn't	VBP
know	VB
about	IN
that	DT
.	.
Does	VBZ
it	PRP
work	VB
in	IN
IE	NNP
,	,
etc	FW
?	.
From	IN
there	EX
you	PRP
should	MD
be	VB
able	JJ
to	TO
use	VB
JS	NNP
to	TO
ajax	VB
,	,
set	VB
cookies	NNS
,	,
whatever	WDT
.	.
I'd	NNP
probably	RB
go	VBP
the	DT
cookie	NN
route	NN
myself	PRP
.	.
You'll	CC
need	MD
to	TO
allow	VB
the	DT
user	NN
to	TO
change	VB
it	PRP
though	IN
.	.
We	PRP
tried	VBD
to	TO
use	VB
geolocation	NN
(	(
via	IN
maxmind	NN
)	)
to	TO
do	VB
this	DT
a	DT
while	NN
ago	RB
,	,
and	CC
it	PRP
was	VBD
wrong	JJ
reasonably	RB
often	RB
-	:
enough	JJ
to	TO
make	VB
it	PRP
not	RB
worth	IN
doing	VBG
,	,
so	IN
we	PRP
just	RB
let	VB
the	DT
user	NN
set	VBD
it	PRP
in	IN
their	PRP$
profile	NN
,	,
and	CC
show	VB
a	DT
notice	NN
to	TO
users	NNS
who	WP
haven't	VBP
set	VBN
theirs	JJ
yet	RB
.	.
		
SQL	NN
:	:
SELECT	NNP
u	NN
.	.
id	NN
,	,
u	JJ
.	.
name	NN
,	,
isnull(	JJ
MAX(	NNP
h	NN
.	.
dateCol	NN
)	)
,	,
'	''
1900-01-01	JJ
'	POS
)	)
dateColWithDefault	NN
FROM	NNP
universe	NN
u	NN
LEFT	NNP
JOIN	NNP
history	NN
h	NN
ON	NNP
u	NN
.	.
id	JJ
=h	NN
.	.
id	NN
AND	CC
h	NN
.	.
dateCol	NN
<GETDATE	NN
(	(
)	)
-	:
1	CD
GROUP	NNP
BY	NNP
u	NN
.	.
Id	NNP
,	,
u	NN
.	.
name	NN
		
A	DT
solution	NN
,	,
albeit	IN
one	CD
that	WDT
defers	VBZ
handling	NN
of	IN
the	DT
null	JJ
value	NN
to	TO
the	DT
code	NN
,	,
could	MD
be	VB
:	:
DateTime	NNP
yesterday	NN
=	NNP
DateTime.Now.Date.AddDays(	NNP
-	:
1	CD
)	)
;	:
var	CC
collection	NN
=	NN
from	IN
u	JJ
in	IN
db	NN
.	.
Universe	NNP
select	JJ
new	JJ
{	(
u	JJ
.	.
id	NN
,	,
u	JJ
.	.
name	NN
,	,
MaxDate	NNP
=	NNP
(	(
DateTime	NNP
?	.
)	)
(	(
from	IN
h	NN
in	IN
db	NN
.	.
History	NNP
where	WRB
u	NN
.	.
Id	NNP
=	NNP
=	NNP
h	NN
.	.
Id	NNP
&	CC
&	CC
h	NN
.	.
dateCol	NN
<	NN
yesterday	NN
select	VBP
h	NN
.	.
dateCol	NN
)	)
.	.
Max()	NNP
}	)
;	:
This	DT
does	VBZ
not	RB
produce	VB
exactly	RB
the	DT
same	JJ
SQL	NNP
,	,
but	CC
does	VBZ
provide	VB
the	DT
same	JJ
logical	JJ
result	NN
.	.
Translating	VBG
"complex	JJ
"	NNP
SQL	NNP
queries	NNS
to	TO
LINQ	NNP
is	VBZ
not	RB
always	RB
straightforward	RB
.	.
		
PHP	NNP
variables	NNS
are	VBP
assigned	VBN
by	IN
value	NN
,	,
passed	VBN
to	TO
functions	NNS
by	IN
value	NN
,	,
and	CC
when	WRB
containing	VBG
/representing	VBG
objects	NNS
are	VBP
passed	VBN
by	IN
reference	NN
.	.
You	PRP
can	MD
force	VB
variables	NNS
to	TO
pass	VB
by	IN
reference	NN
using	VBG
an	DT
&	CC
Assigned	VBN
by	IN
value	NN
/reference	NN
example	NN
:	:
$var1	NN
=	NN
"test	NNP
"	NN
;	:
$var2	CC
=	NNP
$var1	NNP
;	:
$var2	NNP
=	NNP
"new	NNP
test	NN
"	NN
;	:
$var3	NNP
=	NNP
&	CC
$var2	NNP
;	:
$var3	NNP
=	NNP
"final	JJ
test	NN
"	NN
;	:
print	NN
(	(
"var1	JJ
:	:
$var1	NN
,	,
var2	NN
:	:
$var2	NN
,	,
var3	NN
:	:
$var3	NN
)	)
;	:
would	MD
output	NN
"var1	VB
:	:
test	NN
,	,
var2	NN
:	:
final	JJ
test	NN
,	,
var3	NN
:	:
final	JJ
test	NN
"	NN
.	.
Passed	VBN
by	IN
value	NN
/reference	NN
exampe	NN
:	:
$var1	JJ
=	NNP
"foo	NNP
"	NNP
;	:
$var2	NNP
=	NNP
"bar	NNP
"	NNP
;	:
changeThem(	NN
$var1	NN
,	,
$var2	NNP
)	)
;	:
print	NN
"var1	NN
:	:
$var1	NN
,	,
var2	NN
:	:
$var2	JJ
"	NN
;	:
function	NN
changeThem(	NN
$var1	NNP
,	,
&	CC
$var2	NNP
)	)
{	(
$var1	JJ
=	NNP
"FOO	NNP
"	NNP
;	:
$var2	NNP
=	NNP
"BAR	NNP
"	NNP
;	:
}	)
would	MD
output	NN
:	:
"var1	NN
:	:
foo	NN
,	,
var2	JJ
BAR	NNP
"	NNP
.	.
Object	NNP
variables	NNS
passed	VBN
by	IN
reference	NN
exampe	NN
:	:
class	NN
Foo	NNP
{	(
public	JJ
$var1	NNPS
;	:
function	NN
__construct()	FW
{	(
$this	SYM
-	:
>var1	NN
=	JJ
"foo	NNP
"	NNP
;	:
}	)
public	JJ
function	NN
printFoo()	NN
{	(
print	NN
$this	SYM
-	:
>var1	NN
;	:
}	)
}	)
$foo	NNP
=	NNP
new	JJ
Foo()	NNP
;	:
changeFoo(	VB
$foo	NNP
)	)
;	:
$foo	SYM
-	:
>printFoo	NN
(	(
)	)
;	:
function	NN
changeFoo(	NN
$foo	NNP
)	)
{	(
$foo	SYM
-	:
>var1	NN
=	JJ
"FOO	NNP
"	NNP
;	:
}	)
Would	MD
output	NN
:	:
"FOO	JJ
"	NN
(	(
that	IN
last	JJ
example	NN
could	MD
be	VB
better	JJR
probably	RB
...	:
)	)
		
Rather	JJR
than	IN
coding	VBG
this	DT
out	IN
,	,
I	PRP
figure	VBP
I'll	JJ
pseudo-code	NN
it	PRP
in	IN
steps	NNS
and	CC
explain	VB
my	PRP$
logic	NN
,	,
so	IN
that	DT
better	JJR
programmers	NNS
can	MD
poke	VB
holes	NNS
in	IN
my	PRP$
logic	NN
if	IN
necessary	JJ
.	.
On	IN
the	DT
first	JJ
step	NN
we	PRP
start	VBP
out	RP
with	IN
a	DT
list	NN
of	IN
numbers	NNS
length	VBP
n	RB
.	.
For	IN
each	DT
number	NN
we	PRP
need	VBP
to	TO
create	VB
a	DT
list	NN
of	IN
length	JJ
n-1	JJ
becuase	NN
we	PRP
aren't	VBP
adding	VBG
a	DT
number	NN
to	TO
itself	PRP
.	.
By	IN
the	DT
end	NN
we	PRP
have	VBP
a	DT
list	NN
of	IN
about	IN
n	NN
sorted	VBD
lists	NNS
that	WDT
was	VBD
generated	VBN
in	IN
O(	NNP
n	FW
^2	NNP
)	)
time	NN
.	.
step	VB
1	CD
(	(
startinglist	NN
)	)
for	IN
each	DT
number	NN
num1	NN
in	IN
startinglist	NN
for	IN
each	DT
number	NN
num2	NN
in	IN
startinglist	JJ
add	NN
num1	JJ
plus	CC
num2	JJ
into	IN
templist	JJ
add	JJ
templist	NN
to	TO
sumlist	VB
return	JJ
sumlist	NN
In	IN
step	NN
2	CD
because	IN
the	DT
lists	NNS
were	VBD
sorted	VBN
by	IN
design	NN
(	(
add	VB
a	DT
number	NN
to	TO
each	DT
element	NN
in	IN
a	DT
sorted	JJ
list	NN
and	CC
the	DT
list	NN
will	MD
still	RB
be	VB
sorted	VBN
)	)
we	PRP
can	MD
simply	RB
do	VB
a	DT
mergesort	NN
by	IN
merging	VBG
each	DT
list	NN
together	RB
rather	RB
than	IN
mergesorting	VBG
the	DT
whole	JJ
lot	NN
.	.
In	IN
the	DT
end	NN
this	DT
should	MD
take	VB
O(	NNP
n	NNP
^2	NNP
)	)
time	NN
.	.
step	VB
2	CD
(	(
sumlist	NN
)	)
create	VBP
an	DT
empty	JJ
list	NN
mergedlist	NN
for	IN
each	DT
list	NN
templist	NN
in	IN
sumlist	NN
set	VBN
mergelist	JJ
equal	JJ
to	TO
:	:
merge(	NN
mergedlist	NN
,	,
templist	NN
)	)
return	NN
mergedlist	VBP
The	DT
merge	NN
method	NN
would	MD
be	VB
then	RB
the	DT
normal	JJ
merge	JJ
step	NN
with	IN
a	DT
check	NN
to	TO
make	VB
sure	JJ
that	IN
there	EX
are	VBP
no	DT
duplicate	NN
sums	NNS
.	.
I	PRP
won't	VBP
write	VB
this	DT
out	RP
because	IN
anyone	NN
can	MD
look	VB
up	RP
mergesort	NN
.	.
So	RB
there's	JJ
my	PRP$
solution	NN
.	.
The	DT
entire	JJ
algorithm	NN
is	VBZ
O(	NNP
n	RB
^2	NNP
)	)
time	NN
.	.
Feel	NNP
free	JJ
to	TO
point	VB
out	RP
any	DT
mistakes	NNS
or	CC
improvements	NNS
.	.
		
It's	NNP
by	IN
value	NN
according	VBG
to	TO
the	DT
PHP	NNP
Documentation	NNP
.	.
By	IN
default	NN
,	,
function	NN
arguments	NNS
are	VBP
passed	VBN
by	IN
value	NN
(	(
so	IN
that	IN
if	IN
the	DT
value	NN
of	IN
the	DT
argument	NN
within	IN
the	DT
function	NN
is	VBZ
changed	VBN
,	,
it	PRP
does	VBZ
not	RB
get	VB
changed	VBN
outside	IN
of	IN
the	DT
function	NN
)	)
.	.
To	TO
allow	VB
a	DT
function	NN
to	TO
modify	VB
its	PRP$
arguments	NNS
,	,
they	PRP
must	MD
be	VB
passed	VBN
by	IN
reference	NN
.	.
To	TO
have	VB
an	DT
argument	NN
to	TO
a	DT
function	NN
always	RB
passed	VBN
by	IN
reference	NN
,	,
prepend	VBP
an	DT
ampersand	NN
(	(
&	CC
)	)
to	TO
the	DT
argument	NN
name	NN
in	IN
the	DT
function	NN
definition	NN
.	.
<	CC
?php	JJ
function	NN
add_some_extra(	NN
&	CC
$string	VBG
)	)
{	(
$string	VBG
.	.
=	NN
'	''
and	CC
something	NN
extra	JJ
.	.
'	''
;	:
}	)
$str	FW
=	NNP
'	POS
This	DT
is	VBZ
a	DT
string	NN
,	,
'	''
;	:
add_some_extra(	IN
$str	NNP
)	)
;	:
echo	JJ
$str	NN
;	:
/	CC
/	VB
outputs	NNS
'	POS
This	DT
is	VBZ
a	DT
string	NN
,	,
and	CC
something	NN
extra	JJ
.	.
'	''
?	.
>	FW
		
Try	NNP
Eclipse	NNP
PDT	NNP
to	TO
setup	VB
an	DT
Eclipse	NNP
environment	NN
that	WDT
has	VBZ
debugging	VBG
features	NNS
like	IN
you	PRP
mentioned	VBD
.	.
The	DT
ability	NN
to	TO
step	VB
into	IN
the	DT
code	NN
is	VBZ
a	DT
much	RB
better	JJR
way	NN
to	TO
debug	VB
then	RB
the	DT
old	JJ
method	NN
of	IN
var_dump	NN
and	CC
print	NN
at	IN
various	JJ
points	NNS
to	TO
see	VB
where	WRB
your	PRP$
flow	NN
goes	VBZ
wrong	JJ
.	.
When	WRB
all	DT
else	RB
fails	VBZ
though	IN
and	CC
all	DT
I	PRP
have	VBP
is	VBZ
SSH	NNP
and	CC
vim	NN
I	PRP
still	RB
var_dump()	VBP
/die	NNP
(	(
)	)
to	TO
find	VB
where	WRB
the	DT
code	NN
goes	VBZ
south	RB
.	.
		
